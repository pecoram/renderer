{"version":3,"mappings":"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","names":["_a","assertTruthy","props","rgbas","tmpElementBounds","w","i","resolvedGlobal","result","__decorate","this"],"sources":["../../../dist/src/main-api/texture-usage-trackers/TextureUsageTracker.js","../../../dist/src/main-api/texture-usage-trackers/ManualCountTextureUsageTracker.js","../../../dist/src/main-api/texture-usage-trackers/FinalizationRegistryTextureUsageTracker.js","../../../dist/src/main-api/RendererMain.js","../../../dist/src/core/animations/CoreAnimation.js","../../../dist/src/core/animations/CoreAnimationController.js","../../../dist/src/core/lib/Matrix3d.js","../../../dist/src/core/CoreNode.js","../../../dist/src/render-drivers/main/MainOnlyNode.js","../../../dist/src/core/scene/Scene.js","../../../dist/src/core/platform.js","../../../dist/src/core/renderers/webgl/shaders/DefaultShader.js","../../../dist/src/core/renderers/webgl/shaders/DefaultShaderBatched.js","../../../dist/src/core/renderers/webgl/shaders/effects/ShaderEffect.js","../../../dist/src/core/renderers/webgl/shaders/DynamicShader.js","../../../dist/src/core/renderers/webgl/shaders/RoundedRectangle.js","../../../dist/src/core/renderers/webgl/shaders/SdfShader.js","../../../dist/src/core/renderers/webgl/shaders/effects/RadiusEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/BorderEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/LinearGradientEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/GrayscaleEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/BorderRightEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/BorderTopEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/BorderBottomEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/BorderLeftEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/GlitchEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/FadeOutEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/RadialGradientEffect.js","../../../dist/src/core/renderers/webgl/shaders/effects/RadialProgressEffect.js","../../../dist/src/core/CoreShaderManager.js","../../../dist/src/core/animations/AnimationManager.js","../../../dist/src/core/textures/ImageTexture.js","../../../dist/src/core/textures/NoiseTexture.js","../../../dist/src/core/CoreTextureManager.js","../../../dist/src/core/text-rendering/TrFontManager.js","../../../dist/src/core/text-rendering/renderers/TextRenderer.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/constants.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getStartConditions.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/PeekableGenerator.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getUnicodeCodepoints.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/measureText.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/layoutText.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/makeRenderWindow.js","../../../dist/src/core/text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js","../../../dist/src/core/text-rendering/renderers/LightningTextTextureRenderer.js","../../../dist/src/core/text-rendering/renderers/CanvasTextRenderer.js","../../../dist/src/core/Stage.js","../../../dist/src/core/CoreTextNode.js","../../../dist/src/render-drivers/main/MainOnlyTextNode.js","../../../dist/src/render-drivers/utils.js","../../../dist/src/render-drivers/main/MainCoreDriver.js","../../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/utils.js","../../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/SharedObject.js","../../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/buffer-struct-utils.js","../../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/ThreadX.js","../../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/BufferStruct.js","../../../dist/src/render-drivers/threadx/NodeStruct.js","../../../dist/src/render-drivers/threadx/SharedNode.js","../../../dist/src/render-drivers/threadx/ThreadXMainAnimationController.js","../../../dist/src/render-drivers/threadx/ThreadXMainNode.js","../../../dist/src/render-drivers/threadx/TextNodeStruct.js","../../../dist/src/render-drivers/threadx/ThreadXMainTextNode.js","../../../dist/src/render-drivers/threadx/ThreadXCoreDriver.js","../../common/CoreWorker.js?importChunkUrl","../../common/AppCoreExtension.js?importChunkUrl","../../index.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Texture Usage Tracker for Usage Based Texture Garbage Collection\n */\nexport class TextureUsageTracker {\n    releaseCallback;\n    constructor(releaseCallback) {\n        this.releaseCallback = releaseCallback;\n    }\n}\n//# sourceMappingURL=TextureUsageTracker.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { TextureUsageTracker } from './TextureUsageTracker.js';\n/**\n * Usage-based Texture Garbage Collection Registry\n */\nexport class ManualCountTextureUsageTracker extends TextureUsageTracker {\n    textureMap = new Map();\n    zeroReferenceTextureSet = new Set();\n    options;\n    constructor(releaseCallback, options) {\n        super(releaseCallback);\n        this.options = {\n            textureCleanupIntervalMs: options.textureCleanupIntervalMs ?? 10000,\n            textureCleanupAgeThreadholdMs: options.textureCleanupAgeThreadholdMs ?? 60000,\n        };\n        // Periodically check for textures that are no longer referenced by any\n        // Nodes and notify RendererMain to release them.\n        setInterval(() => {\n            const now = Date.now();\n            const thresholdMs = this.options.textureCleanupAgeThreadholdMs;\n            for (const textureRefInfo of this.zeroReferenceTextureSet) {\n                if (now - textureRefInfo.lastUpdate > thresholdMs) {\n                    this.releaseCallback(textureRefInfo.id);\n                    this.textureMap.delete(textureRefInfo.id);\n                    this.zeroReferenceTextureSet.delete(textureRefInfo);\n                }\n            }\n        }, this.options.textureCleanupIntervalMs);\n    }\n    registerTexture(texture) {\n        const textureId = texture.options?.id;\n        assertTruthy(textureId, 'Texture must have an id to be registered');\n        if (!this.textureMap.has(textureId)) {\n            const textureRefInfo = {\n                id: textureId,\n                nodeRefCount: 0,\n                lastUpdate: Date.now(),\n            };\n            this.textureMap.set(textureId, textureRefInfo);\n            this.zeroReferenceTextureSet.add(textureRefInfo);\n        }\n    }\n    incrementTextureRefCount(texture) {\n        const textureId = texture.options?.id;\n        assertTruthy(textureId, 'Texture must have an id to be registered');\n        let textureRefInfo = this.textureMap.get(textureId);\n        if (!textureRefInfo) {\n            // Texture has not been registered yet, so register it now.\n            // This may happen if the TextureRef was cleaned up from the registry\n            // but was still alive in memory and eventually re-used.\n            this.registerTexture(texture);\n            textureRefInfo = this.textureMap.get(textureId);\n        }\n        assertTruthy(textureRefInfo, 'Texture must have been registered');\n        if (texture.txType === 'SubTexture') {\n            // If this is a SubTexture, then increment the reference count of the\n            // parent texture as well.\n            this.incrementTextureRefCount(texture.props.texture);\n        }\n        textureRefInfo.nodeRefCount++;\n        textureRefInfo.lastUpdate = Date.now();\n        if (this.zeroReferenceTextureSet.has(textureRefInfo)) {\n            this.zeroReferenceTextureSet.delete(textureRefInfo);\n        }\n    }\n    decrementTextureRefCount(texture) {\n        const textureId = texture.options?.id;\n        assertTruthy(textureId, 'Texture must have an id to be registered');\n        const textureRefInfo = this.textureMap.get(textureId);\n        assertTruthy(textureRefInfo, 'Texture must have been registered');\n        textureRefInfo.nodeRefCount--;\n        textureRefInfo.lastUpdate = Date.now();\n        if (textureRefInfo.nodeRefCount === 0) {\n            this.zeroReferenceTextureSet.add(textureRefInfo);\n        }\n        if (texture.txType === 'SubTexture') {\n            // If this is a SubTexture, then decrement the reference count of the\n            // parent texture as well.\n            this.decrementTextureRefCount(texture.props.texture);\n        }\n    }\n}\n//# sourceMappingURL=ManualCountTextureUsageTracker.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { TextureUsageTracker } from './TextureUsageTracker.js';\nexport class FinalizationRegistryTextureUsageTracker extends TextureUsageTracker {\n    registry;\n    constructor(releaseCallback) {\n        super(releaseCallback);\n        this.registry = new FinalizationRegistry(releaseCallback);\n    }\n    registerTexture(texture) {\n        assertTruthy(texture.options?.id, 'Texture must have an ID to be registered');\n        this.registry.register(texture, texture.options?.id);\n    }\n    incrementTextureRefCount() {\n        // No-op for FinalizationRegistry\n    }\n    decrementTextureRefCount() {\n        // No-op for FinalizationRegistry\n    }\n}\n//# sourceMappingURL=FinalizationRegistryTextureUsageTracker.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ManualCountTextureUsageTracker, } from './texture-usage-trackers/ManualCountTextureUsageTracker.js';\nimport { FinalizationRegistryTextureUsageTracker } from './texture-usage-trackers/FinalizationRegistryTextureUsageTracker.js';\n/**\n * The Renderer Main API\n *\n * @remarks\n * This is the primary class used to configure and operate the Renderer.\n *\n * It is used to create and destroy Nodes, as well as Texture and Shader\n * references.\n *\n * Example:\n * ```ts\n * import { RendererMain, MainCoreDriver } from '@lightningjs/renderer';\n *\n * // Initialize the Renderer\n * const renderer = new RendererMain(\n *   {\n *     appWidth: 1920,\n *     appHeight: 1080\n *   },\n *   'app',\n *   new MainCoreDriver(),\n * );\n * ```\n */\nexport class RendererMain {\n    root = null;\n    driver;\n    canvas;\n    settings;\n    nodes = new Map();\n    nextTextureId = 1;\n    /**\n     * Texture Usage Tracker for Usage Based Texture Garbage Collection\n     *\n     * @remarks\n     * For internal use only. DO NOT ACCESS.\n     */\n    textureTracker;\n    /**\n     * Constructs a new Renderer instance\n     *\n     * @param settings Renderer settings\n     * @param target Element ID or HTMLElement to insert the canvas into\n     * @param driver Core Driver to use\n     */\n    constructor(settings, target, driver) {\n        const resolvedSettings = {\n            appWidth: settings.appWidth || 1920,\n            appHeight: settings.appHeight || 1080,\n            deviceLogicalPixelRatio: settings.deviceLogicalPixelRatio || 1,\n            devicePhysicalPixelRatio: settings.devicePhysicalPixelRatio || window.devicePixelRatio,\n            clearColor: settings.clearColor ?? 0x00000000,\n            coreExtensionModule: settings.coreExtensionModule || null,\n            experimental_FinalizationRegistryTextureUsageTracker: settings.experimental_FinalizationRegistryTextureUsageTracker ?? false,\n            textureCleanupOptions: settings.textureCleanupOptions || {},\n        };\n        this.settings = resolvedSettings;\n        const { appWidth, appHeight, deviceLogicalPixelRatio, devicePhysicalPixelRatio, } = resolvedSettings;\n        const releaseCallback = (textureId) => {\n            this.driver.releaseTexture(textureId);\n        };\n        const useFinalizationRegistryTracker = resolvedSettings.experimental_FinalizationRegistryTextureUsageTracker &&\n            typeof FinalizationRegistry === 'function';\n        this.textureTracker = useFinalizationRegistryTracker\n            ? new FinalizationRegistryTextureUsageTracker(releaseCallback)\n            : new ManualCountTextureUsageTracker(releaseCallback, this.settings.textureCleanupOptions);\n        const deviceLogicalWidth = appWidth * deviceLogicalPixelRatio;\n        const deviceLogicalHeight = appHeight * deviceLogicalPixelRatio;\n        this.driver = driver;\n        const canvas = document.createElement('canvas');\n        this.canvas = canvas;\n        canvas.width = deviceLogicalWidth * devicePhysicalPixelRatio;\n        canvas.height = deviceLogicalHeight * devicePhysicalPixelRatio;\n        canvas.style.width = `${deviceLogicalWidth}px`;\n        canvas.style.height = `${deviceLogicalHeight}px`;\n        let targetEl;\n        if (typeof target === 'string') {\n            targetEl = document.getElementById(target);\n        }\n        else {\n            targetEl = target;\n        }\n        if (!targetEl) {\n            throw new Error('Could not find target element');\n        }\n        // Hook up the driver's callbacks\n        driver.onCreateNode = (node) => {\n            this.nodes.set(node.id, node);\n        };\n        driver.onBeforeDestroyNode = (node) => {\n            this.nodes.delete(node.id);\n        };\n        targetEl.appendChild(canvas);\n    }\n    /**\n     * Initialize the renderer\n     *\n     * @remarks\n     * This method must be called and resolved asyncronously before any other\n     * methods are called.\n     */\n    async init() {\n        await this.driver.init(this, this.settings, this.canvas);\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n        this.root = this.driver.getRootNode();\n    }\n    /**\n     * Create a new scene graph node\n     *\n     * @remarks\n     * A node is the main graphical building block of the Renderer scene graph. It\n     * can be a container for other nodes, or it can be a leaf node that renders a\n     * solid color, gradient, image, or specific texture, using a specific shader.\n     *\n     * To create a text node, see {@link createTextNode}.\n     *\n     * See {@link INode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createNode(props) {\n        return this.driver.createNode(this.resolveNodeDefaults(props));\n    }\n    /**\n     * Create a new scene graph text node\n     *\n     * @remarks\n     * A text node is the second graphical building block of the Renderer scene\n     * graph. It renders text using a specific text renderer that is automatically\n     * chosen based on the font requested and what type of fonts are installed\n     * into an app via a CoreExtension.\n     *\n     * See {@link ITextNode} for more details.\n     *\n     * @param props\n     * @returns\n     */\n    createTextNode(props) {\n        const data = {\n            ...this.resolveNodeDefaults(props),\n            text: props.text ?? '',\n            textRendererOverride: props.textRendererOverride ?? null,\n            fontSize: props.fontSize ?? 16,\n            fontFamily: props.fontFamily ?? 'sans-serif',\n            fontStyle: props.fontStyle ?? 'normal',\n            fontWeight: props.fontWeight ?? 'normal',\n            fontStretch: props.fontStretch ?? 'normal',\n            textAlign: props.textAlign ?? 'left',\n            contain: props.contain ?? 'none',\n            scrollable: props.scrollable ?? false,\n            scrollY: props.scrollY ?? 0,\n            offsetY: props.offsetY ?? 0,\n            letterSpacing: props.letterSpacing ?? 0,\n            lineHeight: props.lineHeight ?? null,\n            debug: props.debug ?? {},\n        };\n        return this.driver.createTextNode(data);\n    }\n    /**\n     * Resolves the default property values for a Node\n     *\n     * @remarks\n     * This method is used internally by the RendererMain to resolve the default\n     * property values for a Node. It is exposed publicly so that it can be used\n     * by Core Driver implementations.\n     *\n     * @param props\n     * @returns\n     */\n    resolveNodeDefaults(props) {\n        const color = props.color ?? 0xffffffff;\n        const colorTl = props.colorTl ?? props.colorTop ?? props.colorLeft ?? color;\n        const colorTr = props.colorTr ?? props.colorTop ?? props.colorRight ?? color;\n        const colorBl = props.colorBl ?? props.colorBottom ?? props.colorLeft ?? color;\n        const colorBr = props.colorBr ?? props.colorBottom ?? props.colorRight ?? color;\n        return {\n            x: props.x ?? 0,\n            y: props.y ?? 0,\n            width: props.width ?? 0,\n            height: props.height ?? 0,\n            alpha: props.alpha ?? 1,\n            clipping: props.clipping ?? false,\n            color,\n            colorTop: props.colorTop ?? color,\n            colorBottom: props.colorBottom ?? color,\n            colorLeft: props.colorLeft ?? color,\n            colorRight: props.colorRight ?? color,\n            colorBl,\n            colorBr,\n            colorTl,\n            colorTr,\n            zIndex: props.zIndex ?? 0,\n            zIndexLocked: props.zIndexLocked ?? 0,\n            parent: props.parent ?? null,\n            texture: props.texture ?? null,\n            shader: props.shader ?? null,\n            // Since setting the `src` will trigger a texture load, we need to set it after\n            // we set the texture. Otherwise, problems happen.\n            src: props.src ?? '',\n            scale: props.scale ?? null,\n            scaleX: props.scaleX ?? props.scale ?? 1,\n            scaleY: props.scaleY ?? props.scale ?? 1,\n            mount: props.mount ?? 0,\n            mountX: props.mountX ?? props.mount ?? 0,\n            mountY: props.mountY ?? props.mount ?? 0,\n            pivot: props.pivot ?? 0.5,\n            pivotX: props.pivotX ?? props.pivot ?? 0.5,\n            pivotY: props.pivotY ?? props.pivot ?? 0.5,\n            rotation: props.rotation ?? 0,\n        };\n    }\n    /**\n     * Destroy a node\n     *\n     * @remarks\n     * This method destroys a node but does not destroy its children.\n     *\n     * @param node\n     * @returns\n     */\n    destroyNode(node) {\n        return this.driver.destroyNode(node);\n    }\n    /**\n     * Create a new texture reference\n     *\n     * @remarks\n     * This method creates a new reference to a texture. The texture is not\n     * loaded until it is used on a node.\n     *\n     * It can be assigned to a node's `texture` property, or it can be used\n     * when creating a SubTexture.\n     *\n     * @param textureType\n     * @param props\n     * @param options\n     * @returns\n     */\n    createTexture(textureType, props, options) {\n        const id = this.nextTextureId++;\n        const desc = {\n            descType: 'texture',\n            txType: textureType,\n            props,\n            options: {\n                ...options,\n                // This ID is used to identify the texture in the CoreTextureManager's\n                // ID Texture Map cache.\n                id,\n            },\n        };\n        this.textureTracker.registerTexture(desc);\n        return desc;\n    }\n    /**\n     * Create a new shader reference\n     *\n     * @remarks\n     * This method creates a new reference to a shader. The shader is not\n     * loaded until it is used on a Node.\n     *\n     * It can be assigned to a Node's `shader` property.\n     *\n     * @param shaderType\n     * @param props\n     * @returns\n     */\n    createShader(shaderType, props) {\n        return {\n            descType: 'shader',\n            shType: shaderType,\n            props: props,\n        };\n    }\n    /**\n     * Get a Node by its ID\n     *\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        return this.nodes.get(id) || null;\n    }\n    toggleFreeze() {\n        throw new Error('Not implemented');\n    }\n    advanceFrame() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Re-render the current frame without advancing any running animations.\n     *\n     * @remarks\n     * Any state changes will be reflected in the re-rendered frame. Useful for\n     * debugging.\n     *\n     * May not do anything if the render loop is running on a separate worker.\n     */\n    rerender() {\n        throw new Error('Not implemented');\n    }\n}\n//# sourceMappingURL=RendererMain.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getTimingFunction } from '../utils.js';\nimport { mergeColorProgress } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimation extends EventEmitter {\n    node;\n    props;\n    settings;\n    propStartValues = {};\n    restoreValues = {};\n    progress = 0;\n    timingFunction;\n    constructor(node, props, settings) {\n        super();\n        this.node = node;\n        this.props = props;\n        this.settings = settings;\n        this.propStartValues = {};\n        Object.keys(props).forEach((propName) => {\n            this.propStartValues[propName] = node[propName];\n        });\n        this.timingFunction = (t) => t;\n        if (settings.easing && typeof settings.easing === 'string') {\n            this.timingFunction = getTimingFunction(settings.easing);\n        }\n    }\n    reset() {\n        this.progress = 0;\n        this.update(0);\n    }\n    restore() {\n        this.reset();\n        Object.keys(this.props).forEach((propName) => {\n            this.node[propName] = this.propStartValues[propName];\n        });\n    }\n    reverse() {\n        this.progress = 0;\n        Object.keys(this.props).forEach((propName) => {\n            // set the start value to the current value\n            const startValue = this.props[propName];\n            const endValue = this.propStartValues[propName];\n            // swap the start and end values\n            this.props[propName] = endValue;\n            this.propStartValues[propName] = startValue;\n        });\n        // restore stop method if we are not looping\n        if (!this.settings.loop) {\n            this.settings.stopMethod = false;\n        }\n    }\n    applyEasing(p, s, e) {\n        return (this.timingFunction(p) || p) * (e - s) + s;\n    }\n    update(dt) {\n        const { duration, loop, easing } = this.settings;\n        if (!duration) {\n            this.emit('finished', {});\n            return;\n        }\n        this.progress += dt / duration;\n        if (this.progress > 1) {\n            this.progress = loop ? 0 : 1;\n            this.emit('finished', {});\n        }\n        Object.keys(this.props).forEach((propName) => {\n            const propValue = this.props[propName];\n            const startValue = this.propStartValues[propName];\n            const endValue = propValue;\n            if (propName.indexOf('color') !== -1) {\n                const progressValue = easing\n                    ? this.timingFunction(this.progress) || this.progress\n                    : this.progress;\n                const colorValue = mergeColorProgress(startValue, endValue, progressValue);\n                this.node[propName] = easing\n                    ? colorValue\n                    : mergeColorProgress(startValue, endValue, this.progress);\n            }\n            else {\n                this.node[propName] = easing\n                    ? this.applyEasing(this.progress, startValue, endValue)\n                    : startValue + (endValue - startValue) * this.progress;\n            }\n        });\n    }\n}\n//# sourceMappingURL=CoreAnimation.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nexport class CoreAnimationController {\n    manager;\n    animation;\n    stoppedPromise = null;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    constructor(manager, animation) {\n        this.manager = manager;\n        this.animation = animation;\n        this.state = 'stopped';\n    }\n    state;\n    start() {\n        this.makeStoppedPromise();\n        this.animation.once('finished', this.finished.bind(this));\n        // prevent registering the same animation twice\n        if (!this.manager.activeAnimations.has(this.animation)) {\n            this.manager.registerAnimation(this.animation);\n        }\n        this.state = 'running';\n        return this;\n    }\n    stop() {\n        this.manager.unregisterAnimation(this.animation);\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n        }\n        this.animation.reset();\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.manager.unregisterAnimation(this.animation);\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        this.stoppedResolve = null;\n        this.animation.restore();\n        return this;\n    }\n    waitUntilStopped() {\n        this.makeStoppedPromise();\n        const promise = this.stoppedPromise;\n        assertTruthy(promise);\n        return promise;\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n    finished() {\n        assertTruthy(this.stoppedResolve);\n        // If the animation is looping, then we need to restart it.\n        const { loop, stopMethod } = this.animation.settings;\n        if (stopMethod === 'reverse') {\n            this.animation.reverse();\n            this.start();\n            return;\n        }\n        // resolve promise\n        this.stoppedResolve();\n        this.stoppedResolve = null;\n        if (loop) {\n            return;\n        }\n        // unregister animation\n        this.manager.unregisterAnimation(this.animation);\n    }\n}\n//# sourceMappingURL=CoreAnimationController.js.map","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n// Matrix3d is a 3x3 matrix in column-major order because that's how WebGL likes it.\n// The matrix is stored in a Float32Array in the following order:\n// | 0 3 6 |\n// | 1 4 7 |\n// | 2 5 8 |\n// The following constants are used to index into the array in a row-major way.\nconst m0 = 0;\nconst m1 = 3;\nconst m2 = 6;\nconst m3 = 1;\nconst m4 = 4;\nconst m5 = 7;\nconst m6 = 2;\nconst m7 = 5;\nconst m8 = 8;\n/**\n * A 3x3 matrix representing a 2D transformation.\n *\n * @remarks\n * The matrix is stored in column-major order in the `data` property which can\n * be passed directly to a WebGL shader uniform.\n *\n * The matrix is stored in a Float32Array in the following index order:\n * | 0 3 6 |\n * | 1 4 7 |\n * | 2 5 8 |\n *\n * Only the first two rows are really used for the transformation. The last row is\n * generally always `[0, 0, 1]` if you only use the 2D transformation methods\n * provided by this class.\n *\n * For convenience, entries in the first two rows can be accessed by the following\n * getter properties:\n * | ta tb tx |\n * | tc td ty |\n * | 0  0  1  |\n */\nexport class Matrix3d {\n    data;\n    /**\n     * Creates a new 3x3 matrix.\n     *\n     * @param entries Row-major 3x3 matrix\n     */\n    constructor(entries) {\n        if (entries) {\n            // Transpose the input matrix so that it's in column-major order.\n            this.data = new Float32Array(9);\n            this.data[m0] = entries[0];\n            this.data[m1] = entries[3];\n            this.data[m2] = entries[6];\n            this.data[m3] = entries[1];\n            this.data[m4] = entries[4];\n            this.data[m5] = entries[7];\n            this.data[m6] = entries[2];\n            this.data[m7] = entries[5];\n            this.data[m8] = entries[8];\n        }\n        else {\n            this.data = new Float32Array(9);\n        }\n    }\n    /**\n     * Returns a temporary matrix that can be used for calculations.\n     *\n     * @remarks\n     * This is useful for avoiding allocations in tight loops.\n     *\n     * The matrix is not guaranteed to be the same between calls.\n     *\n     * @returns\n     */\n    static get temp() {\n        return tempMatrix;\n    }\n    static multiply(a, b, out) {\n        const e0 = a.data[m0] * b.data[m0] +\n            a.data[m1] * b.data[m3] +\n            a.data[m2] * b.data[m6];\n        const e1 = a.data[m0] * b.data[m1] +\n            a.data[m1] * b.data[m4] +\n            a.data[m2] * b.data[m7];\n        const e2 = a.data[m0] * b.data[m2] +\n            a.data[m1] * b.data[m5] +\n            a.data[m2] * b.data[m8];\n        const e3 = a.data[m3] * b.data[m0] +\n            a.data[m4] * b.data[m3] +\n            a.data[m5] * b.data[m6];\n        const e4 = a.data[m3] * b.data[m1] +\n            a.data[m4] * b.data[m4] +\n            a.data[m5] * b.data[m7];\n        const e5 = a.data[m3] * b.data[m2] +\n            a.data[m4] * b.data[m5] +\n            a.data[m5] * b.data[m8];\n        const e6 = a.data[m6] * b.data[m0] +\n            a.data[m7] * b.data[m3] +\n            a.data[m8] * b.data[m6];\n        const e7 = a.data[m6] * b.data[m1] +\n            a.data[m7] * b.data[m4] +\n            a.data[m8] * b.data[m7];\n        const e8 = a.data[m6] * b.data[m2] +\n            a.data[m7] * b.data[m5] +\n            a.data[m8] * b.data[m8];\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = e0;\n        out.data[m1] = e1;\n        out.data[m2] = e2;\n        out.data[m3] = e3;\n        out.data[m4] = e4;\n        out.data[m5] = e5;\n        out.data[m6] = e6;\n        out.data[m7] = e7;\n        out.data[m8] = e8;\n        return out;\n    }\n    static identity(out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = 1;\n        out.data[m1] = 0;\n        out.data[m2] = 0;\n        out.data[m3] = 0;\n        out.data[m4] = 1;\n        out.data[m5] = 0;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static translate(x, y, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = 1;\n        out.data[m1] = 0;\n        out.data[m2] = x;\n        out.data[m3] = 0;\n        out.data[m4] = 1;\n        out.data[m5] = y;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static scale(sx, sy, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = sx;\n        out.data[m1] = 0;\n        out.data[m2] = 0;\n        out.data[m3] = 0;\n        out.data[m4] = sy;\n        out.data[m5] = 0;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static rotate(angle, out) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = cos;\n        out.data[m1] = -sin;\n        out.data[m2] = 0;\n        out.data[m3] = sin;\n        out.data[m4] = cos;\n        out.data[m5] = 0;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static copy(src, dst, transpose) {\n        if (!dst) {\n            dst = new Matrix3d();\n        }\n        dst.data[0] = src.data[0];\n        dst.data[1] = src.data[1];\n        dst.data[2] = src.data[2];\n        dst.data[3] = src.data[3];\n        dst.data[4] = src.data[4];\n        dst.data[5] = src.data[5];\n        dst.data[6] = src.data[6];\n        dst.data[7] = src.data[7];\n        dst.data[8] = src.data[8];\n        return dst;\n    }\n    translate(x, y) {\n        this.data[m2] = this.data[m0] * x + this.data[m1] * y + this.data[m2];\n        this.data[m5] = this.data[m3] * x + this.data[m4] * y + this.data[m5];\n        return this;\n    }\n    scale(sx, sy) {\n        this.data[m0] = this.data[m0] * sx;\n        this.data[m1] = this.data[m1] * sy;\n        this.data[m3] = this.data[m3] * sx;\n        this.data[m4] = this.data[m4] * sy;\n        return this;\n    }\n    rotate(angle) {\n        if (angle === 0 || !((angle % Math.PI) * 2)) {\n            return this;\n        }\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        const e0 = this.data[m0] * cos + this.data[m1] * sin;\n        const e1 = this.data[m1] * cos - this.data[m0] * sin;\n        const e3 = this.data[m3] * cos + this.data[m4] * sin;\n        const e4 = this.data[m4] * cos - this.data[m3] * sin;\n        this.data[m0] = e0;\n        this.data[m1] = e1;\n        this.data[m3] = e3;\n        this.data[m4] = e4;\n        return this;\n    }\n    multiply(other) {\n        return Matrix3d.multiply(this, other, this);\n    }\n    get tx() {\n        return this.data[m2];\n    }\n    get ty() {\n        return this.data[m5];\n    }\n    get ta() {\n        return this.data[m0];\n    }\n    get tb() {\n        return this.data[m1];\n    }\n    get tc() {\n        return this.data[m3];\n    }\n    get td() {\n        return this.data[m4];\n    }\n    transformPoint(x, y) {\n        return [\n            this.data[m0] * x + this.data[m1] * y + this.data[m2],\n            this.data[m3] * x + this.data[m4] * y + this.data[m3],\n        ];\n    }\n}\nconst tempMatrix = new Matrix3d();\n//# sourceMappingURL=Matrix3d.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../utils.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\nexport class CoreNode extends EventEmitter {\n    stage;\n    children = [];\n    props;\n    /**\n     * Recalculation type\n     * 0 - no recalculation\n     * 1 - alpha recalculation\n     * 2 - translate recalculation\n     * 4 - transform recalculation\n     */\n    recalculationType = 6;\n    hasUpdates = true;\n    globalTransform;\n    scaleRotateTransform;\n    localTransform;\n    isComplex = false;\n    constructor(stage, props) {\n        super();\n        this.stage = stage;\n        this.props = {\n            ...props,\n            parent: null,\n        };\n        // Allow for parent to be processed appropriately\n        this.parent = props.parent;\n        this.updateScaleRotateTransform();\n    }\n    //#region Textures\n    loadTexture(textureType, props, options = null) {\n        // First unload any existing texture\n        if (this.props.texture) {\n            this.unloadTexture();\n        }\n        const { txManager } = this.stage;\n        const texture = txManager.loadTexture(textureType, props, options);\n        this.props.texture = texture;\n        this.props.textureOptions = options;\n        // If texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            if (texture.state === 'loaded') {\n                this.onTextureLoaded(texture, texture.dimensions);\n            }\n            else if (texture.state === 'failed') {\n                this.onTextureFailed(texture, texture.error);\n            }\n            texture.on('loaded', this.onTextureLoaded);\n            texture.on('failed', this.onTextureFailed);\n        });\n    }\n    unloadTexture() {\n        if (this.props.texture) {\n            this.props.texture.off('loaded', this.onTextureLoaded);\n            this.props.texture.off('failed', this.onTextureFailed);\n        }\n        this.props.texture = null;\n        this.props.textureOptions = null;\n    }\n    onTextureLoaded = (target, dimensions) => {\n        this.emit('loaded', {\n            type: 'texture',\n            dimensions,\n        });\n    };\n    onTextureFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'texture',\n            error,\n        });\n    };\n    //#endregion Textures\n    loadShader(shaderType, props) {\n        const shManager = this.stage.renderer.getShaderManager();\n        assertTruthy(shManager);\n        const { shader, props: p } = shManager.loadShader(shaderType, props);\n        this.props.shader = shader;\n        this.props.shaderProps = p;\n    }\n    setHasUpdates() {\n        if (!this.props.alpha) {\n            return;\n        }\n        this.hasUpdates = true;\n        let p = this?.props.parent;\n        while (p) {\n            p.hasUpdates = true;\n            p = p?.props.parent;\n        }\n    }\n    /**\n     * 1 - alpha recalculation\n     * 2 - translate recalculation\n     * 4 - transform recalculation\n     * @param type\n     */\n    setRecalculationType(type) {\n        this.recalculationType |= type;\n        this.setHasUpdates();\n    }\n    updateScaleRotateTransform() {\n        this.setRecalculationType(4);\n        this.scaleRotateTransform = Matrix3d.rotate(this.props.rotation, this.scaleRotateTransform).scale(this.props.scaleX, this.props.scaleY);\n        // do transformations when matrix is implemented\n        this.updateLocalTransform();\n    }\n    updateLocalTransform() {\n        assertTruthy(this.scaleRotateTransform);\n        this.setRecalculationType(2);\n        const pivotTranslateX = this.props.pivotX * this.props.width;\n        const pivotTranslateY = this.props.pivotY * this.props.height;\n        const mountTranslateX = this.props.mountX * this.props.width;\n        const mountTranslateY = this.props.mountY * this.props.height;\n        this.localTransform = Matrix3d.translate(pivotTranslateX - mountTranslateX + this.props.x, pivotTranslateY - mountTranslateY + this.props.y, this.localTransform)\n            .multiply(this.scaleRotateTransform)\n            .translate(-pivotTranslateX, -pivotTranslateY);\n    }\n    /**\n     * @todo: test for correct calculation flag\n     * @param delta\n     */\n    update(delta) {\n        assertTruthy(this.localTransform);\n        const parentGlobalTransform = this.parent?.globalTransform;\n        if (parentGlobalTransform) {\n            this.globalTransform = Matrix3d.copy(parentGlobalTransform, this.globalTransform).multiply(this.localTransform);\n        }\n        else {\n            this.globalTransform = Matrix3d.copy(this.localTransform, this.globalTransform);\n        }\n        if (this.children.length) {\n            this.children.forEach((child) => {\n                child.update(delta);\n            });\n        }\n        // reset update flag\n        this.hasUpdates = false;\n        // reset recalculation type\n        this.recalculationType = 0;\n    }\n    renderQuads(renderer, clippingRect) {\n        const { width, height, colorTl, colorTr, colorBl, colorBr, texture, textureOptions, shader, shaderProps, } = this.props;\n        const { zIndex, worldAlpha, globalTransform: gt } = this;\n        assertTruthy(gt);\n        // add to list of renderables to be sorted before rendering\n        renderer.addRenderable({\n            width,\n            height,\n            colorTl,\n            colorTr,\n            colorBl,\n            colorBr,\n            texture,\n            textureOptions,\n            zIndex,\n            shader,\n            shaderProps,\n            alpha: worldAlpha,\n            clippingRect,\n            tx: gt.tx,\n            ty: gt.ty,\n            ta: gt.ta,\n            tb: gt.tb,\n            tc: gt.tc,\n            td: gt.td,\n        });\n        // Calculate absolute X and Y based on all ancestors\n        // renderer.addQuad(absX, absY, w, h, color, texture, textureOptions, zIndex);\n    }\n    //#region Properties\n    get id() {\n        return this.props.id;\n    }\n    get x() {\n        return this.props.x;\n    }\n    set x(value) {\n        if (this.props.x !== value) {\n            this.props.x = value;\n            this.updateLocalTransform();\n        }\n    }\n    get absX() {\n        return (this.props.x +\n            (this.props.parent?.absX || this.props.parent?.globalTransform?.tx || 0));\n    }\n    get absY() {\n        return this.props.y + (this.props.parent?.absY ?? 0);\n    }\n    get y() {\n        return this.props.y;\n    }\n    set y(value) {\n        if (this.props.y !== value) {\n            this.props.y = value;\n            this.updateLocalTransform();\n        }\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        if (this.props.width !== value) {\n            this.props.width = value;\n            this.updateLocalTransform();\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        if (this.props.height !== value) {\n            this.props.height = value;\n            this.updateLocalTransform();\n        }\n    }\n    get scale() {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        return this.scaleX;\n    }\n    set scale(value) {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        this.scaleX = value;\n        this.scaleY = value;\n    }\n    get scaleX() {\n        return this.props.scaleX;\n    }\n    set scaleX(value) {\n        if (this.props.scaleX !== value) {\n            this.props.scaleX = value;\n            this.updateScaleRotateTransform();\n        }\n    }\n    get scaleY() {\n        return this.props.scaleY;\n    }\n    set scaleY(value) {\n        if (this.props.scaleY !== value) {\n            this.props.scaleY = value;\n            this.updateScaleRotateTransform();\n        }\n    }\n    get worldScaleX() {\n        return (this.props.scaleX * (this.props.parent?.worldScaleX ?? 1) ||\n            this.props.scaleX);\n    }\n    get worldScaleY() {\n        return (this.props.scaleY * (this.props.parent?.worldScaleY ?? 1) ||\n            this.props.scaleY);\n    }\n    get mount() {\n        return this.props.mount;\n    }\n    set mount(value) {\n        // if (this.props.mountX !== value || this.props.mountY !== value) {\n        this.props.mountX = value;\n        this.props.mountY = value;\n        this.props.mount = value;\n        this.updateLocalTransform();\n        // }\n    }\n    get mountX() {\n        return this.props.mountX;\n    }\n    set mountX(value) {\n        this.props.mountX = value;\n        this.updateLocalTransform();\n    }\n    get mountY() {\n        return this.props.mountY;\n    }\n    set mountY(value) {\n        this.props.mountY = value;\n        this.updateLocalTransform();\n    }\n    get pivot() {\n        return this.props.pivot;\n    }\n    set pivot(value) {\n        if (this.props.pivotX !== value || this.props.pivotY !== value) {\n            this.props.pivotX = value;\n            this.props.pivotY = value;\n            this.updateLocalTransform();\n        }\n    }\n    get pivotX() {\n        return this.props.pivotX;\n    }\n    set pivotX(value) {\n        this.props.pivotX = value;\n        this.updateLocalTransform();\n    }\n    get pivotY() {\n        return this.props.pivotY;\n    }\n    set pivotY(value) {\n        this.props.pivotY = value;\n        this.updateLocalTransform();\n    }\n    get rotation() {\n        return this.props.rotation;\n    }\n    set rotation(value) {\n        if (this.props.rotation !== value) {\n            this.props.rotation = value;\n            this.updateScaleRotateTransform();\n        }\n    }\n    get alpha() {\n        return this.props.alpha;\n    }\n    set alpha(value) {\n        this.props.alpha = value;\n    }\n    get worldAlpha() {\n        const props = this.props;\n        const parent = props.parent;\n        return props.alpha * (parent?.worldAlpha || 1);\n    }\n    get clipping() {\n        return this.props.clipping;\n    }\n    set clipping(value) {\n        this.props.clipping = value;\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(value) {\n        if (this.props.colorTl !== value ||\n            this.props.colorTr !== value ||\n            this.props.colorBl !== value ||\n            this.props.colorBr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.color = value;\n    }\n    get colorTop() {\n        return this.props.colorTop;\n    }\n    set colorTop(value) {\n        if (this.props.colorTl !== value || this.props.colorTr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n        }\n        this.props.colorTop = value;\n    }\n    get colorBottom() {\n        return this.props.colorBottom;\n    }\n    set colorBottom(value) {\n        if (this.props.colorBl !== value || this.props.colorBr !== value) {\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.colorBottom = value;\n    }\n    get colorLeft() {\n        return this.props.colorLeft;\n    }\n    set colorLeft(value) {\n        if (this.props.colorTl !== value || this.props.colorBl !== value) {\n            this.colorTl = value;\n            this.colorBl = value;\n        }\n        this.props.colorLeft = value;\n    }\n    get colorRight() {\n        return this.props.colorRight;\n    }\n    set colorRight(value) {\n        if (this.props.colorTr !== value || this.props.colorBr !== value) {\n            this.colorTr = value;\n            this.colorBr = value;\n        }\n        this.props.colorRight = value;\n    }\n    get colorTl() {\n        return this.props.colorTl;\n    }\n    set colorTl(value) {\n        this.props.colorTl = value;\n    }\n    get colorTr() {\n        return this.props.colorTr;\n    }\n    set colorTr(value) {\n        this.props.colorTr = value;\n    }\n    get colorBl() {\n        return this.props.colorBl;\n    }\n    set colorBl(value) {\n        this.props.colorBl = value;\n    }\n    get colorBr() {\n        return this.props.colorBr;\n    }\n    set colorBr(value) {\n        this.props.colorBr = value;\n    }\n    // we're only interested in parent zIndex to test\n    // if we should use node zIndex is higher then parent zIndex\n    get zIndexLocked() {\n        return this.props.zIndexLocked || 0;\n    }\n    set zIndexLocked(value) {\n        this.props.zIndexLocked = value;\n    }\n    get zIndex() {\n        const props = this.props;\n        const z = props.zIndex || 0;\n        const p = props.parent?.zIndex || 0;\n        if (props.parent?.zIndexLocked) {\n            return z < p ? z : p;\n        }\n        return z;\n    }\n    set zIndex(value) {\n        this.props.zIndex = value;\n    }\n    get parent() {\n        return this.props.parent;\n    }\n    set parent(newParent) {\n        const oldParent = this.props.parent;\n        if (oldParent === newParent) {\n            return;\n        }\n        this.props.parent = newParent;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"CoreNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n        }\n        this.updateScaleRotateTransform();\n    }\n}\n//# sourceMappingURL=CoreNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { CoreAnimation } from '../../core/animations/CoreAnimation.js';\nimport { CoreAnimationController } from '../../core/animations/CoreAnimationController.js';\nimport { CoreNode } from '../../core/CoreNode.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nlet nextId = 1;\nexport function getNewId() {\n    return nextId++;\n}\nexport class MainOnlyNode extends EventEmitter {\n    rendererMain;\n    stage;\n    id;\n    coreNode;\n    // Prop stores\n    _children = [];\n    _src = '';\n    _parent = null;\n    _texture = null;\n    _shader = null;\n    constructor(props, rendererMain, stage, coreNode) {\n        super();\n        this.rendererMain = rendererMain;\n        this.stage = stage;\n        this.id = coreNode?.id ?? getNewId();\n        this.coreNode =\n            coreNode ||\n                new CoreNode(this.stage, {\n                    id: this.id,\n                    x: props.x,\n                    y: props.y,\n                    width: props.width,\n                    height: props.height,\n                    alpha: props.alpha,\n                    clipping: props.clipping,\n                    color: props.color,\n                    colorTop: props.colorTop,\n                    colorBottom: props.colorBottom,\n                    colorLeft: props.colorLeft,\n                    colorRight: props.colorRight,\n                    colorTl: props.colorTl,\n                    colorTr: props.colorTr,\n                    colorBl: props.colorBl,\n                    colorBr: props.colorBr,\n                    zIndex: props.zIndex,\n                    zIndexLocked: props.zIndexLocked,\n                    scaleX: props.scaleX,\n                    scaleY: props.scaleY,\n                    mountX: props.mountX,\n                    mountY: props.mountY,\n                    mount: props.mount,\n                    pivot: props.pivot,\n                    pivotX: props.pivotX,\n                    pivotY: props.pivotY,\n                    rotation: props.rotation,\n                    parent: null,\n                    shader: null,\n                    shaderProps: null,\n                    texture: null,\n                    textureOptions: null,\n                });\n        // Forward loaded/failed events\n        this.coreNode.on('loaded', this.onTextureLoaded);\n        this.coreNode.on('failed', this.onTextureFailed);\n        // Assign properties to this object\n        this.parent = props.parent;\n        this.shader = props.shader;\n        this.texture = props.texture;\n        this.src = props.src;\n    }\n    get x() {\n        return this.coreNode.x;\n    }\n    set x(value) {\n        this.coreNode.x = value;\n    }\n    get y() {\n        return this.coreNode.y;\n    }\n    set y(value) {\n        this.coreNode.y = value;\n    }\n    get width() {\n        return this.coreNode.width;\n    }\n    set width(value) {\n        this.coreNode.width = value;\n    }\n    get height() {\n        return this.coreNode.height;\n    }\n    set height(value) {\n        this.coreNode.height = value;\n    }\n    get alpha() {\n        return this.coreNode.alpha;\n    }\n    set alpha(value) {\n        this.coreNode.alpha = value;\n    }\n    get clipping() {\n        return this.coreNode.clipping;\n    }\n    set clipping(value) {\n        this.coreNode.clipping = value;\n    }\n    get color() {\n        return this.coreNode.color;\n    }\n    set color(value) {\n        this.coreNode.color = value;\n    }\n    get colorTop() {\n        return this.coreNode.colorTop;\n    }\n    set colorTop(value) {\n        this.coreNode.colorTop = value;\n    }\n    get colorBottom() {\n        return this.coreNode.colorBottom;\n    }\n    set colorBottom(value) {\n        this.coreNode.colorBottom = value;\n    }\n    get colorLeft() {\n        return this.coreNode.colorLeft;\n    }\n    set colorLeft(value) {\n        this.coreNode.colorLeft = value;\n    }\n    get colorRight() {\n        return this.coreNode.colorRight;\n    }\n    set colorRight(value) {\n        this.coreNode.colorRight = value;\n    }\n    get colorTl() {\n        return this.coreNode.colorTl;\n    }\n    set colorTl(value) {\n        this.coreNode.colorTl = value;\n    }\n    get colorTr() {\n        return this.coreNode.colorTr;\n    }\n    set colorTr(value) {\n        this.coreNode.colorTr = value;\n    }\n    get colorBl() {\n        return this.coreNode.colorBl;\n    }\n    set colorBl(value) {\n        this.coreNode.colorBl = value;\n    }\n    get colorBr() {\n        return this.coreNode.colorBr;\n    }\n    set colorBr(value) {\n        this.coreNode.colorBr = value;\n    }\n    get scale() {\n        if (this.scaleX !== this.scaleY) {\n            return null;\n        }\n        return this.coreNode.scaleX;\n    }\n    set scale(value) {\n        // We ignore `null` when it's set.\n        if (value === null) {\n            return;\n        }\n        this.coreNode.scaleX = value;\n        this.coreNode.scaleY = value;\n    }\n    get scaleX() {\n        return this.coreNode.scaleX;\n    }\n    set scaleX(value) {\n        this.coreNode.scaleX = value;\n    }\n    get scaleY() {\n        return this.coreNode.scaleY;\n    }\n    set scaleY(value) {\n        this.coreNode.scaleY = value;\n    }\n    get mount() {\n        return this.coreNode.mount;\n    }\n    set mount(value) {\n        this.coreNode.mount = value;\n    }\n    get mountX() {\n        return this.coreNode.mountX;\n    }\n    set mountX(value) {\n        this.coreNode.mountX = value;\n    }\n    get mountY() {\n        return this.coreNode.mountY;\n    }\n    set mountY(value) {\n        this.coreNode.mountY = value;\n    }\n    get pivot() {\n        return this.coreNode.pivot;\n    }\n    set pivot(value) {\n        this.coreNode.pivot = value;\n    }\n    get pivotX() {\n        return this.coreNode.pivotX;\n    }\n    set pivotX(value) {\n        this.coreNode.pivotX = value;\n    }\n    get pivotY() {\n        return this.coreNode.pivotY;\n    }\n    set pivotY(value) {\n        this.coreNode.pivotY = value;\n    }\n    get rotation() {\n        return this.coreNode.rotation;\n    }\n    set rotation(value) {\n        this.coreNode.rotation = value;\n    }\n    get parent() {\n        return this._parent;\n    }\n    set parent(newParent) {\n        const oldParent = this._parent;\n        this._parent = newParent;\n        this.coreNode.parent = newParent?.coreNode ?? null;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"MainOnlyNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    get zIndex() {\n        return this.coreNode.zIndex;\n    }\n    set zIndex(value) {\n        this.coreNode.zIndex = value;\n    }\n    get zIndexLocked() {\n        return this.coreNode.zIndexLocked;\n    }\n    set zIndexLocked(value) {\n        this.coreNode.zIndexLocked = value;\n    }\n    get src() {\n        return this._src;\n    }\n    set src(imageUrl) {\n        if (this._src === imageUrl) {\n            return;\n        }\n        this._src = imageUrl;\n        if (!imageUrl) {\n            this.texture = null;\n            return;\n        }\n        this.texture = this.rendererMain.createTexture('ImageTexture', {\n            src: imageUrl,\n        });\n    }\n    //#region Texture\n    get texture() {\n        return this._texture;\n    }\n    set texture(texture) {\n        if (this._texture === texture) {\n            return;\n        }\n        if (this._texture) {\n            this.rendererMain.textureTracker.decrementTextureRefCount(this._texture);\n        }\n        if (texture) {\n            this.rendererMain.textureTracker.incrementTextureRefCount(texture);\n        }\n        this._texture = texture;\n        if (texture) {\n            this.coreNode.loadTexture(texture.txType, texture.props, texture.options);\n        }\n        else {\n            this.coreNode.unloadTexture();\n        }\n    }\n    onTextureLoaded = (target, payload) => {\n        this.emit('loaded', payload);\n    };\n    onTextureFailed = (target, payload) => {\n        this.emit('failed', payload);\n    };\n    //#endregion Texture\n    get shader() {\n        return this._shader;\n    }\n    set shader(shader) {\n        if (this._shader === shader) {\n            return;\n        }\n        this._shader = shader;\n        if (shader) {\n            this.coreNode.loadShader(shader.shType, shader.props);\n        }\n    }\n    destroy() {\n        this.emit('beforeDestroy', {});\n        this.parent = null;\n        this.texture = null;\n        this.emit('afterDestroy', {});\n        this.removeAllListeners();\n    }\n    flush() {\n        // No-op\n    }\n    animate(props, settings) {\n        const animation = new CoreAnimation(this.coreNode, props, settings);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n        const controller = new CoreAnimationController(this.stage.animationManager, animation);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return controller;\n    }\n}\n//# sourceMappingURL=MainOnlyNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class Scene {\n    /**\n     * Root node of the scene\n     *\n     * @type {Node}\n     * @memberof Scene\n     */\n    root;\n    constructor(root) {\n        this.root = root;\n    }\n    /**\n     * Get all nodes of a specific type\n     * @param type\n     * @returns\n     */\n    getNodeByType(type) {\n        return [];\n    }\n    /**\n     * Find a node by id\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        return null;\n    }\n    /**\n     * Create a new node\n     * @param parent\n     * @returns\n     */\n    // public createNode(settings: Partial<INodeWritableProps> = {}): NodeTypes {\n    //   return createNode(settings);\n    // }\n    /**\n     * create a new RectangleNode\n     * @param w\n     * @param h\n     * @param parent\n     * @returns\n     */\n    // public rectangle(w: number, h: number, parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new RectangleNode(w, h), parent);\n    // }\n    /**\n     * Create a new CircleNode\n     * @param r\n     * @param parent\n     * @returns\n     */\n    // public circle(r: number, parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new CircleNode(r), parent);\n    // }\n    /**\n     * Create a new TextNode\n     * @param text\n     * @param parent\n     * @returns\n     */\n    // public text(text = '', parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new TextNode(text), parent);\n    // }\n    /**\n     * Setup and attaching Node\n     * @param node\n     * @param parent\n     * @returns\n     */\n    // private create(node: NodeTypes, parent: NodeTypes | null = null): NodeTypes {\n    //   if (!parent) {\n    //     parent = this.root;\n    //   }\n    //   node.parent = parent;\n    //   return node;\n    // }\n    /**\n     * Update the scene\n     * @param delta\n     */\n    update(delta) {\n        this.root.update(delta);\n    }\n}\n//# sourceMappingURL=Scene.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Platform render loop initiator\n */\nexport const startLoop = (stage) => {\n    const loop = () => {\n        // emit('frameStart');\n        stage.drawFrame();\n        requestAnimationFrame(loop);\n    };\n    requestAnimationFrame(loop);\n};\n/**\n * Return unix timestamp\n * @return {number}\n */\nexport const getTimeStamp = () => {\n    return performance ? performance.now() : Date.now();\n};\n//# sourceMappingURL=platform.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nexport class DefaultShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n          vec4 color = texture2D(u_texture, v_textureCoordinate);\n          gl_FragColor = vec4(v_color) * texture2D(u_texture, v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n// import type { Texture } from '../textures/Texture';\nexport class DefaultShaderBatched extends WebGlCoreShader {\n    supportsIndexedTextures = true;\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: [\n                'a_position',\n                'a_textureCoordinate',\n                'a_color',\n                'a_textureIndex',\n            ],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_textures[0]', uniform: 'uniform1iv' },\n            ],\n        });\n    }\n    bindTextures(texture) {\n        const { renderer, gl } = this;\n        if (texture.length > renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS) {\n            throw new Error(`DefaultShaderBatched: Cannot bind more than ${renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS} textures`);\n        }\n        texture.forEach((t, i) => {\n            gl.activeTexture(gl.TEXTURE0 + i);\n            gl.bindTexture(gl.TEXTURE_2D, t.ctxTexture);\n        });\n        const samplers = Array.from(Array(texture.length).keys());\n        this.setUniform('u_textures[0]', samplers);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_textureCoordinate;\n      attribute vec2 a_position;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      void main(){\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n        v_textureIndex = a_textureIndex;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: (textureUnits) => `\n      #define txUnits ${textureUnits}\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_image;\n      uniform sampler2D u_textures[txUnits];\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      vec4 sampleFromTexture(sampler2D textures[${textureUnits}], int idx, vec2 uv) {\n        ${Array.from(Array(textureUnits).keys())\n            .map((idx) => `\n          ${idx !== 0 ? 'else ' : ''}if (idx == ${idx}) {\n            return texture2D(textures[${idx}], uv);\n          }\n        `)\n            .join('')}\n        return texture2D(textures[0], uv);\n      }\n\n      void main(){\n        gl_FragColor = vec4(v_color) * sampleFromTexture(u_textures, int(v_textureIndex), v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShaderBatched.js.map","export class ShaderEffect {\n    priority = 1;\n    name = '';\n    ref;\n    target;\n    passParameters = '';\n    declaredUniforms = '';\n    uniformInfo = {};\n    static uniforms = {};\n    static methods;\n    static onShaderMask;\n    static onColorize;\n    static onEffectMask;\n    static getEffectKey(props) {\n        return '';\n    }\n    static getMethodParameters(uniforms, props) {\n        const res = [];\n        for (const u in uniforms) {\n            const uni = uniforms[u];\n            let define = '';\n            if (uni.size) {\n                define = `[${uni.size(props)}]`;\n            }\n            res.push(`${uni.type} ${u}${define}`);\n        }\n        return res.join(',');\n    }\n    constructor(options) {\n        const { ref, target, props = {} } = options;\n        this.ref = ref;\n        this.target = target;\n        const uniformInfo = {};\n        const passParameters = [];\n        let declaredUniforms = '';\n        const uniforms = this.constructor.uniforms || {};\n        for (const u in uniforms) {\n            const unif = uniforms[u];\n            const uniType = unif.type;\n            //make unique uniform name\n            const uniformName = `${ref}_${u}`;\n            let define = '';\n            if (unif.size) {\n                define = `[${unif.size(props)}]`;\n            }\n            passParameters.push(uniformName);\n            declaredUniforms += `uniform ${uniType} ${uniformName}${define};`;\n            uniformInfo[u] = { name: uniformName, uniform: uniforms[u].method };\n        }\n        this.passParameters = passParameters.join(',');\n        this.declaredUniforms = declaredUniforms;\n        this.uniformInfo = uniformInfo;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n    static makeEffectKey(props) {\n        return false;\n    }\n}\n//# sourceMappingURL=ShaderEffect.js.map","import { WebGlCoreShader, } from '../WebGlCoreShader.js';\nimport { ShaderEffect } from './effects/ShaderEffect.js';\nexport class DynamicShader extends WebGlCoreShader {\n    effects = [];\n    constructor(renderer, props, effectContructors) {\n        const shader = DynamicShader.createShader(props, effectContructors);\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_alpha', uniform: 'uniform1f' },\n                ...shader.uniforms,\n            ],\n            shaderSources: {\n                vertex: shader.vertex,\n                fragment: shader.fragment,\n            },\n        });\n        this.effects = shader.effects;\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const effects = this.renderer.shManager.getRegisteredEffects();\n        props.effects?.forEach((eff, index) => {\n            const effect = this.effects[index];\n            const fxClass = effects[effect.name];\n            const props = eff.props ?? {};\n            const uniInfo = effect.uniformInfo;\n            Object.keys(props).forEach((p) => {\n                const fxProp = fxClass.uniforms[p];\n                const propInfo = uniInfo[p];\n                let value = fxProp.validator\n                    ? fxProp.validator(props[p], props)\n                    : props[p];\n                if (Array.isArray(value)) {\n                    value = new Float32Array(value);\n                }\n                this.setUniform(propInfo.name, value);\n            });\n        });\n    }\n    static createShader(props, effectContructors) {\n        //counts duplicate effects\n        const effectNameCount = {};\n        const methods = {};\n        let declareUniforms = '';\n        const uniforms = [];\n        const uFx = [];\n        const effects = props.effects.map((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            effectNameCount[key] = effectNameCount[key] ? ++effectNameCount[key] : 1;\n            const nr = effectNameCount[key];\n            if (nr === 1) {\n                uFx.push({ key, type: effect.type, props: effect.props });\n            }\n            //initialize new effect class;\n            const fxClass = new baseClass({\n                ref: `${key}${nr === 1 ? '' : nr}`,\n                target: key,\n                props: effect.props,\n            });\n            declareUniforms += fxClass.declaredUniforms;\n            uniforms.push(...Object.values(fxClass.uniformInfo));\n            return fxClass;\n        });\n        //build source\n        let effectMethods = '';\n        uFx?.forEach((fx) => {\n            const fxClass = effectContructors[fx.type];\n            const fxProps = fxClass.resolveDefaults((fx.props ?? {}));\n            const remap = [];\n            for (const m in fxClass.methods) {\n                let cm = m;\n                const fxMethod = fxClass.methods[m];\n                if (methods[m] && methods[m] !== fxMethod) {\n                    cm = DynamicShader.resolveMethodDuplicate(m, fxMethod, methods);\n                }\n                methods[cm] = fxMethod.replace('function', cm);\n                remap.push({ m, cm });\n            }\n            let onShaderMask = fxClass.onShaderMask instanceof Function\n                ? fxClass.onShaderMask(fxProps)\n                : fxClass.onShaderMask;\n            let onColorize = fxClass.onColorize instanceof Function\n                ? fxClass.onColorize(fxProps)\n                : fxClass.onColorize;\n            let onEffectMask = fxClass.onEffectMask instanceof Function\n                ? fxClass.onEffectMask(fxProps)\n                : fxClass.onEffectMask;\n            remap.forEach((r) => {\n                const { m, cm } = r;\n                const reg = new RegExp(`\\\\$${m}`, 'g');\n                if (onShaderMask) {\n                    onShaderMask = onShaderMask.replace(reg, cm);\n                }\n                if (onColorize) {\n                    onColorize = onColorize.replace(reg, cm);\n                }\n                if (onEffectMask) {\n                    onEffectMask = onEffectMask.replace(reg, cm);\n                }\n            });\n            const methodParameters = fxClass.getMethodParameters(fxClass.uniforms, fxProps);\n            const pm = methodParameters.length > 0 ? `, ${methodParameters}` : '';\n            if (onShaderMask) {\n                effectMethods += `\n        float fx_${fx.key}_onShaderMask(float shaderMask ${pm}) {\n          ${onShaderMask}\n        }\n        `;\n            }\n            if (onColorize) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onColorize(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onColorize}\n          }\n        `;\n            }\n            if (onEffectMask) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onEffectMask(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onEffectMask}\n          }\n        `;\n            }\n        });\n        let sharedMethods = '';\n        for (const m in methods) {\n            sharedMethods += methods[m];\n        }\n        //fill main functions\n        let currentMask = `mix(shaderColor, maskColor, clamp(-(lng_DefaultMask), 0.0, 1.0))`;\n        let drawEffects = `\n\n    `;\n        for (let i = 0; i < effects.length; i++) {\n            const current = effects[i];\n            const pm = current.passParameters.length > 0 ? `, ${current.passParameters}` : '';\n            const currentClass = effectContructors[current.name];\n            if (currentClass.onShaderMask) {\n                drawEffects += `\n        shaderMask = fx_${current.target}_onShaderMask(shaderMask ${pm});\n        `;\n            }\n            if (currentClass.onColorize) {\n                drawEffects += `\n        maskColor = fx_${current.target}_onColorize(shaderMask, maskColor, shaderColor${pm});\n        `;\n            }\n            if (currentClass.onEffectMask) {\n                currentMask = `fx_${current.target}_onEffectMask(shaderMask, maskColor, shaderColor${pm})`;\n            }\n            const next = effects[i + 1];\n            if (next === undefined ||\n                effectContructors[next.name].onEffectMask) {\n                drawEffects += `\n          shaderColor = ${currentMask};\n        `;\n            }\n        }\n        return {\n            effects,\n            uniforms,\n            fragment: DynamicShader.fragment(declareUniforms, sharedMethods, effectMethods, drawEffects),\n            vertex: DynamicShader.vertex(),\n        };\n    }\n    static resolveMethodDuplicate(key, effectMethod, methodCollection, increment = 0) {\n        const m = key + (increment > 0 ? increment : '');\n        if (methodCollection[m] && methodCollection[m] !== effectMethod) {\n            return this.resolveMethodDuplicate(key, effectMethod, methodCollection, ++increment);\n        }\n        return m;\n    }\n    static resolveDefaults(props, effectContructors) {\n        return {\n            effects: (props.effects ?? []).map((effect) => ({\n                type: effect.type,\n                props: effectContructors[effect.type].resolveDefaults((effect.props || {})),\n            })),\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n            $alpha: 0,\n        };\n    }\n    static makeCacheKey(props, effectContructors) {\n        let fx = '';\n        props.effects?.forEach((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            fx += `,${key}`;\n        });\n        return `DynamicShader${fx}`;\n    }\n    static z$__type__Props;\n    static vertex = () => `\n    # ifdef GL_FRAGMENT_PRESICISON_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    attribute vec2 a_textureCoordinate;\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    attribute float a_textureIndex;\n\n    uniform vec2 u_resolution;\n    uniform float u_pixelRatio;\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n    varying float v_textureIndex;\n\n    void main(){\n      vec2 normalized = a_position * u_pixelRatio / u_resolution;\n      vec2 zero_two = normalized * 2.0;\n      vec2 clip_space = zero_two - 1.0;\n\n      // pass to fragment\n      v_color = a_color;\n      v_textureCoordinate = a_textureCoordinate;\n      v_textureIndex = a_textureIndex;\n\n      // flip y\n      gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n    }\n  `;\n    static fragment = (uniforms, methods, effectMethods, drawEffects) => `\n    # ifdef GL_FRAGMENT_PRESICISON_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    #define PI 3.14159265359\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_dimensions;\n    uniform float u_alpha;\n    uniform float u_radius;\n    uniform sampler2D u_texture;\n    uniform float u_pixelRatio;\n\n    ${uniforms}\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n\n    ${methods}\n\n    ${effectMethods}\n\n    void main() {\n      vec2 p = v_textureCoordinate.xy * u_dimensions - u_dimensions * 0.5;\n      vec2 d = abs(p) - (u_dimensions) * 0.5;\n      float lng_DefaultMask = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\n      vec4 shaderColor = vec4(0.0);\n      float shaderMask = lng_DefaultMask;\n\n      vec4 maskColor = texture2D(u_texture, v_textureCoordinate) * v_color;\n\n      shaderColor = mix(shaderColor, maskColor, clamp(-(lng_DefaultMask + 0.5), 0.0, 1.0));\n\n      ${drawEffects}\n\n      gl_FragColor = shaderColor * u_alpha;\n    }\n  `;\n}\n//# sourceMappingURL=DynamicShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader, } from '../WebGlCoreShader.js';\n/**\n * Similar to the {@link DefaultShader} but cuts out 4 rounded rectangle corners\n * as defined by the specified corner {@link RoundedRectangleProps.radius}\n */\nexport class RoundedRectangle extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_radius', uniform: 'uniform1f' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius || 10,\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n        };\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        this.setUniform('u_radius', props.radius);\n    }\n    canBatchShaderProps(propsA, propsB) {\n        return (propsA.radius === propsB.radius &&\n            propsA.$dimensions.width === propsB.$dimensions.width &&\n            propsA.$dimensions.height === propsB.$dimensions.height);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform vec2 u_dimensions;\n      uniform float u_radius;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n\n      float fillMask(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n\n      void main() {\n        vec4 color = texture2D(u_texture, v_textureCoordinate) * v_color;\n        vec2 halfDimensions = u_dimensions * 0.5;\n\n        float d = boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions + 0.5, u_radius);\n        gl_FragColor = mix(vec4(0.0), color, fillMask(d));\n      }\n    `,\n    };\n}\n//# sourceMappingURL=RoundedRectangle.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../lib/utils.js';\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nconst IDENTITY_MATRIX_3x3 = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n/**\n * SdfShader supports multi-channel and single-channel signed distance field textures.\n *\n * @remarks\n * This Shader is used by the {@link SdfTextRenderer}. Do not use thie Shader\n * directly. Instead create a Text Node and assign a SDF font family to it.\n *\n * @internalRemarks\n * The only thing this shader does to support multi-channel SDFs is to\n * add a median function to the fragment shader. If this one function call\n * ends up being a performance bottleneck we can always look at ways to\n * remove it.\n */\nexport class SdfShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_transform', uniform: 'uniformMatrix3fv' },\n                { name: 'u_scrollY', uniform: 'uniform1f' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_color', uniform: 'uniform4fv' },\n                { name: 'u_size', uniform: 'uniform1f' },\n                { name: 'u_distanceRange', uniform: 'uniform1f' },\n                { name: 'u_debug', uniform: 'uniform1i' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const resolvedProps = SdfShader.resolveDefaults(props);\n        for (const key in resolvedProps) {\n            if (key === 'transform') {\n                this.setUniform('u_transform', false, resolvedProps[key]);\n            }\n            else if (key === 'scrollY') {\n                this.setUniform('u_scrollY', resolvedProps[key]);\n            }\n            else if (key === 'color') {\n                const components = getNormalizedRgbaComponents(resolvedProps.color);\n                this.setUniform('u_color', components);\n            }\n            else if (key === 'size') {\n                this.setUniform('u_size', resolvedProps[key]);\n            }\n            else if (key === 'distanceRange') {\n                this.setUniform('u_distanceRange', resolvedProps[key]);\n            }\n            else if (key === 'debug') {\n                this.setUniform('u_debug', resolvedProps[key] ? 1.0 : 0.0);\n            }\n        }\n    }\n    static resolveDefaults(props = {}) {\n        return {\n            transform: props.transform ?? IDENTITY_MATRIX_3x3,\n            scrollY: props.scrollY ?? 0,\n            color: props.color ?? 0xffffffff,\n            size: props.size ?? 16,\n            distanceRange: props.distanceRange ?? 1.0,\n            debug: props.debug ?? false,\n        };\n    }\n    static shaderSources = {\n        vertex: `\n      // an attribute is an input (in) to a vertex shader.\n      // It will receive data from a buffer\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n\n      uniform vec2 u_resolution;\n      uniform mat3 u_transform;\n      uniform float u_scrollY;\n      uniform float u_pixelRatio;\n      uniform float u_size;\n\n      varying vec2 v_texcoord;\n\n      void main() {\n        vec2 scrolledPosition = a_position * u_size - vec2(0, u_scrollY);\n        vec2 transformedPosition = (u_transform * vec3(scrolledPosition, 1)).xy;\n        gl_Position = vec4((transformedPosition * u_pixelRatio / u_resolution * 2.0 - 1.0) * vec2(1, -1), 0, 1);\n        v_texcoord = a_textureCoordinate;\n      }\n    `,\n        fragment: `\n      precision highp float;\n\n      uniform vec4 u_color;\n      uniform sampler2D u_texture;\n      uniform float u_distanceRange;\n      uniform float u_pixelRatio;\n      uniform int u_debug;\n\n      varying vec2 v_texcoord;\n\n      float median(float r, float g, float b) {\n          return max(min(r, g), min(max(r, g), b));\n      }\n\n      void main() {\n          vec3 sample = texture2D(u_texture, v_texcoord).rgb;\n          if (u_debug == 1) {\n            gl_FragColor = vec4(sample.r, sample.g, sample.b, 1.0);\n            return;\n          }\n          float scaledDistRange = u_distanceRange * u_pixelRatio;\n          float sigDist = scaledDistRange * (median(sample.r, sample.g, sample.b) - 0.5);\n          float opacity = clamp(sigDist + 0.5, 0.0, 1.0) * u_color.a;\n\n          // Build the final color.\n          // IMPORTANT: We must premultiply the color by the alpha value before returning it.\n          gl_FragColor = vec4(u_color.r * opacity, u_color.g * opacity, u_color.b * opacity, opacity);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=SdfShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor with rounded corners similar to {@link RoundedRectangle}\n */\nexport class RadiusEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radius';\n    static getEffectKey() {\n        return `radius`;\n    }\n    static uniforms = {\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: (value) => {\n                let r = value;\n                if (Array.isArray(r)) {\n                    if (r.length === 2) {\n                        r = [r[0], r[1], r[0], r[1]];\n                    }\n                    else if (r.length === 3) {\n                        r = [r[0], r[1], r[2], r[0]];\n                    }\n                    else if (r.length !== 4) {\n                        r = [r[0], r[0], r[0], r[0]];\n                    }\n                }\n                else if (typeof r === 'number') {\n                    r = [r, r, r, r];\n                }\n                return r;\n            },\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius ?? 10,\n        };\n    }\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  float r = radius[0] * step(v_textureCoordinate.x, 0.5) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[1] * step(0.5, v_textureCoordinate.x) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[2] * step(0.5, v_textureCoordinate.x) * step(0.5, v_textureCoordinate.y);\n  r = r + radius[3] * step(v_textureCoordinate.x, 0.5) * step(0.5, v_textureCoordinate.y);\n  return $boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions, r);\n  `;\n    static onEffectMask = `\n  return mix(vec4(0.0), maskColor, $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=RadiusEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderEffect renders a border along all edges of an element\n */\nexport class BorderEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'border';\n    static getEffectKey() {\n        return `border`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static onEffectMask = `\n  float mask = clamp(shaderMask + width, 0.0, 1.0) - clamp(shaderMask, 0.0, 1.0);\n  return mix(shaderColor, maskColor, mask);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Linear Gradient effect over a effect mask\n */\nexport class LinearGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'linearGradient';\n    static getEffectKey(props) {\n        return `linearGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops;\n        if (!stops) {\n            stops = [];\n            const calc = colors.length - 1;\n            for (let i = 0; i < colors.length; i++) {\n                stops.push(i * (1 / calc));\n            }\n        }\n        return {\n            colors,\n            stops,\n            angle: props.angle ?? 0,\n        };\n    }\n    static uniforms = {\n        angle: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                const cols = rgbas.map((rgbas) => getNormalizedRgbaComponents(rgbas));\n                return cols.reduce((acc, val) => acc.concat(val), []);\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            validator: (value, props) => {\n                const colors = props.colors ?? [];\n                let stops = value;\n                const tmp = value;\n                if (stops.length === 0 || (stops && stops.length !== colors.length)) {\n                    for (let i = 0; i < colors.length; i++) {\n                        if (stops[i]) {\n                            tmp[i] = stops[i];\n                            if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                                tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                            }\n                        }\n                        else {\n                            tmp[i] = i * (1 / (colors.length - 1));\n                        }\n                    }\n                    stops = tmp;\n                }\n                return tmp;\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static methods = {\n        fromLinear: `\n      vec4 function(vec4 linearRGB) {\n        vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n        vec4 lower = linearRGB * vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        toLinear: `\n      vec4 function(vec4 sRGB) {\n        vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\n        vec4 lower = sRGB/vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        calcPoint: `\n      vec2 function(float d, float angle) {\n        return d * vec2(cos(angle), sin(angle)) + (u_dimensions * 0.5);\n      }\n    `,\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      float a = angle - (PI / 180.0 * 90.0);\n      float lineDist = abs(u_dimensions.x * cos(a)) + abs(u_dimensions.y * sin(a));\n      vec2 f = $calcPoint(lineDist * 0.5, a);\n      vec2 t = $calcPoint(lineDist * 0.5, a + PI);\n      vec2 gradVec = t - f;\n      float dist = dot(v_textureCoordinate.xy * u_dimensions - f, gradVec) / dot(gradVec, gradVec);\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = $fromLinear(mix($toLinear(colors[0]), $toLinear(colors[1]), stopCalc));\n      for(int i = 1; i < ${colors}-1; i++) {\n        stopCalc = (dist - stops[i]) / (stops[i + 1] - stops[i]);\n        colorOut = mix(colorOut, colors[i + 1], clamp(stopCalc, 0.0, 1.0));\n      }\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=LinearGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect } from './ShaderEffect.js';\n/**\n * Grayscale effect grayscales the color values of the current mask color\n */\nexport class GrayscaleEffect extends ShaderEffect {\n    name = 'grayscale';\n    static getEffectKey() {\n        return `grayscale`;\n    }\n    static onColorize = `\n    vec3 color = pow(maskColor.rgb, vec3(2.0));\n    float gray = dot(color, vec3(0.2126, 0.7152, 0.0722));\n    float gammaGray = sqrt(gray);\n    return vec4(gammaGray, gammaGray, gammaGray, 1.0);\n  `;\n}\n//# sourceMappingURL=GrayscaleEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the right side of an element\n */\nexport class BorderRightEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderRight';\n    static getEffectKey() {\n        return `borderRight`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(u_dimensions.x - width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderRightEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the top side of an element\n */\nexport class BorderTopEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderTop';\n    static getEffectKey() {\n        return `borderTop`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderTopEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the bottom side of an element\n */\nexport class BorderBottomEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderBottom';\n    static getEffectKey() {\n        return `borderBottom`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, u_dimensions.y - width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderBottomEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the left of an element\n */\nexport class BorderLeftEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderLeft';\n    static getEffectKey() {\n        return `borderLeft`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderLeftEffect.js.map","import { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Renders a Glitch effect using the incoming texture\n */\nexport class GlitchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'glitch';\n    static getEffectKey(props) {\n        return `glitch`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amplitude: props.amplitude ?? 0.2,\n            narrowness: props.narrowness ?? 4.0,\n            blockiness: props.blockiness ?? 2.0,\n            minimizer: props.minimizer ?? 8.0,\n            time: props.time ?? Date.now(),\n        };\n    }\n    static uniforms = {\n        amplitude: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        narrowness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        blockiness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        minimizer: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        time: {\n            value: 0,\n            method: 'uniform1f',\n            validator: (value) => {\n                return (Date.now() - value) % 1000;\n            },\n            type: 'float',\n        },\n    };\n    static methods = {\n        rand: `\n      float function(vec2 p, float time) {\n        float t = floor(time * 20.) / 10.;\n        return fract(sin(dot(p, vec2(t * 12.9898, t * 78.233))) * 43758.5453);\n      }\n    `,\n        noise: `\n      float function(vec2 uv, float blockiness, float time) {\n        vec2 lv = fract(uv);\n        vec2 id = floor(uv);\n\n        float n1 = rand(id, time);\n        float n2 = rand(id+vec2(1,0), time);\n        float n3 = rand(id+vec2(0,1), time);\n        float n4 = rand(id+vec2(1,1), time);\n        vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n        return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n      }\n    `,\n        fbm: `\n      float function(vec2 uv, int count, float blockiness, float complexity, float time) {\n        float val = 0.0;\n        float amp = 0.5;\n        const int MAX_ITERATIONS = 10;\n\n        for(int i = 0; i < MAX_ITERATIONS; i++) {\n          if(i >= count) {break;}\n          val += amp * noise(uv, blockiness, time);\n          amp *= 0.5;\n          uv *= complexity;\n        }\n        return val;\n      }\n    `,\n    };\n    static onColorize = `\n    vec2 uv = v_textureCoordinate.xy;\n    float aspect = u_dimensions.x / u_dimensions.y;\n    vec2 a = vec2(uv.x * aspect , uv.y);\n    vec2 uv2 = vec2(a.x / u_dimensions.x, exp(a.y));\n\n    float shift = amplitude * pow($fbm(uv2, 4, blockiness, narrowness, time), minimizer);\n    float colR = texture2D(u_texture, vec2(uv.x + shift, uv.y)).r * (1. - shift);\n    float colG = texture2D(u_texture, vec2(uv.x - shift, uv.y)).g * (1. - shift);\n    float colB = texture2D(u_texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n\n    vec3 f = vec3(colR, colG, colB);\n    return vec4(f, texture2D(u_texture, vec2(uv.x - shift, uv.y)).a);\n  `;\n}\n//# sourceMappingURL=GlitchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class FadeOutEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'fadeOut';\n    static getEffectKey() {\n        return `fadeOut`;\n    }\n    static uniforms = {\n        fade: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: (value) => {\n                let r = value;\n                if (Array.isArray(r)) {\n                    if (r.length === 2) {\n                        r = [r[0], r[1], r[0], r[1]];\n                    }\n                    else if (r.length === 3) {\n                        r = [r[0], r[1], r[2], r[0]];\n                    }\n                    else if (r.length !== 4) {\n                        r = [r[0], r[0], r[0], r[0]];\n                    }\n                }\n                else if (typeof r === 'number') {\n                    r = [r, r, r, r];\n                }\n                return r;\n            },\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            fade: props.fade ?? 10,\n        };\n    }\n    static onColorize = `\n  vec2 point = v_textureCoordinate.xy * u_dimensions.xy;\n  vec2 pos1;\n  vec2 pos2;\n  vec2 d;\n  float c;\n  vec4 result = maskColor;\n\n\n  if(fade[0] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x, point.y + fade[0]);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[1] > 0.0) {\n    pos1 = vec2(point.x - u_dimensions.x - fade[1], v_textureCoordinate.y);\n    pos2 = vec2(point.x - u_dimensions.x, v_textureCoordinate.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[2] > 0.0) {\n    pos1 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y - fade[2]);\n    pos2 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[3] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x + fade[3], point.y);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  return result;\n  `;\n}\n//# sourceMappingURL=FadeOutEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class RadialGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialGradient';\n    static getEffectKey(props) {\n        return `radialGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops;\n        if (!stops) {\n            stops = [];\n            const calc = colors.length - 1;\n            for (let i = 0; i < colors.length; i++) {\n                stops.push(i * (1 / calc));\n            }\n        }\n        return {\n            colors,\n            stops,\n            width: props.width ?? 0,\n            height: props.height ?? props.width ?? 0,\n            pivot: props.pivot ?? [0.5, 0.5],\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        pivot: {\n            value: [0.5, 0.5],\n            method: 'uniform2fv',\n            type: 'vec2',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                const cols = rgbas.map((rgbas) => getNormalizedRgbaComponents(rgbas));\n                return cols.reduce((acc, val) => acc.concat(val), []);\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            validator: (value, props) => {\n                const colors = props.colors ?? [];\n                let stops = value;\n                const tmp = value;\n                if (stops.length === 0 || (stops && stops.length !== colors.length)) {\n                    for (let i = 0; i < colors.length; i++) {\n                        if (stops[i]) {\n                            tmp[i] = stops[i];\n                            if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                                tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                            }\n                        }\n                        else {\n                            tmp[i] = i * (1 / (colors.length - 1));\n                        }\n                    }\n                    stops = tmp;\n                }\n                return tmp;\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      vec2 point = v_textureCoordinate.xy * u_dimensions;\n      vec2 projection = vec2(pivot.x * u_dimensions.x, pivot.y * u_dimensions.y);\n\n      float dist = length((point - projection) / vec2(width, height));\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = mix(colors[0], colors[1], stopCalc);\n      for(int i = 1; i < ${colors}-1; i++) {\n        stopCalc = (dist - stops[i]) / (stops[i + 1] - stops[i]);\n        colorOut = mix(colorOut, colors[i + 1], clamp(stopCalc, 0.0, 1.0));\n      }\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=RadialGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The RadialProgressEffect renders a border along all edges of an element\n */\nexport class RadialProgressEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialProgress';\n    static getEffectKey() {\n        return `radialProgress`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            progress: props.progress ?? 0.5,\n            offset: props.offset ?? 0,\n            range: props.range ?? Math.PI * 2,\n            rounded: props.rounded ?? false,\n            radius: props.radius ?? 1,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        progress: {\n            value: 0.5,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        offset: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        range: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        rounded: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n            validator: (value) => {\n                return value ? 1 : 0;\n            },\n        },\n        radius: {\n            value: 1,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        rotateUV: `\n    vec2 function(vec2 uv, float d) {\n      float s = sin(d);\n      float c = cos(d);\n      mat2 rotMatrix = mat2(c, -s, s, c);\n      return uv * rotMatrix;\n    }\n    `,\n        drawDot: `\n    float function(vec2 uv, vec2 p, float r) {\n      uv += p;\n      float circle = length(uv) - r;\n      return clamp(-circle, 0.0, 1.0);\n    }\n    `,\n    };\n    static onEffectMask = `\n    float outerRadius = radius * u_dimensions.y * 0.5;\n\n    float endAngle = range * progress - 0.0005;\n\n    vec2 uv = v_textureCoordinate.xy * u_dimensions.xy - u_dimensions * 0.5;\n\n    uv = $rotateUV(uv, -(offset));\n    float linewidth = width * u_pixelRatio;\n    float circle = length(uv) - (outerRadius - linewidth) ;\n    circle = abs(circle) - linewidth;\n    circle = clamp(-circle, 0.0, 1.0);\n\n    float angle = (atan(uv.x, -uv.y) / 3.14159265359 * 0.5);\n    float p = endAngle / (PI * 2.);\n\n    circle *= step(fract(angle), fract(p));\n\n    circle = rounded < 1. ? circle : max(circle, $drawDot(uv, vec2(0, outerRadius - linewidth), linewidth));\n    circle = rounded < 1. ? circle : max(circle, $drawDot($rotateUV(uv, -(endAngle)), vec2(0, outerRadius - linewidth), linewidth));\n\n    return mix(shaderColor, maskColor, circle);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=RadialProgressEffect.js.map","import { DefaultShader } from './renderers/webgl/shaders/DefaultShader.js';\nimport { DefaultShaderBatched } from './renderers/webgl/shaders/DefaultShaderBatched.js';\nimport { DynamicShader, } from './renderers/webgl/shaders/DynamicShader.js';\nimport { RoundedRectangle } from './renderers/webgl/shaders/RoundedRectangle.js';\nimport { SdfShader } from './renderers/webgl/shaders/SdfShader.js';\nimport { RadiusEffect } from './renderers/webgl/shaders/effects/RadiusEffect.js';\nimport { BorderEffect } from './renderers/webgl/shaders/effects/BorderEffect.js';\nimport { LinearGradientEffect } from './renderers/webgl/shaders/effects/LinearGradientEffect.js';\nimport { GrayscaleEffect } from './renderers/webgl/shaders/effects/GrayscaleEffect.js';\nimport { BorderRightEffect } from './renderers/webgl/shaders/effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './renderers/webgl/shaders/effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './renderers/webgl/shaders/effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './renderers/webgl/shaders/effects/BorderLeftEffect.js';\nimport { GlitchEffect } from './renderers/webgl/shaders/effects/GlitchEffect.js';\nimport { FadeOutEffect } from './renderers/webgl/shaders/effects/FadeOutEffect.js';\nimport { RadialGradientEffect } from './renderers/webgl/shaders/effects/RadialGradientEffect.js';\nimport { RadialProgressEffect } from './renderers/webgl/shaders/effects/RadialProgressEffect.js';\nexport class CoreShaderManager {\n    shCache = new Map();\n    shConstructors = {};\n    attachedShader = null;\n    effectConstructors = {};\n    renderer;\n    constructor() {\n        this.registerShaderType('DefaultShader', DefaultShader);\n        this.registerShaderType('DefaultShaderBatched', DefaultShaderBatched);\n        this.registerShaderType('RoundedRectangle', RoundedRectangle);\n        this.registerShaderType('DynamicShader', DynamicShader);\n        this.registerShaderType('SdfShader', SdfShader);\n        this.registerEffectType('border', BorderEffect);\n        this.registerEffectType('borderBottom', BorderBottomEffect);\n        this.registerEffectType('borderLeft', BorderLeftEffect);\n        this.registerEffectType('borderRight', BorderRightEffect);\n        this.registerEffectType('borderTop', BorderTopEffect);\n        this.registerEffectType('fadeOut', FadeOutEffect);\n        this.registerEffectType('linearGradient', LinearGradientEffect);\n        this.registerEffectType('radialGradient', RadialGradientEffect);\n        this.registerEffectType('grayscale', GrayscaleEffect);\n        this.registerEffectType('glitch', GlitchEffect);\n        this.registerEffectType('radius', RadiusEffect);\n        this.registerEffectType('radialProgress', RadialProgressEffect);\n    }\n    registerShaderType(shType, shClass) {\n        this.shConstructors[shType] = shClass;\n    }\n    registerEffectType(effectType, effectClass) {\n        this.effectConstructors[effectType] = effectClass;\n    }\n    getRegisteredEffects() {\n        return this.effectConstructors;\n    }\n    getRegisteredShaders() {\n        return this.shConstructors;\n    }\n    loadShader(shType, props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const ShaderClass = this.shConstructors[shType];\n        if (!ShaderClass) {\n            throw new Error(`Shader type \"${shType}\" is not registered`);\n        }\n        if (shType === 'DynamicShader') {\n            return this.loadDynamicShader(props);\n        }\n        const resolvedProps = ShaderClass.resolveDefaults(props);\n        const cacheKey = ShaderClass.makeCacheKey(resolvedProps) || ShaderClass.name;\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return {\n                shader: this.shCache.get(cacheKey),\n                props: resolvedProps,\n            };\n        }\n        // @ts-expect-error ShaderClass WILL accept a Renderer\n        const shader = new ShaderClass(this.renderer, props);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return {\n            shader,\n            props: resolvedProps,\n        };\n    }\n    loadDynamicShader(props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const resolvedProps = DynamicShader.resolveDefaults(props, this.effectConstructors);\n        const cacheKey = DynamicShader.makeCacheKey(resolvedProps, this.effectConstructors);\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return {\n                shader: this.shCache.get(cacheKey),\n                props: resolvedProps,\n            };\n        }\n        const shader = new DynamicShader(this.renderer, props, this.effectConstructors);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return {\n            shader: shader,\n            props: resolvedProps,\n        };\n    }\n    useShader(shader) {\n        if (this.attachedShader === shader) {\n            return;\n        }\n        if (this.attachedShader) {\n            this.attachedShader.detach();\n        }\n        shader.attach();\n        this.attachedShader = shader;\n    }\n}\n//# sourceMappingURL=CoreShaderManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreAnimation } from './CoreAnimation.js';\nexport class AnimationManager {\n    activeAnimations = new Set();\n    registerAnimation(animation) {\n        this.activeAnimations.add(animation);\n    }\n    unregisterAnimation(animation) {\n        this.activeAnimations.delete(animation);\n    }\n    update(dt) {\n        this.activeAnimations.forEach((animation) => {\n            animation.update(dt);\n        });\n    }\n}\n//# sourceMappingURL=AnimationManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of an image loaded from a URL\n *\n * @remarks\n * The ImageTexture's {@link ImageTextureProps.src} prop defines the image URL\n * to be downloaded.\n *\n * By default, the texture's alpha values will be premultiplied into its color\n * values which is generally the desired setting before they are sent to the\n * texture's associated {@link Shader}. However, in special cases you may want\n * the Shader to receive straight (non-premultiplied) values. In that case you\n * can disable the default behavior by setting the\n * {@link ImageTextureProps.premultiplyAlpha} prop to `false`.\n */\nexport class ImageTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ImageTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { src, premultiplyAlpha } = this.props;\n        if (!src) {\n            return {\n                data: null,\n            };\n        }\n        if (src instanceof ImageData) {\n            return {\n                data: src,\n                premultiplyAlpha,\n            };\n        }\n        const response = await fetch(src);\n        const blob = await response.blob();\n        return {\n            data: await createImageBitmap(blob, {\n                premultiplyAlpha: premultiplyAlpha ? 'premultiply' : 'none',\n                colorSpaceConversion: 'none',\n                imageOrientation: 'none',\n            }),\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ImageTexture.resolveDefaults(props);\n        // ImageTextures sourced by ImageData are non-cacheable\n        if (resolvedProps.src instanceof ImageData) {\n            return false;\n        }\n        return `ImageTexture,${resolvedProps.src},${resolvedProps.premultiplyAlpha}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            src: props.src ?? '',\n            premultiplyAlpha: props.premultiplyAlpha ?? true,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ImageTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of a random grid of greyscale pixels\n *\n * @remarks\n * The width and height of the NoiseTexture are defined by it's\n * {@link NoiseTextureProps.width} and {@link NoiseTextureProps.height}\n * properties. The {@link NoiseTextureProps.cacheId} prop can be varied in order\n * to bypass cache and get newly randomized texture data.\n */\nexport class NoiseTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = NoiseTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { width, height } = this.props;\n        const size = width * height * 4;\n        const pixelData8 = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i += 4) {\n            const v = Math.floor(Math.random() * 256);\n            pixelData8[i] = v;\n            pixelData8[i + 1] = v;\n            pixelData8[i + 2] = v;\n            pixelData8[i + 3] = 255;\n        }\n        return {\n            data: new ImageData(pixelData8, width, height),\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = NoiseTexture.resolveDefaults(props);\n        return `NoiseTexture,${resolvedProps.width},${resolvedProps.height},${resolvedProps.cacheId}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 128,\n            height: props.height ?? 128,\n            cacheId: props.cacheId ?? 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=NoiseTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../utils.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nimport { ImageTexture } from './textures/ImageTexture.js';\nimport { NoiseTexture } from './textures/NoiseTexture.js';\nimport { SubTexture } from './textures/SubTexture.js';\nexport class CoreTextureManager {\n    /**\n     * Amount of used memory defined in pixels\n     */\n    usedMemory = 0;\n    txConstructors = {};\n    textureKeyCache = new Map();\n    textureIdCache = new Map();\n    ctxTextureCache = new WeakMap();\n    textureRefCountMap = new WeakMap();\n    /**\n     * Renderer that this texture manager is associated with\n     *\n     * @remarks\n     * This MUST be set before the texture manager is used. Otherwise errors\n     * will occur when using the texture manager.\n     */\n    renderer;\n    constructor() {\n        // Register default known texture types\n        this.registerTextureType('ImageTexture', ImageTexture);\n        this.registerTextureType('ColorTexture', ColorTexture);\n        this.registerTextureType('NoiseTexture', NoiseTexture);\n        this.registerTextureType('SubTexture', SubTexture);\n    }\n    registerTextureType(textureType, textureClass) {\n        this.txConstructors[textureType] = textureClass;\n    }\n    loadTexture(textureType, props, options = null) {\n        const TextureClass = this.txConstructors[textureType];\n        if (!TextureClass) {\n            throw new Error(`Texture type \"${textureType}\" is not registered`);\n        }\n        let texture;\n        // If an ID is specified, try to get the texture from the ID cache first\n        if (options?.id !== undefined && this.textureIdCache.has(options.id)) {\n            // console.log('Getting texture by texture desc ID', options.id);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            texture = this.textureIdCache.get(options.id);\n        }\n        // If the texture is not found in the ID cache, try to get it from the key cache\n        if (!texture) {\n            const descId = options?.id;\n            const cacheKey = options?.cacheKey ?? TextureClass.makeCacheKey(props);\n            if (cacheKey && this.textureKeyCache.has(cacheKey)) {\n                // console.log('Getting texture by cache key', cacheKey);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                texture = this.textureKeyCache.get(cacheKey);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n                texture = new TextureClass(this, props);\n            }\n            if (descId) {\n                this.addTextureIdToCache(descId, cacheKey, texture);\n            }\n        }\n        if (options?.preload) {\n            const ctxTx = this.getCtxTexture(texture);\n            ctxTx.load();\n        }\n        return texture;\n    }\n    /**\n     * Add a `Texture` to the texture cache by its texture desc ID and cache key\n     *\n     * @remarks\n     * This is used internally by the `CoreTextureManager` to cache textures\n     * when they are created.\n     *\n     * It handles updating the texture ID cache, texture key cache, and texture\n     * reference count map.\n     *\n     * @param textureDescId\n     * @param cacheKey\n     * @param texture\n     */\n    addTextureIdToCache(textureDescId, cacheKey, texture) {\n        const { textureIdCache, textureRefCountMap } = this;\n        textureIdCache.set(textureDescId, texture);\n        if (textureRefCountMap.has(texture)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            textureRefCountMap.get(texture).count++;\n        }\n        else {\n            textureRefCountMap.set(texture, { cacheKey, count: 1 });\n            if (cacheKey) {\n                this.textureKeyCache.set(cacheKey, texture);\n            }\n        }\n    }\n    /**\n     * Remove a `Texture` from the texture cache by its texture desc ID\n     *\n     * @remarks\n     * This is called externally by when we know (at least reasonably well) that\n     * the `TextureRef` in the Main API space has been is no longer used. This\n     * allows us to remove the `Texture` from the Usage Cache so that it can be\n     * garbage collected as well.\n     *\n     * @param textureDescId\n     */\n    removeTextureIdFromCache(textureDescId) {\n        const { textureIdCache, textureRefCountMap } = this;\n        const texture = textureIdCache.get(textureDescId);\n        if (!texture) {\n            // Sometimes a texture is removed from the cache before it ever gets\n            // added to the cache. This is fine and not an error.\n            return;\n        }\n        textureIdCache.delete(textureDescId);\n        if (textureRefCountMap.has(texture)) {\n            const refCountObj = textureRefCountMap.get(texture);\n            assertTruthy(refCountObj);\n            refCountObj.count--;\n            if (refCountObj.count === 0) {\n                textureRefCountMap.delete(texture);\n                // If the texture is not referenced anywhere else, remove it from the key cache\n                // as well.\n                // This should allow the `Texture` instance to be garbage collected.\n                if (refCountObj.cacheKey) {\n                    this.textureKeyCache.delete(refCountObj.cacheKey);\n                }\n            }\n        }\n    }\n    /**\n     * Get an object containing debug information about the texture manager.\n     *\n     * @returns\n     */\n    getDebugInfo() {\n        // const textureSet = new Set<Texture>();\n        // for (const texture of this.textureIdCache.values()) {\n        //   textureSet.add(texture);\n        // }\n        // for (const texture of this.textureKeyCache.values()) {\n        //   textureSet.add(texture);\n        // }\n        // TODO: Output number of bytes used by textures\n        return {\n            keyCacheSize: this.textureKeyCache.size,\n            idCacheSize: this.textureIdCache.size,\n        };\n    }\n    /**\n     * Get a CoreContextTexture for the given Texture source.\n     *\n     * @remarks\n     * If the texture source already has an allocated CoreContextTexture, it will be\n     * returned from the cache. Otherwise, a new CoreContextTexture will be created\n     * and cached.\n     *\n     * ContextTextures are stored in a WeakMap, so they will be garbage collected\n     * when the Texture source is no longer referenced.\n     *\n     * @param textureSource\n     * @returns\n     */\n    getCtxTexture(textureSource) {\n        if (this.ctxTextureCache.has(textureSource)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.ctxTextureCache.get(textureSource);\n        }\n        const texture = this.renderer.createCtxTexture(textureSource);\n        this.ctxTextureCache.set(textureSource, texture);\n        return texture;\n    }\n}\n//# sourceMappingURL=CoreTextureManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SdfTrFontFace } from './font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { WebTrFontFace } from './font-face-types/WebTrFontFace.js';\nexport class TrFontManager {\n    textRenderers;\n    constructor(textRenderers) {\n        this.textRenderers = textRenderers;\n        // Intentionally left blank\n    }\n    addFontFace(font) {\n        // All the font face to all of the text renderers that support it\n        for (const trId in this.textRenderers) {\n            const tr = this.textRenderers[trId];\n            if (tr && tr.isFontFaceSupported(font)) {\n                tr.addFontFace(font);\n            }\n        }\n    }\n    /**\n     * Utility method to resolve a single font face from a list of prioritized family maps based on\n     * a set of font properties.\n     *\n     * @remarks\n     * These are to be used by a text renderer to resolve a font face if needed.\n     *\n     * @param familyMapsByPriority\n     * @param props\n     * @returns\n     */\n    static resolveFontFace(familyMapsByPriority, props) {\n        const closeFaces = [];\n        const exactMatch = familyMapsByPriority.reduce((prev, fontFamiles) => {\n            if (prev) {\n                return prev;\n            }\n            const fontFaces = fontFamiles[props.fontFamily];\n            if (!fontFaces) {\n                return undefined;\n            }\n            const fontFacesCopy = new Set(fontFaces);\n            // Remove any font faces that don't match the style exactly\n            // TODO: In the future we may enhance this to find the best match\n            // based on font weight, style, etc.\n            // See https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-matching-algorithm\n            for (const fontFace of fontFacesCopy) {\n                if (fontFace.descriptors.stretch !== props.fontStretch ||\n                    fontFace.descriptors.style !== props.fontStyle ||\n                    fontFace.descriptors.weight !== props.fontWeight) {\n                    fontFacesCopy.delete(fontFace);\n                }\n            }\n            // Return the first font face that matches the style exactly\n            return fontFacesCopy.values().next().value;\n        }, undefined);\n        return exactMatch || closeFaces[0];\n    }\n}\n//# sourceMappingURL=TrFontManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst trPropSetterDefaults = {\n    x: (state, value) => {\n        state.props.x = value;\n    },\n    y: (state, value) => {\n        state.props.y = value;\n    },\n    width: (state, value) => {\n        state.props.width = value;\n    },\n    height: (state, value) => {\n        state.props.height = value;\n    },\n    color: (state, value) => {\n        state.props.color = value;\n    },\n    zIndex: (state, value) => {\n        state.props.zIndex = value;\n    },\n    fontFamily: (state, value) => {\n        state.props.fontFamily = value;\n    },\n    fontWeight: (state, value) => {\n        state.props.fontWeight = value;\n    },\n    fontStyle: (state, value) => {\n        state.props.fontStyle = value;\n    },\n    fontStretch: (state, value) => {\n        state.props.fontStretch = value;\n    },\n    fontSize: (state, value) => {\n        state.props.fontSize = value;\n    },\n    text: (state, value) => {\n        state.props.text = value;\n    },\n    textAlign: (state, value) => {\n        state.props.textAlign = value;\n    },\n    contain: (state, value) => {\n        state.props.contain = value;\n    },\n    offsetY: (state, value) => {\n        state.props.offsetY = value;\n    },\n    scrollable: (state, value) => {\n        state.props.scrollable = value;\n    },\n    scrollY: (state, value) => {\n        state.props.scrollY = value;\n    },\n    letterSpacing: (state, value) => {\n        state.props.letterSpacing = value;\n    },\n    lineHeight: (state, value) => {\n        state.props.lineHeight = value;\n    },\n    debug: (state, value) => {\n        state.props.debug = value;\n    },\n};\nexport class TextRenderer {\n    stage;\n    set;\n    constructor(stage) {\n        this.stage = stage;\n        const propSetters = {\n            ...trPropSetterDefaults,\n            ...this.getPropertySetters(),\n        };\n        // For each prop setter add a wrapper method that checks if the prop is\n        // different before calling the setter\n        this.set = Object.freeze(Object.fromEntries(Object.entries(propSetters).map(([key, setter]) => {\n            return [\n                key,\n                (state, value) => {\n                    if (state.props[key] !== value) {\n                        setter(state, value);\n                    }\n                },\n            ];\n        })));\n    }\n    setStatus(state, status, error) {\n        // Don't emit the same status twice\n        if (state.status === status) {\n            return;\n        }\n        state.status = status;\n        state.emitter.emit(status, error);\n    }\n    /**\n     * Schedule a state update via queueMicrotask\n     *\n     * @remarks\n     * This method is used to schedule a state update via queueMicrotask. This\n     * method should be called whenever a state update is needed, and it will\n     * ensure that the state is only updated once per microtask.\n     * @param state\n     * @returns\n     */\n    scheduleUpdateState(state) {\n        if (state.updateScheduled) {\n            return;\n        }\n        state.updateScheduled = true;\n        queueMicrotask(() => {\n            state.updateScheduled = false;\n            this.updateState(state);\n        });\n    }\n}\n//# sourceMappingURL=TextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Number of floating point numbers that represent a single glyph in the SDF vertex buffer.\n *\n * @remarks\n * The vertex buffer contains:\n *  - 6 vertex positions\n *  - 6 texture coordinates\n *  - = 12 positions/coordinates per glyph\n *\n * Each vertex position and texture coordinate consist of 2 floating point numbers (x/y).\n * So there are 12 * 2 = 24 floating point numbers that make up a single glyph.\n */\nexport const FLOATS_PER_GLYPH = 24;\n//# sourceMappingURL=constants.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Gets the start conditions for the layout loop.\n *\n * @remarks\n * Returns `undefined` if the layout loop should not be run.\n *\n * @param fontSize\n * @param fontSizeRatio\n * @param sdfLineHeight\n * @param renderWindow\n * @param lineCache\n * @param textH\n * @returns\n */\nexport function getStartConditions(fontSize, offsetY, fontSizeRatio, sdfLineHeight, renderWindow, lineCache, textH) {\n    // State variables\n    let startLineIndex = 0;\n    if (renderWindow) {\n        startLineIndex = Math.min(Math.max(Math.floor(renderWindow.y1 / fontSize), 0), lineCache.length);\n    }\n    // TODO: Possibly break out startX / startY into a separate function\n    // TODO: (fontSize / 6.4286 / fontSizeRatio) Adding this to the startY helps the text line up better with Canvas rendered text\n    const startX = 0;\n    const startY = offsetY / fontSizeRatio + startLineIndex * sdfLineHeight; // TODO: Figure out what determines the initial y offset of text.\n    // Don't attempt to render anything if we know we're starting past the established end of the text\n    if (textH && startY >= textH / fontSizeRatio) {\n        return;\n    }\n    return {\n        x: startX,\n        y: startY,\n        lineIndex: startLineIndex,\n    };\n}\n//# sourceMappingURL=getStartConditions.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A wrapper Generator class that makes a generator peekable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class PeekableIterator {\n    iterator;\n    peekBuffer = [];\n    _lastIndex;\n    constructor(iterator, indexBase = 0) {\n        this.iterator = iterator;\n        this.iterator = iterator;\n        this._lastIndex = indexBase - 1;\n        this.peekBuffer = [];\n    }\n    next() {\n        const nextResult = this.peekBuffer.length > 0\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.peekBuffer.pop()\n            : this.iterator.next();\n        if (nextResult.done) {\n            this._lastIndex = -1;\n        }\n        else {\n            this._lastIndex++;\n        }\n        return nextResult;\n    }\n    peek() {\n        if (this.peekBuffer.length > 0) {\n            // We know that the buffer is not empty, so we can safely use the\n            // non-null assertion operator\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.peekBuffer[0];\n        }\n        const result = this.iterator.next();\n        this.peekBuffer.push(result);\n        return result;\n    }\n    get lastIndex() {\n        return this._lastIndex;\n    }\n}\n//# sourceMappingURL=PeekableGenerator.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Reversible Generator Wrapper Class\n/**\n * Generator function that yields each Unicode code point in the given string.\n */\nexport function* getUnicodeCodepoints(text, start = 0) {\n    let i = start;\n    while (i < text.length) {\n        const codePoint = text.codePointAt(i);\n        if (codePoint === undefined) {\n            throw new Error('Invalid Unicode code point');\n        }\n        yield codePoint;\n        i += codePoint <= 0xffff ? 1 : 2;\n    }\n}\n//# sourceMappingURL=getUnicodeCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\n/**\n * Measures a single-line of text width ignoring any unmapped glyphs including line breaks\n *\n * @param text\n * @param shaperProps\n * @param shaper\n * @returns\n */\nexport function measureText(text, shaperProps, shaper) {\n    const glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, 0), 0));\n    let width = 0;\n    for (const glyph of glyphs) {\n        if (glyph.mapped) {\n            width += glyph.xAdvance;\n        }\n    }\n    return width;\n}\n//# sourceMappingURL=measureText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../../../utils.js';\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\nimport { measureText } from './measureText.js';\nexport function layoutText(curLineIndex, startX, startY, text, textAlign, width, height, fontSize, letterSpacing, \n/**\n * Mutated\n */\nvertexBuffer, contain, \n/**\n * Mutated\n */\nlineCache, renderWindow, trFontFace, forceFullLayoutCalc, scrollable) {\n    assertTruthy(trFontFace, 'Font face must be loaded');\n    assertTruthy(trFontFace.loaded, 'Font face must be loaded');\n    assertTruthy(trFontFace.data, 'Font face must be loaded');\n    assertTruthy(trFontFace.shaper, 'Font face must be loaded');\n    // Regardless of fontSize (or other scaling properties), we layout the vertices of each glyph\n    // using the fixed coordinate space determined by font size used to produce the atlas.\n    // Scaling for display is handled by shader uniforms inexpensively.\n    // So we have:\n    //  - vertex space: the space in which the vertices of each glyph are laid out\n    //  - screen space: the screen pixel space\n    // Input properties such as x, y, w, fontSize, letterSpacing, etc. are all expressed in screen space.\n    // We convert these to the vertex space by dividing them the `fontSizeRatio` factor.\n    /**\n     * `lineHeight` in vertex coordinates\n     */\n    const vertexLineHeight = trFontFace.data.info.size;\n    /**\n     * See above\n     */\n    const fontSizeRatio = fontSize / vertexLineHeight;\n    /**\n     * `w` in vertex coordinates\n     */\n    const vertexW = width / fontSizeRatio;\n    /**\n     * `letterSpacing` in vertex coordinates\n     */\n    const vertexLSpacing = letterSpacing / fontSizeRatio;\n    const startingLineCacheEntry = lineCache[curLineIndex];\n    const startingCodepointIndex = startingLineCacheEntry?.codepointIndex || 0;\n    const startingMaxX = startingLineCacheEntry?.maxX || 0;\n    const startingMaxY = startingLineCacheEntry?.maxY || 0;\n    let maxX = startingMaxX;\n    let maxY = startingMaxY;\n    let curX = startX;\n    let curY = startY;\n    let bufferOffset = 0;\n    /**\n     * Buffer offset to last word boundry. This is -1 when we aren't in a word boundry.\n     */\n    const lastWord = {\n        codepointIndex: -1,\n        bufferOffset: -1,\n        xStart: -1,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const shaper = trFontFace.shaper;\n    const shaperProps = {\n        letterSpacing: vertexLSpacing,\n    };\n    // Get glyphs\n    let glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, startingCodepointIndex), startingCodepointIndex));\n    let glyphResult;\n    let curLineBufferStart = -1;\n    const bufferLineInfos = [];\n    const truncateSeq = '...';\n    const vertexTruncateHeight = height / fontSizeRatio;\n    const truncateSeqVertexWidth = measureText(truncateSeq, shaperProps, shaper);\n    // Line-by-line layout\n    let moreLines = true;\n    while (moreLines) {\n        const nextLineWillFit = contain !== 'both' ||\n            scrollable ||\n            curY + vertexLineHeight + vertexLineHeight <= vertexTruncateHeight;\n        const lineVertexW = nextLineWillFit\n            ? vertexW\n            : vertexW - truncateSeqVertexWidth;\n        /**\n         * Vertex X position to the beginning of the last word boundary. This becomes -1 when we start traversing a word.\n         */\n        let xStartLastWordBoundary = 0;\n        // Layout glyphs in this line\n        // Any break statements in this while loop will trigger a line break\n        while ((glyphResult = glyphs.next()) && !glyphResult.done) {\n            const glyph = glyphResult.value;\n            if (curLineIndex === lineCache.length) {\n                lineCache.push({\n                    codepointIndex: glyph.cluster,\n                    maxY,\n                    maxX,\n                });\n            }\n            else if (curLineIndex > lineCache.length) {\n                throw new Error('Unexpected lineCache length');\n            }\n            // If we encounter a word boundary (white space or newline) we invalidate\n            // the lastWord and set the xStartLastWordBoundary if we haven't already.\n            if (glyph.codepoint === 32 || glyph.codepoint === 10) {\n                if (lastWord.codepointIndex !== -1) {\n                    lastWord.codepointIndex = -1;\n                    xStartLastWordBoundary = curX;\n                }\n            }\n            else if (lastWord.codepointIndex === -1) {\n                lastWord.codepointIndex = glyph.cluster;\n                lastWord.bufferOffset = bufferOffset;\n                lastWord.xStart = xStartLastWordBoundary;\n            }\n            if (glyph.mapped) {\n                // Mapped glyph\n                const charEndX = curX + glyph.xOffset + glyph.width;\n                // Word wrap check\n                if (\n                // We are containing the text\n                contain !== 'none' &&\n                    // The current glyph reaches outside the contained width\n                    charEndX >= lineVertexW &&\n                    // There is a last word that we can break to the next line\n                    lastWord.codepointIndex !== -1 &&\n                    // We have advanced at least one character since the last word started\n                    lastWord.codepointIndex < glyph.cluster &&\n                    // Prevents infinite loop when a single word is longer than the width\n                    lastWord.xStart > 0) {\n                    // The current word is about to go off the edge of the container width\n                    // Reinitialize the iterator starting at the last word\n                    // and proceeding to the next line\n                    if (nextLineWillFit) {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, lastWord.codepointIndex), lastWord.codepointIndex));\n                        bufferOffset = lastWord.bufferOffset;\n                        break;\n                    }\n                    else {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(truncateSeq, 0), 0));\n                        curX = lastWord.xStart;\n                        bufferOffset = lastWord.bufferOffset;\n                    }\n                }\n                else {\n                    // This glyph fits, so we can add it to the buffer\n                    const quadX = curX + glyph.xOffset;\n                    const quadY = curY + glyph.yOffset;\n                    const lineIsBelowWindowTop = renderWindow\n                        ? curY + vertexLineHeight >= renderWindow.y1 / fontSizeRatio\n                        : true;\n                    const lineIsAboveWindowBottom = renderWindow\n                        ? curY <= renderWindow.y2 / fontSizeRatio\n                        : true;\n                    // Only add to buffer for rendering if the line is within the render window\n                    if (lineIsBelowWindowTop && lineIsAboveWindowBottom) {\n                        if (curLineBufferStart === -1) {\n                            curLineBufferStart = bufferOffset;\n                        }\n                        const atlasEntry = trFontFace.getAtlasEntry(glyph.glyphId);\n                        // Add texture coordinates\n                        const u = atlasEntry.x / trFontFace.data.common.scaleW;\n                        const v = atlasEntry.y / trFontFace.data.common.scaleH;\n                        const uvWidth = atlasEntry.width / trFontFace.data.common.scaleW;\n                        const uvHeight = atlasEntry.height / trFontFace.data.common.scaleH;\n                        // TODO: (Performance) We can optimize this by using ELEMENT_ARRAY_BUFFER\n                        // eliminating the need to duplicate vertices\n                        // Top-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Top-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Bottom-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                        // Bottom-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                    }\n                    maxY = Math.max(maxY, quadY + glyph.height);\n                    curX += glyph.xAdvance;\n                    maxX = Math.max(maxX, curX);\n                }\n            }\n            else {\n                // Unmapped character\n                // Handle newlines\n                if (glyph.codepoint === 10) {\n                    break;\n                }\n            }\n        }\n        // Prepare for the next line...\n        if (curLineBufferStart !== -1) {\n            bufferLineInfos.push({\n                bufferStart: curLineBufferStart,\n                bufferEnd: bufferOffset,\n            });\n            curLineBufferStart = -1;\n        }\n        curX = 0;\n        curY += vertexLineHeight;\n        curLineIndex++;\n        lastWord.codepointIndex = -1;\n        xStartLastWordBoundary = 0;\n        // Figure out if there are any more lines to render...\n        if (!forceFullLayoutCalc &&\n            contain === 'both' &&\n            renderWindow &&\n            curY > renderWindow.y2 / fontSizeRatio) {\n            // Stop layout calculation early (for performance purposes) if:\n            // - We're not forcing a full layout calculation (for width/height calculation)\n            // - ...and we're containing the text vertically+horizontally (contain === 'both')\n            // - ...and we have a render window\n            // - ...and the next line is below the bottom of the render window\n            moreLines = false;\n        }\n        else if (glyphResult && glyphResult.done) {\n            // If we've reached the end of the text, we know we're done\n            moreLines = false;\n        }\n        else if (contain === 'both' && !scrollable && !nextLineWillFit) {\n            // If we're contained vertically+horizontally (contain === 'both')\n            // but not scrollable and the next line won't fit, we're done.\n            moreLines = false;\n        }\n    }\n    // Use textAlign to determine if we need to adjust the x position of the text\n    // in the buffer line by line\n    if (textAlign === 'center') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            // - 4 = the x position of a rightmost vertex\n            const lineWidth = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = (vertexTextW - lineWidth) / 2;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    else if (textAlign === 'right') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            const lineWidth = line.bufferEnd === line.bufferStart\n                ? 0\n                : // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = vertexTextW - lineWidth;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    assertTruthy(glyphResult);\n    return {\n        bufferNumFloats: bufferOffset,\n        bufferNumQuads: bufferOffset / 16,\n        layoutNumCharacters: glyphResult.done\n            ? text.length - startingCodepointIndex\n            : glyphResult.value.cluster - startingCodepointIndex + 1,\n        fullyProcessed: !!glyphResult.done,\n        maxX,\n        maxY,\n    };\n}\n//# sourceMappingURL=layoutText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isBoundPositive } from '../../../../lib/utils.js';\n/**\n * Create a render window from the given parameters.\n *\n * @remarks\n * The render window is a rectangle that defines the area of the text that\n * should be rendered. It is used to skip rendering parts of the text that\n * are outside of the render window. The render window is relative to the\n * text's top left corner of the overrall text.\n *\n * @param x The x coordinate of the text element's top left corner relative to the screen.\n * @param y The y coordinate of the text element's top left corner relative to the screen.\n * @param scrollY The amount of pixels to scroll the text vertically.\n * @param lineHeight The height of a single line of text.\n * @param numExtraLines The number of extra lines to render above and below the visible window.\n * @param visibleWindow The visible window of the text element relative to the screen\n * @returns\n */\nexport function makeRenderWindow(x, y, scrollY, lineHeight, numExtraLines, visibleWindow) {\n    const bufferMargin = lineHeight * numExtraLines;\n    const x1 = visibleWindow.x1 - x;\n    const y1 = visibleWindow.y1 - y;\n    return isBoundPositive(visibleWindow)\n        ? {\n            x1: x1,\n            y1: y1 + scrollY - bufferMargin,\n            x2: x1 + (visibleWindow.x2 - visibleWindow.x1),\n            y2: y1 + scrollY + (visibleWindow.y2 - visibleWindow.y1) + bufferMargin,\n        }\n        : {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        };\n}\n//# sourceMappingURL=makeRenderWindow.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { intersectBound, createBound, } from '../../../lib/utils.js';\nimport { TextRenderer, } from '../TextRenderer.js';\nimport { SdfTrFontFace } from '../../font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { FLOATS_PER_GLYPH } from './internal/constants.js';\nimport { getStartConditions } from './internal/getStartConditions.js';\nimport { layoutText } from './internal/layoutText.js';\nimport { makeRenderWindow } from './internal/makeRenderWindow.js';\nimport { TrFontManager } from '../../TrFontManager.js';\nimport { assertTruthy, mergeColorAlpha } from '../../../../utils.js';\nimport { WebGlCoreRenderOp } from '../../../renderers/webgl/WebGlCoreRenderOp.js';\nimport { BufferCollection } from '../../../renderers/webgl/internal/BufferCollection.js';\nimport { EventEmitter } from '../../../../common/EventEmitter.js';\n/**\n * Ephemeral bounds object used for intersection calculations\n *\n * @remarks\n * Used to avoid creating a new object every time we need to intersect\n * element bounds.\n */\nconst tmpElementBounds = createBound(0, 0, 0, 0);\n/**\n * Singleton class for rendering text using signed distance fields.\n *\n * @remarks\n * SdfTextRenderer supports both single-channel and multi-channel signed distance fields.\n */\nexport class SdfTextRenderer extends TextRenderer {\n    /**\n     * Map of font family names to a set of font faces.\n     */\n    ssdfFontFamilies = {};\n    msdfFontFamilies = {};\n    sdfShader;\n    rendererBounds;\n    constructor(stage) {\n        super(stage);\n        this.sdfShader = this.stage.shManager.loadShader('SdfShader').shader;\n        this.rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.trFontFace = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.trFontFace = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.trFontFace = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.trFontFace = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                this.invalidateLayoutCache(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.invalidateLayoutCache(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.invalidateLayoutCache(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n            },\n            x: (state, value) => {\n                state.props.x = value;\n                this.invalidateVisibleWindowCache(state);\n            },\n            y: (state, value) => {\n                state.props.y = value;\n                this.invalidateVisibleWindowCache(state);\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.invalidateLayoutCache(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                this.invalidateLayoutCache(state);\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                this.invalidateLayoutCache(state);\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.invalidateLayoutCache(state);\n            },\n            scrollable: (state, value) => {\n                state.props.scrollable = value;\n                this.invalidateLayoutCache(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n                // Scrolling doesn't need to invalidate any caches, but it does need to\n                // schedule an update\n                this.scheduleUpdateState(state);\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.invalidateLayoutCache(state);\n            },\n            debug: (state, value) => {\n                state.props.debug = value;\n            },\n        };\n    }\n    canRenderFont(props) {\n        // TODO: Support matching on font stretch, weight and style (if/when needed)\n        // For now we just match on the font family name\n        // '$$SDF_FAILURE_TEST$$' is used to test the 'failure' event coming from text\n        const { fontFamily } = props;\n        return (fontFamily in this.ssdfFontFamilies ||\n            fontFamily in this.msdfFontFamilies ||\n            fontFamily === '$$SDF_FAILURE_TEST$$');\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof SdfTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an SDF font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof SdfTrFontFace);\n        const familyName = fontFace.fontFamily;\n        const fontFamiles = fontFace.type === 'ssdf'\n            ? this.ssdfFontFamilies\n            : fontFace.type === 'msdf'\n                ? this.msdfFontFamilies\n                : undefined;\n        if (!fontFamiles) {\n            console.warn(`Invalid font face type: ${fontFace.type}`);\n            return;\n        }\n        let faceSet = fontFamiles[familyName];\n        if (!faceSet) {\n            faceSet = new Set();\n            fontFamiles[familyName] = faceSet;\n        }\n        faceSet.add(fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            updateScheduled: false,\n            emitter: new EventEmitter(),\n            lineCache: [],\n            forceFullLayoutCalc: false,\n            renderWindow: undefined,\n            visibleWindow: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 0,\n                valid: false,\n            },\n            bufferNumFloats: 0,\n            bufferNumQuads: 0,\n            vertexBuffer: undefined,\n            webGlBuffers: null,\n            bufferUploaded: false,\n            textH: undefined,\n            textW: undefined,\n            distanceRange: 0,\n            trFontFace: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                drawCount: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        let { trFontFace } = state;\n        const { textH, lineCache, debugData, forceFullLayoutCalc } = state;\n        debugData.updateCount++;\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        // Resolve font face if we haven't yet\n        if (!trFontFace) {\n            trFontFace = this.resolveFontFace(state.props);\n            state.trFontFace = trFontFace;\n            if (!trFontFace) {\n                const msg = `SdfTextRenderer: Could not resolve font face for family: '${state.props.fontFamily}'`;\n                console.error(msg);\n                this.setStatus(state, 'failed', new Error(msg));\n                return;\n            }\n        }\n        // If the font hasn't been loaded yet, stop here.\n        // Listen for the 'loaded' event and forward fontLoaded event\n        if (!trFontFace.loaded) {\n            trFontFace.once('loaded', () => {\n                this.scheduleUpdateState(state);\n            });\n            return;\n        }\n        // If the font is loaded then so should the data\n        assertTruthy(trFontFace.data, 'Font face data should be loaded');\n        const { text, fontSize, x, y, contain, width, height, scrollable } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        let { renderWindow } = state;\n        // Needed in renderWindow calculation\n        const sdfLineHeight = trFontFace.data.info.size;\n        /**\n         * Divide screen space points by this to get the SDF space points\n         * Mulitple SDF space points by this to get screen space points\n         */\n        const fontSizeRatio = fontSize / sdfLineHeight;\n        state.distanceRange =\n            fontSizeRatio * trFontFace.data.distanceField.distanceRange;\n        // Allocate buffers if needed\n        const neededLength = text.length * FLOATS_PER_GLYPH;\n        let vertexBuffer = state.vertexBuffer;\n        if (!vertexBuffer || vertexBuffer.length < neededLength) {\n            vertexBuffer = new Float32Array(neededLength * 2);\n        }\n        const visibleWindow = state.visibleWindow;\n        // If the visibleWindow is not valid, calculate it\n        if (!visibleWindow.valid) {\n            // Figure out whats actually in the bounds of the renderer/canvas (visibleWindow)\n            const elementBounds = createBound(x, y, contain !== 'none' ? x + width : Infinity, contain === 'both' ? y + height : Infinity, tmpElementBounds);\n            /**\n             * Area that is visible on the screen.\n             */\n            intersectBound(this.rendererBounds, elementBounds, state.visibleWindow);\n            visibleWindow.valid = true;\n        }\n        // Return early if we're still viewing inside the established render window\n        // No need to re-render what we've already rendered\n        // (Only if there's an established renderWindow and we're not suppressing early exit)\n        if (!forceFullLayoutCalc && renderWindow) {\n            if (x + renderWindow.x1 <= visibleWindow.x1 &&\n                x + renderWindow.x2 >= visibleWindow.x2 &&\n                y - scrollY + renderWindow.y1 <= visibleWindow.y1 &&\n                y - scrollY + renderWindow.y2 >= visibleWindow.y2) {\n                this.setStatus(state, 'loaded');\n                return;\n            }\n            // Otherwise clear the renderWindow so it can be redone\n            renderWindow = state.renderWindow = undefined;\n            this.setStatus(state, 'loading');\n        }\n        const { offsetY, textAlign } = state.props;\n        // Create a new renderWindow if needed\n        if (!renderWindow) {\n            const visibleWindowHeight = visibleWindow.y2 - visibleWindow.y1;\n            const maxLinesPerCanvasPage = Math.ceil(visibleWindowHeight / sdfLineHeight);\n            renderWindow = makeRenderWindow(x, y, scrollY, sdfLineHeight, maxLinesPerCanvasPage, visibleWindow);\n        }\n        const start = getStartConditions(fontSize, offsetY, fontSizeRatio, sdfLineHeight, renderWindow, lineCache, textH);\n        if (!start) {\n            // Nothing to render, return early, but still mark as loaded (since the text is just scrolled\n            // out of view)\n            this.setStatus(state, 'loaded');\n            return;\n        }\n        const { letterSpacing } = state.props;\n        const out2 = layoutText(start.lineIndex, start.x, start.y, text, textAlign, width, height, fontSize, letterSpacing, vertexBuffer, contain, lineCache, renderWindow, trFontFace, forceFullLayoutCalc, scrollable);\n        state.bufferUploaded = false;\n        state.bufferNumFloats = out2.bufferNumFloats;\n        state.bufferNumQuads = out2.bufferNumQuads;\n        state.vertexBuffer = vertexBuffer;\n        state.renderWindow = renderWindow;\n        debugData.lastLayoutNumCharacters = out2.layoutNumCharacters;\n        debugData.bufferSize = vertexBuffer.byteLength;\n        // If we didn't exit early, we know we have completely computed w/h\n        if (out2.fullyProcessed) {\n            state.textW = out2.maxX * fontSizeRatio;\n            state.textH = out2.maxY * fontSizeRatio;\n        }\n        // if (state.props.debug.printLayoutTime) {\n        //   debugData.layoutSum += performance.now() - updateStartTime;\n        //   debugData.layoutCount++;\n        // }\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, transform, clippingRect, alpha) {\n        if (!state.vertexBuffer) {\n            // Nothing to draw\n            return;\n        }\n        const drawStartTime = performance.now();\n        const { sdfShader } = this;\n        const { renderer } = this.stage;\n        const { appWidth, appHeight } = this.stage.options;\n        const { fontSize, color, contain, scrollable, zIndex, debug } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        const { textW = 0, textH = 0, distanceRange, vertexBuffer, bufferUploaded, trFontFace, } = state;\n        let { webGlBuffers } = state;\n        if (!webGlBuffers) {\n            const gl = renderer.gl;\n            const stride = 4 * Float32Array.BYTES_PER_ELEMENT;\n            const webGlBuffer = gl.createBuffer();\n            assertTruthy(webGlBuffer);\n            state.webGlBuffers = new BufferCollection([\n                {\n                    buffer: webGlBuffer,\n                    attributes: {\n                        a_position: {\n                            name: 'a_position',\n                            size: 2,\n                            type: gl.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 0, // start at the beginning of the buffer\n                        },\n                        a_textureCoordinate: {\n                            name: 'a_textureCoordinate',\n                            size: 2,\n                            type: gl.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                        },\n                    },\n                },\n            ]);\n            state.bufferUploaded = false;\n            assertTruthy(state.webGlBuffers);\n            webGlBuffers = state.webGlBuffers;\n        }\n        if (!bufferUploaded) {\n            const gl = renderer.gl;\n            const buffer = webGlBuffers?.getBuffer('a_textureCoordinate') ?? null;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertexBuffer, gl.STATIC_DRAW);\n            state.bufferUploaded = true;\n        }\n        assertTruthy(trFontFace);\n        const renderOp = new WebGlCoreRenderOp(renderer.gl, renderer.options, webGlBuffers, this.sdfShader, {\n            transform: transform.data,\n            // IMPORTANT: The SDF Shader expects the color NOT to be premultiplied\n            // for the best blending results. Which is why we use `mergeColorAlpha`\n            // instead of `mergeColorAlphaPremultiplied` here.\n            color: mergeColorAlpha(color, alpha),\n            size: fontSize / (trFontFace.data?.info.size || 0),\n            scrollY,\n            distanceRange,\n            debug: debug.sdfShaderDebug,\n        }, alpha, clippingRect, { height: textH, width: textW }, 0, zIndex);\n        const texture = state.trFontFace?.texture;\n        assertTruthy(texture);\n        const ctxTexture = this.stage.txManager.getCtxTexture(texture);\n        renderOp.addTexture(ctxTexture);\n        renderOp.length = state.bufferNumFloats;\n        renderOp.numQuads = state.bufferNumQuads;\n        renderer.addRenderable(renderOp);\n        // const elementRect = {\n        //   x: x,\n        //   y: y,\n        //   w: contain !== 'none' ? width : textW,\n        //   h: contain === 'both' ? height : textH,\n        // };\n        // const visibleRect = intersectRect(\n        //   {\n        //     x: 0,\n        //     y: 0,\n        //     w: renderer.w,\n        //     h: renderer.h,\n        //   },\n        //   elementRect,\n        // );\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // Draw the arrays\n        // gl.drawArrays(\n        //   gl.TRIANGLES, // Primitive type\n        //   0,\n        //   bufferNumVertices, // Number of verticies\n        // );\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n        // if (debug.printLayoutTime) {\n        //   debugData.drawSum += performance.now() - drawStartTime;\n        //   debugData.drawCount++;\n        // }\n    }\n    //#endregion Overrides\n    resolveFontFace(props) {\n        return TrFontManager.resolveFontFace([this.msdfFontFamilies, this.ssdfFontFamilies], props);\n    }\n    /**\n     * Invalidate the visible window stored in the state. This will cause a new\n     * visible window to be calculated on the next update.\n     *\n     * @param state\n     */\n    invalidateVisibleWindowCache(state) {\n        state.visibleWindow.valid = false;\n        this.scheduleUpdateState(state);\n    }\n    /**\n     * Invalidate the layout cache stored in the state. This will cause the text\n     * to be re-layed out on the next update.\n     *\n     * @remarks\n     * This also invalidates the visible window cache.\n     *\n     * @param state\n     */\n    invalidateLayoutCache(state) {\n        state.visibleWindow.valid = false;\n        state.renderWindow = undefined;\n        state.textH = undefined;\n        state.textW = undefined;\n        state.lineCache = [];\n        this.setStatus(state, 'loading');\n        this.scheduleUpdateState(state);\n    }\n}\n//# sourceMappingURL=SdfTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { getRgbaString } from '../../lib/utils.js';\nconst MAX_TEXTURE_DIMENSION = 2048;\nexport class LightningTextTextureRenderer {\n    _canvas;\n    _context;\n    _settings;\n    renderInfo;\n    constructor(canvas, context) {\n        this._canvas = canvas;\n        this._context = context;\n        this._settings = this.mergeDefaults({});\n    }\n    set settings(v) {\n        this._settings = this.mergeDefaults(v);\n    }\n    get settings() {\n        return this._settings;\n    }\n    getPrecision() {\n        return this._settings.precision;\n    }\n    setFontProperties() {\n        this._context.font = this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    }\n    _getFontSetting() {\n        const ff = [this._settings.fontFace];\n        const ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === 'serif' || ff[i] === 'sans-serif') {\n                ffs.push(ff[i]);\n            }\n            else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(',')}`;\n    }\n    _load() {\n        if (true && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts\n                        .load(fontSetting, this._settings.text)\n                        .catch((err) => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    })\n                        .then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            }\n            catch (e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n    calculateRenderInfo() {\n        const renderInfo = {};\n        const precision = this.getPrecision();\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null\n            ? null\n            : this._settings.offsetY * precision;\n        let lineHeight = (this._settings.lineHeight || fontSize) * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n        // Set font properties.\n        this.setFontProperties();\n        // Total width.\n        let width = w || 2048 / this.getPrecision();\n        // Inner width.\n        let innerWidth = width - paddingLeft;\n        if (innerWidth < 10) {\n            width += 10 - innerWidth;\n            innerWidth = 10;\n        }\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth;\n        }\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\n        }\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        }\n        else {\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\n            const n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            const usedLines = lines.slice(0, this._settings.maxLines);\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                const w = this._settings.maxLinesSuffix\n                    ? this.measureText(this._settings.maxLinesSuffix)\n                    : 0;\n                const al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = `${al.l[0]}${this._settings.maxLinesSuffix}`;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            }\n            else {\n                otherLines = [''];\n            }\n            // Re-assemble the remaining text.\n            let i;\n            const n = lines.length;\n            let j = 0;\n            const m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += `${otherLines[j] ? ' ' : ''}${lines[i]}`;\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n            renderInfo.remainingText = otherLines.join('\\n');\n            renderInfo.moreTextLines = true;\n            lines = usedLines;\n        }\n        else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = '';\n        }\n        // calculate text width\n        let maxLineWidth = 0;\n        const lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            const lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        renderInfo.lineWidths = lineWidths;\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n        let height;\n        if (h) {\n            height = h;\n        }\n        else {\n            const baselineOffset = this._settings.textBaseline != 'bottom' ? 0.5 * fontSize : 0;\n            height =\n                lineHeight * (lines.length - 1) +\n                    baselineOffset +\n                    Math.max(lineHeight, fontSize) +\n                    (offsetY || 0);\n        }\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n        return renderInfo;\n    }\n    draw(renderInfo, linesOverride) {\n        const precision = this.getPrecision();\n        // Allow lines to be overriden for partial rendering.\n        const lines = linesOverride?.lines || renderInfo.lines;\n        const lineWidths = linesOverride?.lineWidths || renderInfo.lineWidths;\n        const height = linesOverride\n            ? linesOverride.lines.length * renderInfo.lineHeight\n            : renderInfo.height;\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.min(Math.ceil(renderInfo.width + this._settings.textRenderIssueMargin), MAX_TEXTURE_DIMENSION);\n        this._canvas.height = Math.min(Math.ceil(height), MAX_TEXTURE_DIMENSION);\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n        let linePositionX;\n        let linePositionY;\n        const drawLines = [];\n        // Draw lines line by line.\n        for (let i = 0, n = lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n            // By default, text is aligned to top\n            linePositionY = i * renderInfo.lineHeight + renderInfo.offsetY;\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            }\n            else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n            if (this._settings.textAlign === 'right') {\n                linePositionX += renderInfo.innerWidth - lineWidths[i];\n            }\n            else if (this._settings.textAlign === 'center') {\n                linePositionX += (renderInfo.innerWidth - lineWidths[i]) / 2;\n            }\n            linePositionX += renderInfo.paddingLeft;\n            drawLines.push({\n                text: lines[i],\n                x: linePositionX,\n                y: linePositionY,\n                w: lineWidths[i],\n            });\n        }\n        // Highlight.\n        if (this._settings.highlight) {\n            const color = this._settings.highlightColor;\n            const hlHeight = this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5;\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = this._settings.highlightPaddingLeft !== null\n                ? this._settings.highlightPaddingLeft * precision\n                : renderInfo.paddingLeft;\n            const hlPaddingRight = this._settings.highlightPaddingRight !== null\n                ? this._settings.highlightPaddingRight * precision\n                : renderInfo.paddingRight;\n            this._context.fillStyle = getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                const drawLine = drawLines[i];\n                this._context.fillRect(drawLine.x - hlPaddingLeft, drawLine.y - renderInfo.offsetY + offset, drawLine.w + hlPaddingRight + hlPaddingLeft, hlHeight);\n            }\n        }\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [\n                this._context.shadowColor,\n                this._context.shadowOffsetX,\n                this._context.shadowOffsetY,\n                this._context.shadowBlur,\n            ];\n            this._context.shadowColor = getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n        this._context.fillStyle = getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            const drawLine = drawLines[i];\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            }\n            else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n        this.renderInfo = renderInfo;\n    }\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length;\n        const wordWidth = this._context.measureText(word).width;\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width +\n            suffixWidth;\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                }\n                else {\n                    break;\n                }\n            }\n            /* In case guess was underestimated, extend it letter by letter. */\n        }\n        else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                }\n                else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -= 1;\n                    break;\n                }\n            }\n        }\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return (word.substring(0, cutoffIndex) +\n            (wordWrapWidth >= suffixWidth ? suffix : ''));\n    }\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        const lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        const realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            const resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            const words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ', letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ` ${words[j]}`;\n                }\n            }\n            resultLines.push(result);\n            result = '';\n            allLines = allLines.concat(resultLines);\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n        return { l: allLines, n: realNewlines };\n    }\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    mergeDefaults(settings) {\n        return {\n            text: '',\n            w: 0,\n            h: 0,\n            fontStyle: 'normal',\n            fontSize: 40,\n            fontFace: null,\n            wordWrap: true,\n            wordWrapWidth: 0,\n            wordBreak: false,\n            textOverflow: '',\n            lineHeight: null,\n            textBaseline: 'alphabetic',\n            textAlign: 'left',\n            verticalAlign: 'top',\n            offsetY: null,\n            maxLines: 0,\n            maxLinesSuffix: '...',\n            textColor: [1.0, 1.0, 1.0, 1.0],\n            paddingLeft: 0,\n            paddingRight: 0,\n            shadow: false,\n            shadowColor: [0.0, 0.0, 0.0, 1.0],\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            shadowBlur: 5,\n            highlight: false,\n            highlightHeight: 0,\n            highlightColor: [0.0, 0.0, 0.0, 1.0],\n            highlightOffset: 0,\n            highlightPaddingLeft: 0,\n            highlightPaddingRight: 0,\n            letterSpacing: 0,\n            textIndent: 0,\n            cutSx: 0,\n            cutEx: 0,\n            cutSy: 0,\n            cutEy: 0,\n            advancedRenderer: false,\n            fontBaselineRatio: 0,\n            precision: 1,\n            textRenderIssueMargin: 0,\n            ...settings,\n        };\n    }\n}\n//# sourceMappingURL=LightningTextTextureRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nimport { assertTruthy } from '../../../utils.js';\nimport { intersectRect, intersectBound, getNormalizedRgbaComponents, getNormalizedAlphaComponent, createBound, } from '../../lib/utils.js';\nimport { WebTrFontFace } from '../font-face-types/WebTrFontFace.js';\nimport { LightningTextTextureRenderer, } from './LightningTextTextureRenderer.js';\nimport { TextRenderer, } from './TextRenderer.js';\nconst resolvedGlobal = typeof self === 'undefined' ? globalThis : self;\n/**\n * Global font set regardless of if run in the main thread or a web worker\n */\nconst globalFontSet = (resolvedGlobal.document?.fonts ||\n    resolvedGlobal.fonts);\nfunction getFontCssString(props) {\n    const { fontFamily, fontStyle, fontWeight, fontStretch, fontSize } = props;\n    return [fontStyle, fontWeight, fontStretch, `${fontSize}px`, fontFamily].join(' ');\n}\n/**\n * Ephemeral bounds object used for intersection calculations\n *\n * @remarks\n * Used to avoid creating a new object every time we need to intersect\n * element bounds.\n */\nconst tmpElementBounds = createBound(0, 0, 0, 0);\nexport class CanvasTextRenderer extends TextRenderer {\n    canvas;\n    context;\n    rendererBounds;\n    constructor(stage) {\n        super(stage);\n        if (typeof OffscreenCanvas !== 'undefined') {\n            this.canvas = new OffscreenCanvas(0, 0);\n        }\n        else {\n            this.canvas = document.createElement('canvas');\n        }\n        let context = this.canvas.getContext('2d');\n        if (!context) {\n            // A browser may appear to support OffscreenCanvas but not actually support the Canvas '2d' context\n            // Here we try getting the context again after falling back to an HTMLCanvasElement.\n            // See: https://github.com/lightning-js/renderer/issues/26#issuecomment-1750438486\n            this.canvas = document.createElement('canvas');\n            context = this.canvas.getContext('2d');\n        }\n        assertTruthy(context);\n        this.context = context;\n        this.rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                state.fontInfo = undefined;\n                this.invalidateLayoutCache(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.invalidateLayoutCache(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.invalidateLayoutCache(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n                this.invalidateLayoutCache(state);\n            },\n            x: (state, value) => {\n                state.props.x = value;\n                this.invalidateVisibleWindowCache(state);\n            },\n            y: (state, value) => {\n                state.props.y = value;\n                this.invalidateVisibleWindowCache(state);\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.invalidateLayoutCache(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                this.invalidateLayoutCache(state);\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                this.invalidateLayoutCache(state);\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.invalidateLayoutCache(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.invalidateLayoutCache(state);\n            },\n            lineHeight: (state, value) => {\n                state.props.lineHeight = value;\n                this.invalidateLayoutCache(state);\n            },\n            // debug: (state, value) => {\n            //   state.props.debug = value;\n            // },\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    canRenderFont(props) {\n        // The canvas renderer can render any font because it automatically\n        // falls back to system fonts. The CanvasTextRenderer should be\n        // checked last if other renderers are preferred.\n        return true;\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof WebTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an Canvas font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof WebTrFontFace);\n        // We simply add the font face to the document\n        // @ts-expect-error `add()` method should be available from a FontFaceSet\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        globalFontSet.add(fontFace.fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            updateScheduled: false,\n            emitter: new EventEmitter(),\n            canvasPages: undefined,\n            lightning2TextRenderer: new LightningTextTextureRenderer(this.canvas, this.context),\n            renderWindow: undefined,\n            visibleWindow: {\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 0,\n                valid: false,\n            },\n            renderInfo: undefined,\n            forceFullLayoutCalc: false,\n            textW: 0,\n            textH: 0,\n            fontInfo: undefined,\n            fontFaceLoadedHandler: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                drawCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        // If fontInfo is invalid, we need to establish it\n        if (!state.fontInfo) {\n            const cssString = getFontCssString(state.props);\n            state.fontInfo = {\n                cssString: cssString,\n                // TODO: For efficiency we would use this here but it's not reliable on WPE -> document.fonts.check(cssString),\n                loaded: false,\n            };\n            // If font is not loaded, set up a handler to update the font info when the font loads\n            if (!state.fontInfo.loaded) {\n                globalFontSet\n                    .load(cssString)\n                    .then(this.onFontLoaded.bind(this, state, cssString))\n                    .catch(this.onFontLoadError.bind(this, state, cssString));\n                return;\n            }\n        }\n        // If we're waiting for a font face to load, don't render anything\n        if (!state.fontInfo.loaded) {\n            return;\n        }\n        if (!state.renderInfo) {\n            state.lightning2TextRenderer.settings = {\n                text: state.props.text,\n                textAlign: state.props.textAlign,\n                fontFace: state.props.fontFamily,\n                fontSize: state.props.fontSize,\n                fontStyle: [\n                    state.props.fontStretch,\n                    state.props.fontStyle,\n                    state.props.fontWeight,\n                ].join(' '),\n                textColor: getNormalizedRgbaComponents(state.props.color),\n                offsetY: state.props.fontSize + state.props.offsetY,\n                wordWrap: state.props.contain !== 'none',\n                wordWrapWidth: state.props.contain === 'none' ? undefined : state.props.width,\n                letterSpacing: state.props.letterSpacing,\n                lineHeight: state.props.lineHeight,\n            };\n            // const renderInfoCalculateTime = performance.now();\n            state.renderInfo = state.lightning2TextRenderer.calculateRenderInfo();\n            // console.log(\n            //   'Render info calculated in',\n            //   performance.now() - renderInfoCalculateTime,\n            //   'ms',\n            // );\n            state.textH = state.renderInfo.lineHeight * state.renderInfo.lines.length;\n            state.textW = state.renderInfo.width;\n            // Invalidate renderWindow because the renderInfo changed\n            state.renderWindow = undefined;\n        }\n        const { x, y, width, height, scrollY, contain } = state.props;\n        const { visibleWindow } = state;\n        let { renderWindow, canvasPages } = state;\n        if (!visibleWindow.valid) {\n            // Figure out whats actually in the bounds of the renderer/canvas (visibleWindow)\n            const elementBounds = createBound(x, y, contain !== 'none' ? x + width : Infinity, contain === 'both' ? y + height : Infinity, tmpElementBounds);\n            /**\n             * Area that is visible on the screen.\n             */\n            intersectBound(this.rendererBounds, elementBounds, visibleWindow);\n            visibleWindow.valid = true;\n        }\n        const visibleWindowHeight = visibleWindow.y2 - visibleWindow.y1;\n        const maxLinesPerCanvasPage = Math.ceil(visibleWindowHeight / state.renderInfo.lineHeight);\n        if (visibleWindowHeight === 0) {\n            // Nothing to render. Clear any canvasPages and existing renderWindow\n            // Return early.\n            canvasPages = undefined;\n            renderWindow = undefined;\n            this.setStatus(state, 'loaded');\n            return;\n        }\n        else if (renderWindow && canvasPages) {\n            // Return early if we're still viewing inside the established render window\n            // No need to re-render what we've already rendered\n            const renderWindowScreenX1 = x + renderWindow.x1;\n            const renderWindowScreenY1 = y - scrollY + renderWindow.y1;\n            const renderWindowScreenX2 = x + renderWindow.x2;\n            const renderWindowScreenY2 = y - scrollY + renderWindow.y2;\n            if (renderWindowScreenX1 <= visibleWindow.x1 &&\n                renderWindowScreenX2 >= visibleWindow.x2 &&\n                renderWindowScreenY1 <= visibleWindow.y1 &&\n                renderWindowScreenY2 >= visibleWindow.y2) {\n                this.setStatus(state, 'loaded');\n                return;\n            }\n            if (renderWindowScreenY2 < visibleWindow.y2) {\n                // We've scrolled up, so we need to render the next page\n                renderWindow.y1 += maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                renderWindow.y2 += maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                canvasPages.push(canvasPages.shift());\n                canvasPages[2].lineNumStart =\n                    canvasPages[1].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[2].lineNumEnd =\n                    canvasPages[2].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[2].valid = false;\n            }\n            else if (renderWindowScreenY1 > visibleWindow.y1) {\n                // We've scrolled down, so we need to render the previous page\n                renderWindow.y1 -= maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                renderWindow.y2 -= maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                canvasPages.unshift(canvasPages.pop());\n                canvasPages[0].lineNumStart =\n                    canvasPages[1].lineNumStart - maxLinesPerCanvasPage;\n                canvasPages[0].lineNumEnd =\n                    canvasPages[0].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[0].valid = false;\n            }\n        }\n        else {\n            const pageHeight = state.renderInfo.lineHeight * maxLinesPerCanvasPage;\n            const page1Block = Math.ceil(scrollY / pageHeight);\n            const page1LineStart = page1Block * maxLinesPerCanvasPage;\n            const page0LineStart = page1LineStart - maxLinesPerCanvasPage;\n            const page2LineStart = page1LineStart + maxLinesPerCanvasPage;\n            // We haven't rendered anything yet, so we need to render the first page\n            // If canvasPages already exist, let's re-use the textures\n            canvasPages = [\n                {\n                    texture: canvasPages?.[0].texture,\n                    lineNumStart: page0LineStart,\n                    lineNumEnd: page0LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n                {\n                    texture: canvasPages?.[1].texture,\n                    lineNumStart: page1LineStart,\n                    lineNumEnd: page1LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n                {\n                    texture: canvasPages?.[2].texture,\n                    lineNumStart: page2LineStart,\n                    lineNumEnd: page2LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n            ];\n            state.canvasPages = canvasPages;\n            const scrollYNearestPage = page1Block * pageHeight;\n            renderWindow = {\n                x1: 0,\n                y1: scrollYNearestPage - pageHeight,\n                x2: width,\n                y2: scrollYNearestPage + pageHeight * 2,\n            };\n        }\n        state.renderWindow = renderWindow;\n        const pageDrawTime = performance.now();\n        for (const pageInfo of canvasPages) {\n            if (pageInfo.valid)\n                continue;\n            if (pageInfo.lineNumStart < 0) {\n                pageInfo.texture = this.stage.txManager.loadTexture('ImageTexture', {\n                    src: '',\n                });\n                pageInfo.valid = true;\n                continue;\n            }\n            state.lightning2TextRenderer.draw(state.renderInfo, {\n                lines: state.renderInfo.lines.slice(pageInfo.lineNumStart, pageInfo.lineNumEnd),\n                lineWidths: state.renderInfo.lineWidths.slice(pageInfo.lineNumStart, pageInfo.lineNumEnd),\n            });\n            if (!(this.canvas.width === 0 || this.canvas.height === 0)) {\n                pageInfo.texture = this.stage.txManager.loadTexture('ImageTexture', {\n                    src: this.context.getImageData(0, 0, this.canvas.width, this.canvas.height),\n                }, {\n                    preload: true,\n                });\n            }\n            pageInfo.valid = true;\n        }\n        // console.log('pageDrawTime', performance.now() - pageDrawTime, 'ms');\n        // Report final status\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, transform, clippingRect, alpha) {\n        const { stage } = this;\n        const { canvasPages, textW = 0, textH = 0, renderWindow } = state;\n        if (!canvasPages || !renderWindow)\n            return;\n        const { x, y, scrollY, contain, width, height /*, debug*/ } = state.props;\n        const elementRect = {\n            x: x,\n            y: y,\n            width: contain !== 'none' ? width : textW,\n            height: contain === 'both' ? height : textH,\n        };\n        const visibleRect = intersectRect({\n            x: 0,\n            y: 0,\n            width: stage.options.appWidth,\n            height: stage.options.appHeight,\n        }, elementRect);\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        assertTruthy(canvasPages, 'canvasPages is not defined');\n        assertTruthy(renderWindow, 'renderWindow is not defined');\n        const renderWindowHeight = renderWindow.y2 - renderWindow.y1;\n        const pageSize = renderWindowHeight / 3.0;\n        const { zIndex, color } = state.props;\n        // Color alpha of text is not properly rendered to the Canvas texture, so we\n        // need to apply it here.\n        const combinedAlpha = alpha * getNormalizedAlphaComponent(color);\n        if (canvasPages[0].valid) {\n            this.stage.renderer.addRenderable({\n                alpha: combinedAlpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[0].texture?.dimensions?.width || 0,\n                height: canvasPages[0].texture?.dimensions?.height || 0,\n                texture: canvasPages[0].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                tx: transform.tx,\n                ty: transform.ty - scrollY + renderWindow.y1,\n                ta: transform.ta,\n                tb: transform.tb,\n                tc: transform.tc,\n                td: transform.td,\n            });\n        }\n        if (canvasPages[1].valid) {\n            this.stage.renderer.addRenderable({\n                alpha: combinedAlpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[1].texture?.dimensions?.width || 0,\n                height: canvasPages[1].texture?.dimensions?.height || 0,\n                texture: canvasPages[1].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                tx: transform.tx,\n                ty: transform.ty - scrollY + renderWindow.y1 + pageSize,\n                ta: transform.ta,\n                tb: transform.tb,\n                tc: transform.tc,\n                td: transform.td,\n            });\n        }\n        if (canvasPages[2].valid) {\n            this.stage.renderer.addRenderable({\n                alpha: combinedAlpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[2].texture?.dimensions?.width || 0,\n                height: canvasPages[2].texture?.dimensions?.height || 0,\n                texture: canvasPages[2].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                tx: transform.tx,\n                ty: transform.ty - scrollY + renderWindow.y1 + pageSize + pageSize,\n                ta: transform.ta,\n                tb: transform.tb,\n                tc: transform.tc,\n                td: transform.td,\n            });\n        }\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n    }\n    //#endregion Overrides\n    /**\n     * Invalidate the visible window stored in the state. This will cause a new\n     * visible window to be calculated on the next update.\n     *\n     * @param state\n     */\n    invalidateVisibleWindowCache(state) {\n        state.visibleWindow.valid = false;\n        this.setStatus(state, 'loading');\n        this.scheduleUpdateState(state);\n    }\n    /**\n     * Invalidate the layout cache stored in the state. This will cause the text\n     * to be re-layed out on the next update.\n     *\n     * @remarks\n     * This also invalidates the visible window cache.\n     *\n     * @param state\n     */\n    invalidateLayoutCache(state) {\n        state.renderInfo = undefined;\n        this.setStatus(state, 'loading');\n        this.scheduleUpdateState(state);\n    }\n    onFontLoaded(state, cssString) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        state.fontInfo.loaded = true;\n        this.scheduleUpdateState(state);\n    }\n    onFontLoadError(state, cssString, error) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        // Font didn't actually load, but we'll log the error and mark it as loaded\n        // because the browser can still render with a fallback font.\n        state.fontInfo.loaded = true;\n        console.error(`CanvasTextRenderer: Error loading font '${state.fontInfo.cssString}'`, error);\n        this.scheduleUpdateState(state);\n    }\n}\n//# sourceMappingURL=CanvasTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Scene } from './scene/Scene.js';\nimport { startLoop, getTimeStamp } from './platform.js';\nimport { WebGlCoreRenderer } from './renderers/webgl/WebGlCoreRenderer.js';\nimport { assertTruthy } from '../utils.js';\nimport { AnimationManager } from './animations/AnimationManager.js';\nimport { CoreNode } from './CoreNode.js';\nimport { CoreTextureManager } from './CoreTextureManager.js';\nimport { TrFontManager } from './text-rendering/TrFontManager.js';\nimport { CoreShaderManager } from './CoreShaderManager.js';\nimport { SdfTextRenderer } from './text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js';\nimport { CanvasTextRenderer } from './text-rendering/renderers/CanvasTextRenderer.js';\nimport { intersectRect } from './lib/utils.js';\nconst bufferMemory = 2e6;\nconst autoStart = true;\nexport class Stage {\n    options;\n    /// Module Instances\n    animationManager;\n    txManager;\n    fontManager;\n    textRenderers;\n    shManager;\n    renderer;\n    scene;\n    /// State\n    deltaTime = 0;\n    lastFrameTime = 0;\n    currentFrameTime = 0;\n    /**\n     * Stage constructor\n     */\n    constructor(options) {\n        this.options = options;\n        const { canvas, clearColor, rootId, debug, appWidth, appHeight } = options;\n        this.txManager = new CoreTextureManager();\n        this.shManager = new CoreShaderManager();\n        this.animationManager = new AnimationManager();\n        if (debug?.monitorTextureCache) {\n            setInterval(() => {\n                assertTruthy(this.txManager);\n                const debugInfo = this.txManager.getDebugInfo();\n                console.log('Texture ID Cache Size: ', debugInfo.idCacheSize);\n                console.log('Texture Key Cache Size: ', debugInfo.keyCacheSize);\n            }, 1000);\n        }\n        this.renderer = new WebGlCoreRenderer({\n            stage: this,\n            canvas,\n            pixelRatio: options.devicePhysicalPixelRatio * options.deviceLogicalPixelRatio,\n            clearColor: clearColor ?? 0xff000000,\n            bufferMemory,\n            txManager: this.txManager,\n            shManager: this.shManager,\n        });\n        // Must do this after renderer is created\n        this.txManager.renderer = this.renderer;\n        this.textRenderers = {\n            canvas: new CanvasTextRenderer(this),\n            sdf: new SdfTextRenderer(this),\n        };\n        this.fontManager = new TrFontManager(this.textRenderers);\n        // create root node\n        const rootNode = new CoreNode(this, {\n            id: rootId,\n            x: 0,\n            y: 0,\n            width: appWidth,\n            height: appHeight,\n            alpha: 1,\n            clipping: false,\n            color: 0x00000000,\n            colorTop: 0x00000000,\n            colorBottom: 0x00000000,\n            colorLeft: 0x00000000,\n            colorRight: 0x00000000,\n            colorTl: 0x00000000,\n            colorTr: 0x00000000,\n            colorBl: 0x00000000,\n            colorBr: 0x00000000,\n            zIndex: 0,\n            zIndexLocked: 0,\n            scaleX: 1,\n            scaleY: 1,\n            mountX: 0,\n            mountY: 0,\n            mount: 0,\n            pivot: 0.5,\n            pivotX: 0.5,\n            pivotY: 0.5,\n            rotation: 0,\n            parent: null,\n            texture: null,\n            textureOptions: null,\n            shader: null,\n            shaderProps: null,\n        });\n        this.scene = new Scene(rootNode);\n        // execute platform start loop\n        if (autoStart) {\n            startLoop(this);\n        }\n    }\n    /**\n     * Start a new frame draw\n     */\n    drawFrame() {\n        const { renderer, scene, animationManager } = this;\n        if (!scene?.root) {\n            return;\n        }\n        this.lastFrameTime = this.currentFrameTime;\n        this.currentFrameTime = getTimeStamp();\n        this.deltaTime = !this.lastFrameTime\n            ? 100 / 6\n            : this.currentFrameTime - this.lastFrameTime;\n        // step animation\n        animationManager.update(this.deltaTime);\n        // reset and clear viewport\n        renderer?.reset();\n        // test if we need to update the scene\n        if (scene?.root?.hasUpdates) {\n            scene?.root?.update(this.deltaTime);\n        }\n        this.addQuads(scene.root);\n        renderer?.sortRenderables();\n        renderer?.render();\n    }\n    addQuads(node, parentClippingRect = null) {\n        assertTruthy(this.renderer && node.globalTransform);\n        const gt = node.globalTransform;\n        const isRotated = gt.tb !== 0 || gt.tc !== 0;\n        let clippingRect = node.clipping && !isRotated\n            ? {\n                x: gt.tx,\n                y: gt.ty,\n                width: node.width * gt.ta,\n                height: node.height * gt.td,\n            }\n            : null;\n        if (parentClippingRect && clippingRect) {\n            clippingRect = intersectRect(parentClippingRect, clippingRect);\n        }\n        else if (parentClippingRect) {\n            clippingRect = parentClippingRect;\n        }\n        node.renderQuads(this.renderer, clippingRect);\n        node.children.forEach((child) => {\n            if (child.worldAlpha === 0) {\n                return;\n            }\n            this.addQuads(child, clippingRect);\n        });\n    }\n    /**\n     * Given a font name, and possible renderer override, return the best compatible text renderer.\n     *\n     * @remarks\n     * Will always return at least a canvas renderer if no other suitable renderer can be resolved.\n     *\n     * @param fontFamily\n     * @param textRendererOverride\n     * @returns\n     */\n    resolveTextRenderer(trProps, textRendererOverride = null) {\n        let rendererId = textRendererOverride;\n        let overrideFallback = false;\n        // Check if the override is valid (if one is provided)\n        if (rendererId) {\n            const possibleRenderer = this.textRenderers[rendererId];\n            if (!possibleRenderer) {\n                console.warn(`Text renderer override '${rendererId}' not found.`);\n                rendererId = null;\n                overrideFallback = true;\n            }\n            else if (!possibleRenderer.canRenderFont(trProps)) {\n                console.warn(`Cannot use override text renderer '${rendererId}' for font`, trProps);\n                rendererId = null;\n                overrideFallback = true;\n            }\n        }\n        if (!rendererId) {\n            // Iterate through the text renderers and find the first one that can render the font\n            for (const [trId, tr] of Object.entries(this.textRenderers)) {\n                if (trId === 'canvas') {\n                    // Canvas is always a fallback\n                    continue;\n                }\n                if (tr.canRenderFont(trProps)) {\n                    rendererId = trId;\n                    break;\n                }\n            }\n            if (!rendererId) {\n                // If no renderer can be found, use the canvas renderer\n                rendererId = 'canvas';\n            }\n        }\n        if (overrideFallback) {\n            console.warn(`Falling back to text renderer ${String(rendererId)}`);\n        }\n        // By now we are guaranteed to have a valid rendererId (at least Canvas);\n        const resolvedTextRenderer = this.textRenderers[rendererId];\n        assertTruthy(resolvedTextRenderer, 'resolvedTextRenderer undefined');\n        // Need to explicitly cast to TextRenderer because TS doesn't like\n        // the covariant state argument in the setter method map\n        return resolvedTextRenderer;\n    }\n    //#region Properties\n    get root() {\n        return this.scene?.root || null;\n    }\n}\n//# sourceMappingURL=Stage.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreNode } from './CoreNode.js';\nimport { assertTruthy } from '../utils.js';\nexport class CoreTextNode extends CoreNode {\n    textRenderer;\n    trState;\n    _textRendererOverride = null;\n    constructor(stage, props) {\n        super(stage, props);\n        this._textRendererOverride = props.textRendererOverride;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState({\n            x: this.absX,\n            y: this.absY,\n            width: props.width,\n            height: props.height,\n            textAlign: props.textAlign,\n            color: props.color,\n            zIndex: props.zIndex,\n            contain: props.contain,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            letterSpacing: props.letterSpacing,\n            debug: props.debug,\n            fontFamily: props.fontFamily,\n            fontSize: props.fontSize,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            fontWeight: props.fontWeight,\n            text: props.text,\n            lineHeight: props.lineHeight,\n        }, undefined);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    onTextLoaded = () => {\n        const { contain } = this;\n        const setWidth = this.trState.props.width;\n        const setHeight = this.trState.props.height;\n        const calcWidth = this.trState.textW || 0;\n        const calcHeight = this.trState.textH || 0;\n        if (contain === 'both') {\n            this.props.width = setWidth;\n            this.props.height = setHeight;\n        }\n        else if (contain === 'width') {\n            this.props.width = setWidth;\n            this.props.height = calcHeight;\n        }\n        else if (contain === 'none') {\n            this.props.width = calcWidth;\n            this.props.height = calcHeight;\n        }\n        this.updateLocalTransform();\n        this.emit('loaded', {\n            type: 'text',\n            dimensions: {\n                width: this.trState.textW || 0,\n                height: this.trState.textH || 0,\n            },\n        });\n    };\n    onTextFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'text',\n            error,\n        });\n    };\n    get width() {\n        return this.trState.props.width;\n    }\n    set width(value) {\n        this.textRenderer.set.width(this.trState, value);\n    }\n    get height() {\n        return this.trState.props.height;\n    }\n    set height(value) {\n        this.textRenderer.set.height(this.trState, value);\n    }\n    get color() {\n        return this.trState.props.color;\n    }\n    set color(value) {\n        this.textRenderer.set.color(this.trState, value);\n    }\n    get text() {\n        return this.trState.props.text;\n    }\n    set text(value) {\n        this.textRenderer.set.text(this.trState, value);\n    }\n    get textRendererOverride() {\n        return this._textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this._textRendererOverride = value;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState(this.trState.props, this.trState);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    get fontSize() {\n        return this.trState.props.fontSize;\n    }\n    set fontSize(value) {\n        this.textRenderer.set.fontSize(this.trState, value);\n    }\n    get fontFamily() {\n        return this.trState.props.fontFamily;\n    }\n    set fontFamily(value) {\n        this.textRenderer.set.fontFamily(this.trState, value);\n    }\n    get fontStretch() {\n        return this.trState.props.fontStretch;\n    }\n    set fontStretch(value) {\n        this.textRenderer.set.fontStretch(this.trState, value);\n    }\n    get fontStyle() {\n        return this.trState.props.fontStyle;\n    }\n    set fontStyle(value) {\n        this.textRenderer.set.fontStyle(this.trState, value);\n    }\n    get fontWeight() {\n        return this.trState.props.fontWeight;\n    }\n    set fontWeight(value) {\n        this.textRenderer.set.fontWeight(this.trState, value);\n    }\n    get textAlign() {\n        return this.trState.props.textAlign;\n    }\n    set textAlign(value) {\n        this.textRenderer.set.textAlign(this.trState, value);\n    }\n    get contain() {\n        return this.trState.props.contain;\n    }\n    set contain(value) {\n        this.textRenderer.set.contain(this.trState, value);\n    }\n    get scrollable() {\n        return this.trState.props.scrollable;\n    }\n    set scrollable(value) {\n        this.textRenderer.set.scrollable(this.trState, value);\n    }\n    get scrollY() {\n        return this.trState.props.scrollY;\n    }\n    set scrollY(value) {\n        this.textRenderer.set.scrollY(this.trState, value);\n    }\n    get offsetY() {\n        return this.trState.props.offsetY;\n    }\n    set offsetY(value) {\n        this.textRenderer.set.offsetY(this.trState, value);\n    }\n    get letterSpacing() {\n        return this.trState.props.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.textRenderer.set.letterSpacing(this.trState, value);\n    }\n    get lineHeight() {\n        return this.trState.props.lineHeight;\n    }\n    set lineHeight(value) {\n        if (this.textRenderer.set.lineHeight) {\n            this.textRenderer.set.lineHeight(this.trState, value);\n        }\n    }\n    get debug() {\n        return this.trState.props.debug;\n    }\n    set debug(value) {\n        this.textRenderer.set.debug(this.trState, value);\n    }\n    update(delta) {\n        super.update(delta);\n        assertTruthy(this.globalTransform);\n        // globalTransform is updated in super.update(delta)\n        this.textRenderer.set.x(this.trState, this.globalTransform.tx);\n        this.textRenderer.set.y(this.trState, this.globalTransform.ty);\n    }\n    renderQuads(renderer, clippingRect) {\n        assertTruthy(this.globalTransform);\n        this.textRenderer.renderQuads(this.trState, this.globalTransform, clippingRect, this.worldAlpha);\n    }\n    /**\n     * Resolve a text renderer and a new state based on the current text renderer props provided\n     * @param props\n     * @returns\n     */\n    resolveTextRendererAndState(props, prevState) {\n        const resolvedTextRenderer = this.stage.resolveTextRenderer(props, this._textRendererOverride);\n        const textRendererState = resolvedTextRenderer.createState(props);\n        const stateEvents = ['loading', 'loaded', 'failed'];\n        if (prevState) {\n            // Remove the old event listeners from previous state obj there was one\n            stateEvents.forEach((eventName) => {\n                prevState.emitter.off(eventName);\n            });\n        }\n        textRendererState.emitter.on('loaded', this.onTextLoaded);\n        textRendererState.emitter.on('failed', this.onTextFailed);\n        resolvedTextRenderer.scheduleUpdateState(textRendererState);\n        return {\n            resolvedTextRenderer,\n            textRendererState,\n        };\n    }\n}\n//# sourceMappingURL=CoreTextNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MainOnlyNode, getNewId } from './MainOnlyNode.js';\nimport { CoreTextNode } from '../../core/CoreTextNode.js';\nexport class MainOnlyTextNode extends MainOnlyNode {\n    constructor(props, rendererMain, stage) {\n        super(props, rendererMain, stage, new CoreTextNode(stage, {\n            id: getNewId(),\n            x: props.x,\n            y: props.y,\n            width: props.width,\n            height: props.height,\n            alpha: props.alpha,\n            clipping: props.clipping,\n            color: props.color,\n            colorTop: props.colorTop,\n            colorBottom: props.colorBottom,\n            colorLeft: props.colorLeft,\n            colorRight: props.colorRight,\n            colorTl: props.colorTl,\n            colorTr: props.colorTr,\n            colorBl: props.colorBl,\n            colorBr: props.colorBr,\n            zIndex: props.zIndex,\n            zIndexLocked: props.zIndexLocked,\n            scaleX: props.scaleX,\n            scaleY: props.scaleY,\n            mountX: props.mountX,\n            mountY: props.mountY,\n            mount: props.mount,\n            pivot: props.pivot,\n            pivotX: props.pivotX,\n            pivotY: props.pivotY,\n            rotation: props.rotation,\n            // Text properties\n            text: props.text,\n            fontSize: props.fontSize,\n            fontFamily: props.fontFamily,\n            fontWeight: props.fontWeight,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            contain: props.contain,\n            scrollable: props.scrollable,\n            letterSpacing: props.letterSpacing,\n            textAlign: props.textAlign,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            textRendererOverride: props.textRendererOverride,\n            debug: props.debug,\n            lineHeight: props.lineHeight,\n            // These properties will get set appropriately in the base MainOnlyNode class\n            parent: null,\n            texture: null,\n            textureOptions: null,\n            shader: null,\n            shaderProps: null,\n        }));\n    }\n    get text() {\n        return this.coreNode.text;\n    }\n    set text(value) {\n        this.coreNode.text = value;\n    }\n    get textRendererOverride() {\n        return this.coreNode.textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this.coreNode.textRendererOverride = value;\n    }\n    get fontSize() {\n        return this.coreNode.fontSize;\n    }\n    set fontSize(value) {\n        this.coreNode.fontSize = value;\n    }\n    get fontFamily() {\n        return this.coreNode.fontFamily;\n    }\n    set fontFamily(value) {\n        this.coreNode.fontFamily = value;\n    }\n    get fontWeight() {\n        return this.coreNode.fontWeight;\n    }\n    set fontWeight(value) {\n        this.coreNode.fontWeight = value;\n    }\n    get fontStretch() {\n        return this.coreNode.fontStretch;\n    }\n    set fontStretch(value) {\n        this.coreNode.fontStretch = value;\n    }\n    get fontStyle() {\n        return this.coreNode.fontStyle;\n    }\n    set fontStyle(value) {\n        this.coreNode.fontStyle = value;\n    }\n    get textAlign() {\n        return this.coreNode.textAlign;\n    }\n    set textAlign(value) {\n        this.coreNode.textAlign = value;\n    }\n    get contain() {\n        return this.coreNode.contain;\n    }\n    set contain(value) {\n        this.coreNode.contain = value;\n    }\n    get scrollable() {\n        return this.coreNode.scrollable;\n    }\n    set scrollable(value) {\n        this.coreNode.scrollable = value;\n    }\n    get scrollY() {\n        return this.coreNode.scrollY;\n    }\n    set scrollY(value) {\n        this.coreNode.scrollY = value;\n    }\n    get offsetY() {\n        return this.coreNode.offsetY;\n    }\n    set offsetY(value) {\n        this.coreNode.offsetY = value;\n    }\n    get letterSpacing() {\n        return this.coreNode.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.coreNode.letterSpacing = value;\n    }\n    get lineHeight() {\n        return this.coreNode.lineHeight;\n    }\n    set lineHeight(value) {\n        if (value) {\n            this.coreNode.lineHeight = value;\n        }\n    }\n    get debug() {\n        return this.coreNode.debug;\n    }\n    set debug(value) {\n        this.coreNode.debug = value;\n    }\n}\n//# sourceMappingURL=MainOnlyTextNode.js.map","import { CoreExtension } from '../../exports/core-api.js';\n/**\n * Type guard that checks if a Class extends CoreExtension.\n *\n * @param Class\n * @returns\n */\nexport function classExtendsCoreExtension(Class) {\n    return Class.prototype instanceof CoreExtension;\n}\nexport async function loadCoreExtension(coreExtensionModule, stage) {\n    let module;\n    try {\n        console.log('Loading core extension', coreExtensionModule);\n        module = (await import(coreExtensionModule /* @vite-ignore */));\n    }\n    catch (e) {\n        console.error(`The core extension module at '${coreExtensionModule}' could not be loaded.`);\n        console.error(e);\n        return;\n    }\n    if (!module.default) {\n        console.error(`The core extension module at '${coreExtensionModule}' does not have a default export.`);\n        return;\n    }\n    const ExtensionClass = module.default;\n    if (classExtendsCoreExtension(ExtensionClass)) {\n        const coreExtension = new ExtensionClass();\n        try {\n            await coreExtension.run(stage);\n        }\n        catch (e) {\n            console.error(`The core extension at '${coreExtensionModule}' threw an error.`);\n            console.error(e);\n        }\n    }\n    else {\n        console.error(`The core extension at '${coreExtensionModule}' does not extend CoreExtension.`);\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { MainOnlyNode } from './MainOnlyNode.js';\nimport { Stage } from '../../core/Stage.js';\nimport { MainOnlyTextNode } from './MainOnlyTextNode.js';\nimport { loadCoreExtension } from '../utils.js';\nexport class MainCoreDriver {\n    root = null;\n    stage = null;\n    rendererMain = null;\n    async init(rendererMain, rendererSettings, canvas) {\n        this.stage = new Stage({\n            rootId: 1,\n            appWidth: rendererSettings.appWidth,\n            appHeight: rendererSettings.appHeight,\n            deviceLogicalPixelRatio: rendererSettings.deviceLogicalPixelRatio,\n            devicePhysicalPixelRatio: rendererSettings.devicePhysicalPixelRatio,\n            clearColor: rendererSettings.clearColor,\n            canvas,\n            debug: {\n                monitorTextureCache: false,\n            },\n        });\n        this.rendererMain = rendererMain;\n        assertTruthy(this.stage.root);\n        const node = new MainOnlyNode(rendererMain.resolveNodeDefaults({}), this.rendererMain, this.stage, this.stage.root);\n        this.root = node;\n        node.once('beforeDestroy', this.onBeforeDestroyNode.bind(this, node));\n        this.onCreateNode(node);\n        // Load the Core Extension Module if one was specified.\n        if (rendererSettings.coreExtensionModule) {\n            await loadCoreExtension(rendererSettings.coreExtensionModule, this.stage);\n        }\n    }\n    createNode(props) {\n        assertTruthy(this.rendererMain);\n        assertTruthy(this.stage);\n        const node = new MainOnlyNode(props, this.rendererMain, this.stage);\n        node.once('beforeDestroy', this.onBeforeDestroyNode.bind(this, node));\n        this.onCreateNode(node);\n        return node;\n    }\n    createTextNode(props) {\n        assertTruthy(this.rendererMain);\n        assertTruthy(this.stage);\n        const node = new MainOnlyTextNode(props, this.rendererMain, this.stage);\n        node.once('beforeDestroy', this.onBeforeDestroyNode.bind(this, node));\n        this.onCreateNode(node);\n        return node;\n    }\n    // TODO: Remove?\n    destroyNode(node) {\n        node.destroy();\n    }\n    releaseTexture(id) {\n        const { stage } = this;\n        assertTruthy(stage);\n        stage.txManager.removeTextureIdFromCache(id);\n    }\n    getRootNode() {\n        assertTruthy(this.root);\n        return this.root;\n    }\n    onCreateNode(node) {\n        throw new Error('Method not implemented.');\n    }\n    onBeforeDestroyNode(node) {\n        throw new Error('Method not implemented.');\n    }\n}\n//# sourceMappingURL=MainCoreDriver.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * The Global object.\n *\n * @remarks\n * Use this instead of accessing `window` or `self` directly.\n *\n * In the future we may try to get ThreadX working with NodeJS, in that case\n * this can be changed to include NodeJS vs Browser detection logic.\n */\nexport const resolvedGlobal = typeof self === 'undefined' ? globalThis : self;\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ThreadX } from './ThreadX.js';\nimport { assertTruthy } from './utils.js';\nclass SharedObject {\n    /**\n     * The ThreadX instance that this SharedObject should interact with\n     *\n     * @remarks\n     * It's unsafe to use `ThreadX.instance` in different, especially asyncronous,\n     * locations directly because it may change during the lifetime of a\n     * SharedObject. At least it can during tests. So this one should always\n     * be referenced when needed.\n     */\n    threadx;\n    sharedObjectStruct;\n    mutations;\n    waitPromise = null;\n    mutationsQueued = false;\n    static staticInitialized = false;\n    _id;\n    _typeId;\n    initialized = false;\n    destroying = false;\n    curProps;\n    /**\n     * Extract the buffer from a SharedObject\n     *\n     * @remarks\n     * For internal use by ThreadX only\n     *\n     * @param sharedObject\n     * @returns\n     */\n    static extractBuffer(sharedObject) {\n        if (sharedObject.destroying || !sharedObject.sharedObjectStruct) {\n            throw new Error('SharedObject.extractBuffer(): SharedObject is or was being destroyed.');\n        }\n        return sharedObject.sharedObjectStruct.buffer;\n    }\n    constructor(sharedObjectStruct, curProps) {\n        this.curProps = curProps;\n        this.threadx = ThreadX.instance;\n        this.sharedObjectStruct = sharedObjectStruct;\n        this._id = sharedObjectStruct.id;\n        this._typeId = sharedObjectStruct.typeId;\n        const constructor = this.constructor;\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.staticInitialized = true;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const prototype = Object.getPrototypeOf(this);\n            Object.keys(curProps).forEach((key) => {\n                Object.defineProperty(prototype, key, {\n                    get: function () {\n                        return this.curProps[key];\n                    },\n                    set: function (value) {\n                        this.curProps[key] =\n                            value;\n                        this.mutations[key] = true;\n                        this.queueMutations();\n                    },\n                });\n            });\n        }\n        this.mutations = {};\n        this._executeMutations();\n        this.initialized = true;\n    }\n    get typeId() {\n        return this._typeId;\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Assumes lock is acquired\n     */\n    processDirtyProperties() {\n        if (!this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        const { sharedObjectStruct, mutations, curProps } = this;\n        sharedObjectStruct.constructor.propDefs.forEach((propDef, index) => {\n            if (sharedObjectStruct.isDirty(index)) {\n                const propName = propDef.name;\n                // If this property has a pending mutation from this worker, then\n                // cancel it. The mutation from the other worker that has already\n                // been applied to the SharedArrayBuffer will take precedence.\n                delete mutations[propName];\n                const oldValue = curProps[propName];\n                // Apply the mutation from the other worker\n                curProps[propName] =\n                    sharedObjectStruct[propName];\n                // Don't call onPropertyChange during the initialization process\n                if (this.initialized) {\n                    this.onPropertyChange(propName, sharedObjectStruct[propName], oldValue);\n                }\n            }\n        });\n        sharedObjectStruct.resetDirty();\n    }\n    onPropertyChange(propName, newValue, oldValue) {\n        // console.log(`onPropertyChange: ${propName} = ${value} (${this.dirtyProcessCount}, ${ThreadX.workerName)`);\n    }\n    queueMutations() {\n        if (this.mutationsQueued) {\n            return;\n        }\n        this.mutationsQueued = true;\n        queueMicrotask(() => {\n            this.mutationsQueued = false;\n            // If the SharedObject has been destroyed, then forget about processing\n            // any mutations.\n            if (!this.sharedObjectStruct) {\n                return;\n            }\n            this.mutationMicrotask().catch(console.error);\n        });\n    }\n    async mutationMicrotask() {\n        if (!this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        await this.sharedObjectStruct.lockAsync(async () => {\n            this._executeMutations();\n        });\n        if (this.destroying) {\n            this.finishDestroy();\n        }\n    }\n    flush() {\n        if (this.destroying || !this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        this.sharedObjectStruct.lock(() => {\n            this._executeMutations();\n        });\n    }\n    /**\n     * Called when the SharedObject is being destroyed.\n     *\n     * @remarks\n     * This is an opportunity to clean up anything just prior to the SharedObject\n     * being completely destroyed. Shared mutations are allowed in this method.\n     *\n     * IMPORTANT:\n     * `super.onDestroy()` must be called at the END of any subclass override to\n     * ensure proper cleanup.\n     */\n    onDestroy() {\n        // Implement in subclass\n    }\n    /**\n     * Destroy the SharedObject on this worker only.\n     *\n     * @remarks\n     * This stops any internal mutation processing, releases the reference\n     * to the underlying BufferStruct/SharedArrayBuffer, and removes all\n     * event listeners so that the SharedObject can be garbage collected.\n     *\n     * This does not destroy the SharedObject on other worker. To do that,\n     * call `SharedObject.destroy()` on the other worker.\n     */\n    destroy() {\n        const struct = this.sharedObjectStruct;\n        if (this.destroying || !struct) {\n            return;\n        }\n        this.emit('beforeDestroy', {}, { localOnly: true });\n        this.destroying = true;\n        this.onDestroy();\n        // The remainter of the destroy process (this.finishDestroy) is called\n        // after the next set of mutations is processed. This is to ensure that\n        // any final mutations that are queued up are sent to the opposite thread\n        // before the SharedObject is destroyed on this worker.\n        this.queueMutations();\n    }\n    finishDestroy() {\n        const struct = this.sharedObjectStruct;\n        if (!this.destroying || !struct) {\n            return;\n        }\n        // Remove this object from ThreadX\n        // Silently because ThreadX may already have been removed if this object\n        // is being destroyed because the current worker was told to forget about it.\n        this.threadx.forgetObjects([this], { silent: true }).catch(console.error);\n        // Release the reference to the underlying BufferStruct/SharedArrayBuffer\n        this.sharedObjectStruct = null;\n        // Submit a notify in order to wake up self or other worker if waiting\n        // on the struct. Need to do this otherwise memory leaks.\n        struct.notify();\n        // Emit the afterDestroy event\n        this.emit('afterDestroy', {}, { localOnly: true });\n        // Remove all event listeners\n        this.eventListeners = {};\n    }\n    get isDestroyed() {\n        return this.sharedObjectStruct === null;\n    }\n    _executeMutations() {\n        if (!this.sharedObjectStruct) {\n            // SharedObject was destroyed so there's nothing to do\n            return;\n        }\n        // Only process properties if the SharedObject is dirty and the current\n        // worker is not the one that last modified it.\n        if (this.sharedObjectStruct.notifyValue !== this.threadx.workerId &&\n            this.sharedObjectStruct.isDirty()) {\n            this.processDirtyProperties();\n        }\n        const { mutations } = this;\n        this.mutations = {};\n        for (const key in mutations) {\n            if (Object.prototype.hasOwnProperty.call(mutations, key)) {\n                const value = this.curProps[key];\n                // Workaround TypeScript limitation re-assigning to dynamic keys of a class instance:\n                // https://github.com/microsoft/TypeScript/issues/53738\n                const oldValue = this.sharedObjectStruct[key];\n                // @ts-expect-error Ignore the read-only assignment errors\n                this.sharedObjectStruct[key] =\n                    value;\n            }\n        }\n        if (this.waitPromise) {\n            this.waitPromise = null;\n        }\n        let expectedNotifyValue = this.sharedObjectStruct.notifyValue;\n        if (this.sharedObjectStruct.isDirty()) {\n            this.sharedObjectStruct.notify(this.threadx.workerId);\n            expectedNotifyValue = this.threadx.workerId;\n        }\n        const waitPromise = this.sharedObjectStruct\n            .waitAsync(expectedNotifyValue)\n            .then(async (result) => {\n            // Only respond if this is the most recent wait promise\n            if (this.waitPromise === waitPromise && this.sharedObjectStruct) {\n                assertTruthy(result === 'ok');\n                this.waitPromise = null;\n                await this.mutationMicrotask();\n            }\n        });\n        this.waitPromise = waitPromise;\n    }\n    //#region EventEmitter\n    eventListeners = {};\n    on(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        listeners.push(listener);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data, options = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const listeners = this.eventListeners[event];\n        if (!options.localOnly) {\n            // Emit on opposite worker (if shared)\n            ThreadX.instance.__sharedObjectEmit(this, event, data);\n        }\n        if (!listeners) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        [...listeners].forEach((listener) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            listener(this, data);\n        });\n    }\n}\nexport { SharedObject };\n//# sourceMappingURL=SharedObject.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction isValidTypeIdCharCode(charCode) {\n    // Allow uppercase letters and numbers\n    return ((charCode >= 65 && charCode <= 90) || (charCode >= 48 && charCode <= 57));\n}\nexport function genTypeId(tidString) {\n    let typeId = 0;\n    if (tidString.length === 0) {\n        throw new Error(`genTypeId: Type ID string must be at least 1 character`);\n    }\n    else if (tidString.length > 4) {\n        throw new Error(`genTypeId: Type ID string must be 4 characters or less`);\n    }\n    for (let i = 0; i < tidString.length; i++) {\n        let charCode = tidString.charCodeAt(i);\n        if (charCode !== charCode) {\n            // Use 0 for NaN\n            charCode = 0;\n        }\n        else if (!isValidTypeIdCharCode(charCode)) {\n            // Throw if the character is not a valid type ID character\n            throw new Error(`genTypeId: Invalid character '${tidString[i]}' (char code: ${charCode}) in type ID string. A-Z and 0-9 only.`);\n        }\n        typeId |= charCode << (i * 8);\n    }\n    return typeId;\n}\n/**\n * Returns true if the given type ID is valid.\n *\n * @param typeId\n * @returns\n */\nexport function isValidTypeId(typeId) {\n    for (let i = 0; i < 4; i++) {\n        const charCode = typeId & 0xff;\n        if (!isValidTypeIdCharCode(charCode) && (charCode !== 0 || i === 0)) {\n            // Bail as soon as we encounter an invalid character\n            // Except if charCodes other than the first one are 0\n            return false;\n        }\n        typeId >>>= 8;\n    }\n    return true;\n}\n/**\n * Converts a type ID to its string form.\n *\n * @remarks\n * If the type ID is not a valid type ID, null is returned.\n *\n * @param typeId\n * @returns\n */\nexport function stringifyTypeId(typeId) {\n    const chars = [];\n    for (let i = 0; i < 4; i++) {\n        const charCode = typeId & 0xff;\n        if (isValidTypeIdCharCode(charCode)) {\n            chars.push(String.fromCharCode(charCode));\n        }\n        else if (charCode !== 0 || i === 0) {\n            // Bail as soon as we encounter an invalid character\n            // Except if charCodes other than the first one are 0\n            return '????';\n        }\n        typeId >>>= 8;\n    }\n    return chars.join('');\n}\n//# sourceMappingURL=buffer-struct-utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { SharedObject } from './SharedObject.js';\nimport { stringifyTypeId } from './buffer-struct-utils.js';\nimport { assertTruthy, resolvedGlobal } from './utils.js';\nfunction isMessage(messageType, message) {\n    return (typeof message === 'object' &&\n        message !== null &&\n        'threadXMessageType' in message &&\n        message.threadXMessageType === messageType);\n}\nfunction isWebWorker(selfObj) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return typeof selfObj.DedicatedWorkerGlobalScope === 'function';\n}\nexport class ThreadX {\n    static init(options) {\n        if (resolvedGlobal.THREADX) {\n            throw new Error('ThreadX.init(): ThreadX already initialized.');\n        }\n        const threadX = new ThreadX(options);\n        resolvedGlobal.THREADX = threadX;\n        return threadX;\n    }\n    static destroy() {\n        if (!resolvedGlobal.THREADX) {\n            console.warn('ThreadX.destroy(): ThreadX is not initialized.');\n            return;\n        }\n        delete resolvedGlobal.THREADX;\n        return;\n    }\n    /**\n     * Get the Worker ID of the current worker\n     *\n     * @remarks\n     * This is only valid after ThreadX.init() has been called.\n     */\n    static get workerId() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX.workerId;\n    }\n    /**\n     * Get the Worker Name of the current thread\n     *\n     * @remarks\n     * This is only valid after ThreadX.init() has been called.\n     */\n    static get workerName() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX.workerName;\n    }\n    static get instance() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX;\n    }\n    workerId;\n    workerName;\n    sharedObjectFactory;\n    onSharedObjectCreated;\n    onBeforeObjectForgotten;\n    /**\n     * User-defined message handler\n     */\n    onUserMessage;\n    sharedObjects = new Map();\n    /**\n     * WeakMap of SharedObjects to additional metadata\n     */\n    sharedObjectData = new WeakMap();\n    workers = new Map();\n    workerReadyPromises = new Map();\n    pendingAsyncMsgs = new Map();\n    nextAsyncMsgId = 0;\n    nextUniqueId = 0;\n    /**\n     * Suppress emitting events from SharedObjects\n     *\n     * @remarks\n     * This is used to prevent infinite loops when emitting events from a SharedObject\n     * that is shared with another worker.\n     *\n     * We set this to true when we receive a SharedObjectEmitMessage from another worker\n     * and set it back to false after we have emitted the event on the SharedObject.\n     */\n    suppressSharedObjectEmit = false;\n    constructor(options) {\n        this.workerId = options.workerId;\n        this.workerName = options.workerName;\n        this.nextUniqueId = options.workerId * 10000000000000 + 1;\n        this.sharedObjectFactory = options.sharedObjectFactory;\n        this.onSharedObjectCreated = options.onObjectShared;\n        this.onBeforeObjectForgotten = options.onBeforeObjectForgotten;\n        this.onUserMessage = options.onMessage;\n        const mySelf = resolvedGlobal;\n        if (isWebWorker(mySelf)) {\n            this.registerWorker('parent', mySelf);\n            this.sendMessage('parent', {\n                threadXMessageType: 'ready',\n            });\n        }\n    }\n    registerWorker(workerName, worker) {\n        this.workers.set(workerName, worker);\n        // Set up a promise that will resolve when the worker sends the\n        // 'ready' message\n        let readyResolve;\n        let readyPromise;\n        if (workerName === 'parent') {\n            // parent worker is always ready\n            readyPromise = Promise.resolve();\n            readyResolve = () => {\n                // do nothing\n            };\n        }\n        else {\n            readyPromise = new Promise((resolve) => {\n                readyResolve = resolve;\n            });\n        }\n        this.workerReadyPromises.set(workerName, {\n            promise: readyPromise,\n            resolve: readyResolve,\n        });\n        this.listenForWorkerMessages(workerName, worker);\n    }\n    closeWorker(workerName) {\n        if (!this.workers.has(workerName)) {\n            throw new Error(`Worker ${workerName} not registered.`);\n        }\n        this.closeWorkerAsync(workerName).catch(console.error);\n    }\n    async closeWorkerAsync(workerName, timeout = 5000) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`Worker ${workerName} not registered.`);\n        }\n        const result = await Promise.race([\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(false);\n                }, timeout);\n            }),\n            this.sendMessageAsync(workerName, {\n                threadXMessageType: 'close',\n            }),\n        ]);\n        this.workers.delete(workerName);\n        this.workerReadyPromises.delete(workerName);\n        if (!result) {\n            console.warn(`threadX.closeWorkerAsync(): Worker \"${workerName}\" did not respond to \"close\" message within ${timeout}ms. Forcing termination.`);\n            worker.terminate?.();\n            return 'forced';\n        }\n        return 'graceful';\n    }\n    listenForWorkerMessages(workerName, worker) {\n        worker.addEventListener('message', (event) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const { data } = event;\n            // Process only if message is a ThreadX message\n            const asyncMsgId = data.__asyncMsgId;\n            this.onMessage(workerName, data)\n                .then((response) => {\n                if (asyncMsgId !== undefined) {\n                    worker.postMessage({\n                        threadXMessageType: 'response',\n                        asyncMsgId: asyncMsgId,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: response,\n                    });\n                }\n            })\n                .catch((error) => {\n                if (asyncMsgId !== undefined) {\n                    worker.postMessage({\n                        threadXMessageType: 'response',\n                        asyncMsgId: asyncMsgId,\n                        error: true,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: error,\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Share a SharedObject with a worker\n     *\n     * @param workerName Worker to share with\n     * @param sharedObject\n     */\n    async shareObjects(workerName, sharedObjects) {\n        for (const sharedObject of sharedObjects) {\n            if (this.sharedObjects.get(sharedObject.id)) {\n                // Currently we only support sharing objects with only a single worker\n                // TODO: Support sharing objects with multiple workers?\n                //   - Do we really need to do this?\n                console.warn(`ThreadX.shareObject(): SharedObject ${sharedObject.id} (TypeID: ${stringifyTypeId(sharedObject.typeId)}) is already shared.`);\n            }\n            else {\n                this.sharedObjects.set(sharedObject.id, sharedObject);\n                this.sharedObjectData.set(sharedObject, {\n                    workerName: workerName,\n                    shareConfirmed: false,\n                    emitQueue: null,\n                });\n            }\n        }\n        await this.sendMessageAsync(workerName, {\n            threadXMessageType: 'shareObjects',\n            buffers: sharedObjects.map((so) => {\n                return SharedObject.extractBuffer(so);\n            }),\n        });\n        for (const sharedObject of sharedObjects) {\n            const soData = this.sharedObjectData.get(sharedObject);\n            if (soData) {\n                soData.shareConfirmed = true;\n                const { emitQueue } = soData;\n                if (emitQueue) {\n                    for (const event of emitQueue) {\n                        this.__sharedObjectEmit(sharedObject, event[0], event[1]);\n                    }\n                    soData.emitQueue = null;\n                }\n            }\n        }\n        // TODO: Handle case where worker fails to create shared object on its end\n        //  - We could issue you an error event back to the sharer\n    }\n    /**\n     * Tell ThreadX to forget about SharedObjects\n     *\n     * @remarks\n     * This causes ThreadX on the current worker and the worker that the object\n     * is shared with to forget about the object. It is up to the worker code to\n     * actually make sure that no other references to the SharedObjects exist so\n     * that they can be garbage collected.\n     *\n     * A worker can implement the onObjectForgotten() callback to be notified\n     * when a SharedObject is forgotten.\n     *\n     * @param sharedObject\n     * @param options Options\n     */\n    async forgetObjects(sharedObjects, options = {}) {\n        /**\n         * Map of worker name to array of SharedObjects\n         *\n         * @remarks\n         * We group the shared objects by worker so that we can send a single message\n         * to forget all of the objects shared with each worker.\n         */\n        const objectsByWorker = new Map();\n        for (const sharedObject of sharedObjects) {\n            if (!this.sharedObjects.has(sharedObject.id)) {\n                // Currently we only support sharing objects with only a single worker\n                if (!options.silent) {\n                    console.warn(`ThreadX.forgetObject(): SharedObject ${sharedObject.id} (TypeID: ${stringifyTypeId(sharedObject.typeId)}) is not shared.`);\n                }\n            }\n            else {\n                const soData = this.sharedObjectData.get(sharedObject);\n                assertTruthy(soData);\n                let objectsInWorker = objectsByWorker.get(soData.workerName);\n                if (!objectsInWorker) {\n                    objectsInWorker = [];\n                    objectsByWorker.set(soData.workerName, objectsInWorker);\n                }\n                objectsInWorker.push(sharedObject);\n                this.sharedObjects.delete(sharedObject.id);\n                this.sharedObjectData.delete(sharedObject);\n            }\n        }\n        const promises = [];\n        for (const [workerName, objectsInWorker] of objectsByWorker) {\n            promises.push(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.sendMessageAsync(workerName, {\n                threadXMessageType: 'forgetObjects',\n                objectIds: objectsInWorker.map((so) => so.id),\n            }));\n        }\n        await Promise.all(promises);\n    }\n    sendMessage(workerName, message, transfer) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`ThreadX.sendMessage(): Worker '${workerName}' not registered.`);\n        }\n        this.sendMessageAsync(workerName, message, transfer, {\n            skipResponseWait: true,\n        }).catch(console.error);\n    }\n    async sendMessageAsync(workerName, message, transfer, options = {}) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`ThreadX.execMessage(): Worker '${workerName}' not registered.`);\n        }\n        // Wait for the worker to be ready (if it isn't already)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        await this.workerReadyPromises.get(workerName).promise;\n        if (options.skipResponseWait) {\n            worker.postMessage(message, transfer);\n            return;\n        }\n        const asyncMsgId = this.nextAsyncMsgId++;\n        const promise = new Promise((resolve, reject) => {\n            this.pendingAsyncMsgs.set(asyncMsgId, {\n                resolve,\n                reject,\n            });\n        });\n        message.__asyncMsgId = asyncMsgId;\n        worker.postMessage(message, transfer);\n        return promise;\n    }\n    async onMessage(srcWorkerName, message) {\n        if (isMessage('shareObjects', message)) {\n            message.buffers.forEach((buffer) => {\n                const sharedObject = this.sharedObjectFactory?.(buffer);\n                if (!sharedObject) {\n                    throw new Error('ThreadX.onMesasge(): Failed to create shared object.');\n                }\n                this.sharedObjects.set(sharedObject.id, sharedObject);\n                this.sharedObjectData.set(sharedObject, {\n                    workerName: srcWorkerName,\n                    shareConfirmed: true,\n                    emitQueue: null,\n                });\n                this.onSharedObjectCreated?.(sharedObject);\n            });\n        }\n        else if (isMessage('forgetObjects', message)) {\n            message.objectIds.forEach((id) => {\n                const sharedObject = this.sharedObjects.get(id);\n                if (!sharedObject) {\n                    // If we can't find the SharedObject then it wasn't shared with this\n                    // worker. Just ignore the message.\n                    return;\n                }\n                this.onBeforeObjectForgotten?.(sharedObject);\n                this.sharedObjects.delete(id);\n                sharedObject.destroy();\n            });\n        }\n        else if (isMessage('sharedObjectEmit', message)) {\n            const sharedObject = this.sharedObjects.get(message.sharedObjectId);\n            if (!sharedObject) {\n                // If we can't find the SharedObject then it wasn't shared with this\n                // worker. Just ignore the message.\n                return;\n            }\n            // Prevent emitting the event back to the worker that sent it.\n            this.suppressSharedObjectEmit = true;\n            sharedObject.emit(message.eventName, message.data);\n            this.suppressSharedObjectEmit = false;\n        }\n        else if (isMessage('response', message)) {\n            const response = this.pendingAsyncMsgs.get(message.asyncMsgId);\n            if (!response) {\n                throw new Error(`ThreadX.onMessage(): Received response for unknown request (ID: ${message.asyncMsgId})`);\n            }\n            this.pendingAsyncMsgs.delete(message.asyncMsgId);\n            if (message.error) {\n                response.reject(message.data);\n            }\n            else {\n                response.resolve(message.data);\n            }\n        }\n        else if (isMessage('close', message)) {\n            resolvedGlobal.close();\n            return true;\n        }\n        else if (isMessage('ready', message)) {\n            // Resolve the worker ready promise\n            this.workerReadyPromises.get(srcWorkerName)?.resolve();\n            return true;\n        }\n        else if (this.onUserMessage) {\n            return await this.onUserMessage(message);\n        }\n    }\n    getSharedObjectById(id) {\n        return this.sharedObjects.get(id) || null;\n    }\n    /**\n     * Generates an ID that is unique across all ThreadX workers.\n     *\n     * @remarks\n     * The ID is based on the `workerId` set in the `ThreadXOptions` and an\n     * incrementing counter. For the ID to actually be unique the `workerId` must\n     * also be unique.\n     *\n     * @returns A unique ID\n     */\n    generateUniqueId() {\n        return this.nextUniqueId++;\n    }\n    /**\n     * Emit an event from a SharedObject to all other workers\n     *\n     * @internalRemarks\n     * For internal ThreadX use only.\n     *\n     * Since we aren't sure what workers are sharing a SharedObject we need to\n     * emit the event to all workers. (TODO: Possible optimization?)\n     *\n     * @param sharedObject\n     * @param eventName\n     * @param data\n     * @returns\n     */\n    __sharedObjectEmit(sharedObject, eventName, data) {\n        // If we are currently emitting an event from a SharedObject that originated\n        // from another worker then we don't want to emit the event again.\n        if (this.suppressSharedObjectEmit) {\n            return;\n        }\n        const soData = this.sharedObjectData.get(sharedObject);\n        if (!soData) {\n            // Object isn't shared with any workers yet. Not even in process to do so.\n            // Just ignore the emit.\n            return;\n        }\n        if (!soData.shareConfirmed) {\n            // Object is in the process of being shared with other workers. Queue the\n            // emit until the share is confirmed.\n            if (!soData.emitQueue) {\n                soData.emitQueue = [];\n            }\n            soData.emitQueue.push([eventName, data]);\n            return;\n        }\n        const worker = this.workers.get(soData.workerName);\n        assertTruthy(worker, 'Worker not found');\n        worker.postMessage({\n            threadXMessageType: 'sharedObjectEmit',\n            sharedObjectId: sharedObject.id,\n            eventName,\n            data,\n        });\n    }\n}\n//# sourceMappingURL=ThreadX.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ThreadX } from './ThreadX.js';\nimport { stringifyTypeId } from './buffer-struct-utils.js';\nconst TYPEID_INT32_INDEX = 0;\nconst NOTIFY_INT32_INDEX = 1;\nconst LOCK_INT32_INDEX = 2;\nconst DIRTY_INT32_INDEX = 6;\nconst ID_FLOAT64_INDEX = 2;\nconst MAX_STRING_SIZE = 255;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction valueIsType(expectedType, type, value) {\n    return expectedType === type;\n}\nfunction valuesAreEqual(a, b) {\n    return a === b;\n}\nexport function structProp(type, options) {\n    return function (target, key, descriptor) {\n        const constructor = target.constructor;\n        // Make sure the static initializer has been called. We must check that the\n        // constructor directly has its \"own property\" because it may be inherited\n        // from a parent class.\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.initStatic();\n        }\n        let byteOffset = constructor.size;\n        let offset = 0;\n        let byteSize = 0;\n        if (type === 'string') {\n            byteOffset += byteOffset % 2;\n            offset = byteOffset / 2;\n            byteSize = (MAX_STRING_SIZE + 1) * 2; // 16-bits for size then 255 16-bit characters\n        }\n        else if (type === 'int32' || type === 'boolean') {\n            byteOffset += byteOffset % 4;\n            offset = byteOffset / 4;\n            byteSize = 4;\n        }\n        else if (type === 'number') {\n            byteOffset += byteOffset % 8;\n            offset = byteOffset / 8;\n            byteSize = 8;\n        }\n        const propDefs = constructor.propDefs;\n        const propNum = propDefs.length;\n        const propDef = {\n            propNum,\n            name: key,\n            type,\n            byteOffset: byteOffset,\n            offset: offset,\n            byteSize: byteSize,\n        };\n        propDefs.push(propDef);\n        // console.log(constructor.size, byteOffset, byteSize, propDef);\n        constructor.size = byteOffset + byteSize;\n        // TODO: Move the descriptors to the prototype to avoid code duplication/closures\n        descriptor.get = function () {\n            let value;\n            if (type === 'string') {\n                const length = this.uint16array[offset];\n                if (!length)\n                    return '';\n                if (length > MAX_STRING_SIZE) {\n                    // This should never happen because we truncate the string when setting it\n                    throw new Error(`get SharedObject.${key}: Text length is too long. Length: ${length}`);\n                }\n                value = String.fromCharCode(...this.uint16array.slice(offset + 1, offset + 1 + length));\n            }\n            else if (type === 'int32') {\n                value = this.int32array[offset];\n            }\n            else if (type === 'boolean') {\n                value = !!this.int32array[offset];\n            }\n            else if (type === 'number') {\n                value = this.float64array[offset];\n            }\n            if (options?.bufferToProp) {\n                value = options.bufferToProp(value);\n            }\n            return value;\n        };\n        descriptor.set = function (value) {\n            if (options?.propToBuffer) {\n                value = options.propToBuffer(value);\n            }\n            if (valueIsType('string', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    // Copy string into shared memory in the most efficient way possible\n                    let length = value.length;\n                    if (length > MAX_STRING_SIZE) {\n                        console.error(`set SharedObject.${key}: Text length is too long. Truncating...`, length);\n                        length = MAX_STRING_SIZE;\n                    }\n                    this.uint16array[offset] = length;\n                    const startOffset = offset + 1;\n                    const endOffset = startOffset + length;\n                    let charIndex = 0;\n                    for (let i = startOffset; i < endOffset; i++) {\n                        this.uint16array[i] = value.charCodeAt(charIndex++);\n                    }\n                }\n            }\n            else if (valueIsType('int32', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.int32array[offset] = value;\n                }\n            }\n            else if (valueIsType('boolean', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.int32array[offset] = value ? 1 : 0;\n                }\n            }\n            else if (valueIsType('number', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.float64array[offset] = value;\n                }\n            }\n        };\n    };\n}\n/**\n * BufferStruct Header Structure:\n * Int32[0]\n *   Type ID: Type of object (32-bit identifier)\n * Int32[1]\n *    Notify / Last Mutator Worker ID\n * Int32[2]\n *    Lock\n * Int32[3]\n *    RESERVED (64-bit align)\n * Int32[4 - 5] / Float64[ID_FLOAT64_INDEX = 2]\n *    Shared Unique ID of the object\n * Int32[DIRTY_INT32_INDEX = 6]\n *    Dirty Bit Mask 1 (Property Indices 0-31)\n * Int32[DIRTY_INT32_INDEX + 1 = 7]\n *    Dirty Bit Mask 2 (Property Indices 32-63)\n *\n * HEADER SIZE MUST BE A MULTIPLE OF 8 BYTES (64-BIT ALIGNMENT)\n */\nclass BufferStruct {\n    buffer;\n    // Lock ID that is a valid 32-bit random integer\n    lockId = Math.floor(Math.random() * 0xffffffff);\n    uint16array;\n    int32array;\n    float64array;\n    static staticInitialized = false;\n    static typeId = 0;\n    static typeIdStr = '';\n    static size = 8 * 4; // Header size\n    static propDefs = [];\n    constructor(buffer) {\n        const constructor = this.constructor;\n        // Make sure the static initializer has been called. We must check that the\n        // constructor directly has its \"own property\" because it may be inherited\n        // from a parent class.\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.initStatic();\n        }\n        const isNew = !buffer;\n        if (!buffer) {\n            // Round constructor.size to the nearest multiple of 8 bytes (64-bit alignment)\n            buffer = new SharedArrayBuffer(Math.ceil(constructor.size / 8) * 8);\n        }\n        this.buffer = buffer;\n        this.uint16array = new Uint16Array(buffer);\n        this.int32array = new Int32Array(buffer);\n        this.float64array = new Float64Array(buffer);\n        const typeId = constructor.typeId;\n        // If this is a new buffer, initialize the TypeID and ID\n        if (isNew) {\n            this.int32array[TYPEID_INT32_INDEX] = typeId;\n            this.float64array[ID_FLOAT64_INDEX] = ThreadX.instance.generateUniqueId();\n        }\n        else if (this.int32array[TYPEID_INT32_INDEX] !== typeId) {\n            // If this is an existing buffer, verify the TypeID is the same as expected\n            // by this class\n            throw new Error(`BufferStruct: TypeId mismatch. Expected '${constructor.typeIdStr}', got '${stringifyTypeId(this.int32array[TYPEID_INT32_INDEX])}'`);\n        }\n    }\n    /**\n     * Safely extract the TypeID from any SharedArrayBuffer (as if it is a BufferStruct)\n     *\n     * @remarks\n     * Does not check if the TypeID is valid however it does a basic sanity check to\n     * ensure the buffer is large enough to contain the TypeID at Int32[TYPEID_INT32_INDEX].\n     *\n     * If the buffer is found to be invalid, 0 is returned.\n     *\n     * @param buffer\n     * @returns\n     */\n    static extractTypeId(buffer) {\n        if (buffer.byteLength < BufferStruct.size || buffer.byteLength % 8 !== 0) {\n            return 0;\n        }\n        return new Int32Array(buffer)[TYPEID_INT32_INDEX] || 0;\n    }\n    /**\n     * Checks if typeId is valid and sets up static properties when the first\n     * structProp() decorator is set-up on the class.\n     *\n     * @remarks\n     * WARNING: This should not ever be called directly.\n     *\n     * @internal\n     */\n    static initStatic() {\n        const typeIdStr = stringifyTypeId(this.typeId);\n        if (typeIdStr === '????') {\n            throw new Error('BufferStruct.typeId must be set to a valid 32-bit integer');\n        }\n        this.typeIdStr = typeIdStr;\n        this.propDefs = [...this.propDefs];\n        this.staticInitialized = true;\n    }\n    setDirty(propIndex) {\n        const dirtyWordOffset = Math.floor(propIndex / 32);\n        const dirtyBitOffset = propIndex - dirtyWordOffset * 32;\n        this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] =\n            this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] |\n                (1 << dirtyBitOffset);\n    }\n    resetDirty() {\n        // TODO: Do we need to use atomics here?\n        this.int32array[NOTIFY_INT32_INDEX] = 0;\n        this.int32array[DIRTY_INT32_INDEX] = 0;\n        this.int32array[DIRTY_INT32_INDEX + 1] = 0;\n    }\n    isDirty(propIndex) {\n        if (propIndex !== undefined) {\n            const dirtyWordOffset = Math.floor(propIndex / 32);\n            const dirtyBitOffset = propIndex - dirtyWordOffset * 32;\n            return !!(this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] &\n                (1 << dirtyBitOffset));\n        }\n        return !!(this.int32array[DIRTY_INT32_INDEX] ||\n            this.int32array[DIRTY_INT32_INDEX + 1]);\n    }\n    get typeId() {\n        // Atomic load not required here because typeId is constant\n        return this.int32array[TYPEID_INT32_INDEX];\n    }\n    get id() {\n        // Atomic load not required here because id is constant\n        return this.float64array[ID_FLOAT64_INDEX];\n    }\n    /**\n     * Returns the current notify value\n     */\n    get notifyValue() {\n        return Atomics.load(this.int32array, NOTIFY_INT32_INDEX);\n    }\n    /**\n     * Returns true if the BufferStruct is currently locked\n     */\n    get isLocked() {\n        return Atomics.load(this.int32array, LOCK_INT32_INDEX) !== 0;\n    }\n    lock(callback) {\n        let origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        while (origLock !== 0) {\n            try {\n                Atomics.wait(this.int32array, LOCK_INT32_INDEX, origLock);\n            }\n            catch (e) {\n                if (e instanceof TypeError &&\n                    e.message === 'Atomics.wait cannot be called in this context') {\n                    // Atomics.wait() not supported in this context (main worker), so just spin\n                    // TODO: Maybe we detect this earlier and avoid this exception? This works for now.\n                }\n                else {\n                    throw e;\n                }\n            }\n            origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        }\n        let result;\n        try {\n            result = callback();\n        }\n        finally {\n            Atomics.store(this.int32array, LOCK_INT32_INDEX, 0);\n            Atomics.notify(this.int32array, LOCK_INT32_INDEX);\n        }\n        return result;\n    }\n    async lockAsync(callback) {\n        let origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        while (origLock !== 0) {\n            const result = Atomics.waitAsync(this.int32array, LOCK_INT32_INDEX, origLock);\n            await result.value;\n            origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        }\n        let result;\n        try {\n            result = await callback();\n        }\n        finally {\n            Atomics.store(this.int32array, LOCK_INT32_INDEX, 0);\n            Atomics.notify(this.int32array, LOCK_INT32_INDEX);\n        }\n        return result;\n    }\n    notify(value) {\n        if (value !== undefined) {\n            Atomics.store(this.int32array, NOTIFY_INT32_INDEX, value);\n        }\n        return Atomics.notify(this.int32array, NOTIFY_INT32_INDEX);\n    }\n    wait(expectedValue, timeout = Infinity) {\n        const result = Atomics.wait(this.int32array, NOTIFY_INT32_INDEX, expectedValue, timeout);\n        return result;\n    }\n    async waitAsync(expectedValue, timeout = Infinity) {\n        const result = Atomics.waitAsync(this.int32array, NOTIFY_INT32_INDEX, expectedValue, timeout);\n        return result.value;\n    }\n}\nexport { BufferStruct };\n//# sourceMappingURL=BufferStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BufferStruct, structProp, genTypeId } from '@lightningjs/threadx';\nexport class NodeStruct extends BufferStruct {\n    static typeId = genTypeId('NODE');\n    get x() {\n        return 0;\n    }\n    set x(value) {\n        // Decorator will handle this\n    }\n    get y() {\n        return 0;\n    }\n    set y(value) {\n        // Decorator will handle this\n    }\n    get width() {\n        return 0;\n    }\n    set width(value) {\n        // Decorator will handle this\n    }\n    get height() {\n        return 0;\n    }\n    set height(value) {\n        // Decorator will handle this\n    }\n    get alpha() {\n        return 1;\n    }\n    set alpha(value) {\n        // Decorator will handle this\n    }\n    get clipping() {\n        return false;\n    }\n    set clipping(value) {\n        // Decorator will handle this\n    }\n    get color() {\n        return 0;\n    }\n    set color(value) {\n        // Decorator will handle this\n    }\n    get colorTop() {\n        return 0;\n    }\n    set colorTop(value) {\n        // Decorator will handle this\n    }\n    get colorBottom() {\n        return 0;\n    }\n    set colorBottom(value) {\n        // Decorator will handle this\n    }\n    get colorLeft() {\n        return 0;\n    }\n    set colorLeft(value) {\n        // Decorator will handle this\n    }\n    get colorRight() {\n        return 0;\n    }\n    set colorRight(value) {\n        // Decorator will handle this\n    }\n    get colorTl() {\n        return 0;\n    }\n    set colorTl(value) {\n        // Decorator will handle this\n    }\n    get colorTr() {\n        return 0;\n    }\n    set colorTr(value) {\n        // Decorator will handle this\n    }\n    get colorBl() {\n        return 0;\n    }\n    set colorBl(value) {\n        // Decorator will handle this\n    }\n    get colorBr() {\n        return 0;\n    }\n    set colorBr(value) {\n        // Decorator will handle this\n    }\n    get scaleX() {\n        return 1;\n    }\n    set scaleX(value) {\n        // Decorator will handle this\n    }\n    get scaleY() {\n        return 1;\n    }\n    set scaleY(value) {\n        // Decorator will handle this\n    }\n    get mount() {\n        return 0;\n    }\n    set mount(value) {\n        // Decorator will handle this\n    }\n    get mountX() {\n        return 0;\n    }\n    set mountX(value) {\n        // Decorator will handle this\n    }\n    get mountY() {\n        return 0;\n    }\n    set mountY(value) {\n        // Decorator will handle this\n    }\n    get pivot() {\n        return 0.5;\n    }\n    set pivot(value) {\n        // Decorator will handle this\n    }\n    get pivotX() {\n        return 0.5;\n    }\n    set pivotX(value) {\n        // Decorator will handle this\n    }\n    get pivotY() {\n        return 0.5;\n    }\n    set pivotY(value) {\n        // Decorator will handle this\n    }\n    get rotation() {\n        return 0;\n    }\n    set rotation(value) {\n        // Decorator will handle this\n    }\n    get parentId() {\n        return 0;\n    }\n    set parentId(value) {\n        // Decorator will handle this\n    }\n    get zIndex() {\n        return 0;\n    }\n    set zIndex(value) {\n        // Decorator will handle this\n    }\n    get zIndexLocked() {\n        return 0;\n    }\n    set zIndexLocked(value) {\n        // Decorator will handle this\n    }\n}\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"x\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"y\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"width\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"height\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"alpha\", null);\n__decorate([\n    structProp('boolean')\n], NodeStruct.prototype, \"clipping\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"color\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTop\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBottom\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorLeft\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorRight\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTl\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTr\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBl\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBr\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"scaleX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"scaleY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mount\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mountX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mountY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivot\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivotX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivotY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"rotation\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"parentId\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"zIndex\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"zIndexLocked\", null);\n//# sourceMappingURL=NodeStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SharedObject } from '@lightningjs/threadx';\nexport class SharedNode extends SharedObject {\n    /**\n     * Must have lock on sharedNode before calling constructor!\n     *\n     * @param sharedNodeStruct\n     */\n    constructor(sharedNodeStruct, extendedCurProps) {\n        super(sharedNodeStruct, {\n            ...extendedCurProps,\n            x: sharedNodeStruct.x,\n            y: sharedNodeStruct.y,\n            width: sharedNodeStruct.width,\n            height: sharedNodeStruct.height,\n            alpha: sharedNodeStruct.alpha,\n            clipping: sharedNodeStruct.clipping,\n            color: sharedNodeStruct.color,\n            colorTop: sharedNodeStruct.colorTop,\n            colorBottom: sharedNodeStruct.colorBottom,\n            colorLeft: sharedNodeStruct.colorLeft,\n            colorRight: sharedNodeStruct.colorRight,\n            colorTl: sharedNodeStruct.colorTl,\n            colorTr: sharedNodeStruct.colorTr,\n            colorBl: sharedNodeStruct.colorBl,\n            colorBr: sharedNodeStruct.colorBr,\n            parentId: sharedNodeStruct.parentId,\n            zIndex: sharedNodeStruct.zIndex,\n            zIndexLocked: sharedNodeStruct.zIndexLocked,\n            scaleX: sharedNodeStruct.scaleX,\n            scaleY: sharedNodeStruct.scaleY,\n            mount: sharedNodeStruct.mount,\n            mountX: sharedNodeStruct.mountX,\n            mountY: sharedNodeStruct.mountY,\n            pivot: sharedNodeStruct.pivot,\n            pivotX: sharedNodeStruct.pivotX,\n            pivotY: sharedNodeStruct.pivotY,\n            rotation: sharedNodeStruct.rotation,\n        });\n    }\n}\n//# sourceMappingURL=SharedNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nexport class ThreadXMainAnimationController {\n    node;\n    id;\n    stoppedPromise = null;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    constructor(node, id) {\n        this.node = node;\n        this.id = id;\n        this.onAnimationFinished = this.onAnimationFinished.bind(this);\n        this.state = 'stopped';\n    }\n    state;\n    start() {\n        if (this.stoppedResolve === null) {\n            this.makeStoppedPromise();\n            this.node.on('animationFinished', this.onAnimationFinished);\n        }\n        this.state = 'running';\n        this.node.emit('startAnimation', { id: this.id });\n        return this;\n    }\n    stop() {\n        this.node.emit('stopAnimation', { id: this.id });\n        this.node.off('animationFinished', this.onAnimationFinished);\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n        }\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.node.emit('pauseAnimation', { id: this.id });\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        return this;\n    }\n    waitUntilStopped() {\n        this.makeStoppedPromise();\n        const promise = this.stoppedPromise;\n        assertTruthy(promise);\n        return promise;\n    }\n    onAnimationFinished(target, { id, loop }) {\n        if (id === this.id) {\n            this.node.off('animationFinished', this.onAnimationFinished);\n            this.stoppedResolve?.();\n            this.stoppedResolve = null;\n            this.state = 'stopped';\n        }\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n}\n//# sourceMappingURL=ThreadXMainAnimationController.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nimport { SharedNode } from './SharedNode.js';\nimport { ThreadXMainAnimationController } from './ThreadXMainAnimationController.js';\nexport class ThreadXMainNode extends SharedNode {\n    rendererMain;\n    nextAnimationId = 1;\n    _parent = null;\n    _children = [];\n    _texture = null;\n    _shader = null;\n    _src = '';\n    /**\n     * FinalizationRegistry for animation controllers. When an animation\n     * controller is garbage collected, we let the render worker know so that\n     * it can remove it's corresponding animation controler from it's stored\n     * Set. This should ultimately allow the render worker to garbage collect\n     * it's animation controller. The animation itself independent from the animation\n     * controller, so it will continue to run until it's finished regardless of\n     * whether or not the animation controller is garbage collected.\n     */\n    animationRegistry = new FinalizationRegistry((id) => {\n        this.emit('destroyAnimation', { id });\n    });\n    constructor(rendererMain, sharedNodeStruct, extendedCurProps) {\n        super(sharedNodeStruct, extendedCurProps);\n        this.rendererMain = rendererMain;\n    }\n    get texture() {\n        return this._texture;\n    }\n    set texture(texture) {\n        if (this._texture === texture) {\n            return;\n        }\n        if (this._texture) {\n            this.rendererMain.textureTracker.decrementTextureRefCount(this._texture);\n        }\n        if (texture) {\n            this.rendererMain.textureTracker.incrementTextureRefCount(texture);\n        }\n        this._texture = texture;\n        if (texture) {\n            this.emit('loadTexture', texture);\n        }\n        else {\n            this.emit('unloadTexture', {});\n        }\n    }\n    get shader() {\n        return this._shader;\n    }\n    set shader(shader) {\n        if (this._shader === shader) {\n            return;\n        }\n        this._shader = shader;\n        if (shader) {\n            this.emit('loadShader', shader);\n        }\n    }\n    get scale() {\n        if (this.scaleX !== this.scaleY) {\n            return null;\n        }\n        return this.scaleX;\n    }\n    set scale(scale) {\n        // We ignore `null` when it's set.\n        if (scale === null) {\n            return;\n        }\n        this.scaleX = scale;\n        this.scaleY = scale;\n    }\n    animate(props, settings) {\n        const id = this.nextAnimationId++;\n        this.emit('createAnimation', { id, props, settings });\n        const controller = new ThreadXMainAnimationController(this, id);\n        this.animationRegistry.register(controller, id);\n        return controller;\n    }\n    get src() {\n        return this._src;\n    }\n    set src(imageUrl) {\n        if (this._src === imageUrl) {\n            return;\n        }\n        this._src = imageUrl;\n        if (!imageUrl) {\n            this.texture = null;\n            return;\n        }\n        this.texture = this.rendererMain.createTexture('ImageTexture', {\n            src: imageUrl,\n        });\n    }\n    //#region Parent/Child Props\n    get parent() {\n        return this._parent;\n    }\n    set parent(newParent) {\n        const oldParent = this._parent;\n        this._parent = newParent;\n        this.parentId = newParent?.id ?? 0;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"ThreadXMainNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    //#endregion Parent/Child Props\n    get props() {\n        return this.curProps;\n    }\n    destroy() {\n        super.destroy();\n        this.texture = null;\n    }\n}\n//# sourceMappingURL=ThreadXMainNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { structProp, genTypeId } from '@lightningjs/threadx';\nimport { NodeStruct } from './NodeStruct.js';\nexport class TextNodeStruct extends NodeStruct {\n    static typeId = genTypeId('TEXT');\n    get text() {\n        return '';\n    }\n    set text(value) {\n        // Decorator will handle this\n    }\n    get textRendererOverride() {\n        return null;\n    }\n    set textRendererOverride(value) {\n        // Decorator will handle this\n    }\n    get fontSize() {\n        return 0;\n    }\n    set fontSize(value) {\n        // Decorator will handle this\n    }\n    get fontFamily() {\n        return '';\n    }\n    set fontFamily(value) {\n        // Decorator will handle this\n    }\n    get fontStretch() {\n        return 'normal';\n    }\n    set fontStretch(value) {\n        // Decorator will handle this\n    }\n    get fontStyle() {\n        return 'normal';\n    }\n    set fontStyle(value) {\n        // Decorator will handle this\n    }\n    get fontWeight() {\n        return 'normal';\n    }\n    set fontWeight(value) {\n        // Decorator will handle this\n    }\n    get textAlign() {\n        return 'left';\n    }\n    set textAlign(value) {\n        // Decorator will handle this\n    }\n    get contain() {\n        return 'none';\n    }\n    set contain(value) {\n        // Decorator will handle this\n    }\n    get scrollable() {\n        return false;\n    }\n    set scrollable(value) {\n        // Decorator will handle this\n    }\n    get scrollY() {\n        return 0;\n    }\n    set scrollY(value) {\n        // Decorator will handle this\n    }\n    get offsetY() {\n        return 0;\n    }\n    set offsetY(value) {\n        // Decorator will handle this\n    }\n    get letterSpacing() {\n        return 0;\n    }\n    set letterSpacing(value) {\n        // Decorator will handle this\n    }\n    get lineHeight() {\n        return 0;\n    }\n    set lineHeight(value) {\n        // Decorator will handle this\n    }\n}\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"text\", null);\n__decorate([\n    structProp('string', {\n        propToBuffer(value) {\n            // Property accepts `null` but the buffer only accepts a string.\n            // Encode `null` as a special string\n            return value ?? '$$null';\n        },\n        bufferToProp(value) {\n            return value === '$$null' ? null : value;\n        },\n    })\n], TextNodeStruct.prototype, \"textRendererOverride\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"fontSize\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontFamily\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontStretch\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontStyle\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontWeight\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"textAlign\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"contain\", null);\n__decorate([\n    structProp('boolean')\n], TextNodeStruct.prototype, \"scrollable\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"scrollY\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"offsetY\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"letterSpacing\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"lineHeight\", null);\n//# sourceMappingURL=TextNodeStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ThreadXMainNode } from './ThreadXMainNode.js';\nexport class ThreadXMainTextNode extends ThreadXMainNode {\n    _debug = {};\n    constructor(rendererMain, sharedNodeStruct) {\n        super(rendererMain, sharedNodeStruct, {\n            text: sharedNodeStruct.text,\n            textRendererOverride: sharedNodeStruct.textRendererOverride,\n            fontSize: sharedNodeStruct.fontSize,\n            fontFamily: sharedNodeStruct.fontFamily,\n            fontStretch: sharedNodeStruct.fontStretch,\n            fontStyle: sharedNodeStruct.fontStyle,\n            fontWeight: sharedNodeStruct.fontWeight,\n            lineHeight: sharedNodeStruct.lineHeight,\n            contain: sharedNodeStruct.contain,\n            letterSpacing: sharedNodeStruct.letterSpacing,\n            offsetY: sharedNodeStruct.offsetY,\n            scrollable: sharedNodeStruct.scrollable,\n            scrollY: sharedNodeStruct.scrollY,\n            textAlign: sharedNodeStruct.textAlign,\n        });\n    }\n    get debug() {\n        return this._debug;\n    }\n    set debug(debug) {\n        if (this._debug === debug) {\n            return;\n        }\n        this._debug = debug;\n        this.emit('debug', debug);\n    }\n}\n//# sourceMappingURL=ThreadXMainTextNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ThreadX, BufferStruct } from '@lightningjs/threadx';\nimport { NodeStruct } from './NodeStruct.js';\nimport { ThreadXMainNode } from './ThreadXMainNode.js';\nimport { assertTruthy } from '../../utils.js';\nimport { TextNodeStruct, } from './TextNodeStruct.js';\nimport { ThreadXMainTextNode } from './ThreadXMainTextNode.js';\nexport class ThreadXCoreDriver {\n    settings;\n    threadx;\n    rendererMain = null;\n    root = null;\n    constructor(settings) {\n        this.settings = settings;\n        this.threadx = ThreadX.init({\n            workerId: 1,\n            workerName: 'main',\n            sharedObjectFactory: (buffer) => {\n                const typeId = BufferStruct.extractTypeId(buffer);\n                const rendererMain = this.rendererMain;\n                assertTruthy(rendererMain);\n                if (typeId === NodeStruct.typeId) {\n                    const nodeStruct = new NodeStruct(buffer);\n                    return nodeStruct.lock(() => {\n                        return new ThreadXMainNode(rendererMain, nodeStruct);\n                    });\n                }\n                else if (typeId === TextNodeStruct.typeId) {\n                    const nodeStruct = new TextNodeStruct(buffer);\n                    return nodeStruct.lock(() => {\n                        return new ThreadXMainTextNode(rendererMain, nodeStruct);\n                    });\n                }\n                return null;\n            },\n        });\n        this.threadx.registerWorker('renderer', new Worker(this.settings.coreWorkerUrl, { type: 'module' }));\n    }\n    async init(rendererMain, rendererSettings, canvas) {\n        this.rendererMain = rendererMain;\n        const offscreenCanvas = canvas.transferControlToOffscreen();\n        const rootNodeId = (await this.threadx.sendMessageAsync('renderer', {\n            type: 'init',\n            canvas: offscreenCanvas,\n            appWidth: rendererSettings.appWidth,\n            appHeight: rendererSettings.appHeight,\n            deviceLogicalPixelRatio: rendererSettings.deviceLogicalPixelRatio,\n            devicePhysicalPixelRatio: rendererSettings.devicePhysicalPixelRatio,\n            clearColor: rendererSettings.clearColor,\n            coreExtensionModule: rendererSettings.coreExtensionModule,\n        }, [offscreenCanvas]));\n        // The Render worker shares the root node with this worker during the\n        // 'init' call above. That call returns the ID of the root node, which\n        // we can use to retrieve it from the shared object store.\n        const rootNode = this.threadx.getSharedObjectById(rootNodeId);\n        assertTruthy(rootNode instanceof ThreadXMainNode, 'Unexpected root node type');\n        this.root = rootNode;\n    }\n    getRootNode() {\n        assertTruthy(this.root, 'Driver not initialized');\n        return this.root;\n    }\n    createNode(props) {\n        const rendererMain = this.rendererMain;\n        assertTruthy(rendererMain);\n        const bufferStruct = new NodeStruct();\n        Object.assign(bufferStruct, {\n            // Node specific properties\n            x: props.x,\n            y: props.y,\n            width: props.width,\n            height: props.height,\n            parentId: props.parent ? props.parent.id : 0,\n            clipping: props.clipping,\n            color: props.color,\n            colorTop: props.colorTop,\n            colorRight: props.colorBottom,\n            colorBottom: props.colorBottom,\n            colorLeft: props.colorLeft,\n            colorTl: props.colorTl,\n            colorTr: props.colorTr,\n            colorBl: props.colorBl,\n            colorBr: props.colorBr,\n            alpha: props.alpha,\n            zIndex: props.zIndex,\n            zIndexLocked: props.zIndexLocked,\n            scaleX: props.scaleX,\n            scaleY: props.scaleY,\n            mount: props.mount,\n            mountX: props.mountX,\n            mountY: props.mountY,\n            pivot: props.pivot,\n            pivotX: props.pivotX,\n            pivotY: props.pivotY,\n            rotation: props.rotation,\n        });\n        const node = new ThreadXMainNode(rendererMain, bufferStruct);\n        node.once('beforeDestroy', this.onBeforeDestroyNode.bind(this, node));\n        this.threadx.shareObjects('renderer', [node]).catch(console.error);\n        node.shader = props.shader ?? null;\n        node.texture = props.texture ?? null;\n        node.src = props.src ?? '';\n        this.onCreateNode(node);\n        return node;\n    }\n    createTextNode(props) {\n        const rendererMain = this.rendererMain;\n        assertTruthy(rendererMain);\n        const bufferStruct = new TextNodeStruct();\n        Object.assign(bufferStruct, {\n            // Node specific properties\n            x: props.x,\n            y: props.y,\n            width: props.width,\n            height: props.height,\n            parentId: props.parent ? props.parent.id : 0,\n            clipping: props.clipping,\n            color: props.color,\n            colorTop: props.colorTop,\n            colorRight: props.colorBottom,\n            colorBottom: props.colorBottom,\n            colorLeft: props.colorLeft,\n            colorTl: props.colorTl,\n            colorTr: props.colorTr,\n            colorBl: props.colorBl,\n            colorBr: props.colorBr,\n            alpha: props.alpha,\n            zIndex: props.zIndex,\n            zIndexLocked: props.zIndexLocked,\n            scaleX: props.scaleX,\n            scaleY: props.scaleY,\n            mount: props.mount,\n            mountX: props.mountX,\n            mountY: props.mountY,\n            pivot: props.pivot,\n            pivotX: props.pivotX,\n            pivotY: props.pivotY,\n            rotation: props.rotation,\n            // Text specific properties\n            text: props.text,\n            textRendererOverride: props.textRendererOverride,\n            fontSize: props.fontSize,\n            fontFamily: props.fontFamily,\n            fontWeight: props.fontWeight,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            lineHeight: props.lineHeight,\n            contain: props.contain,\n            letterSpacing: props.letterSpacing,\n            offsetY: props.offsetY,\n            textAlign: props.textAlign,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n        });\n        const node = new ThreadXMainTextNode(rendererMain, bufferStruct);\n        node.once('beforeDestroy', this.onBeforeDestroyNode.bind(this, node));\n        this.threadx.shareObjects('renderer', [node]).catch(console.error);\n        node.shader = props.shader ?? null;\n        node.texture = props.texture ?? null;\n        node.src = props.src ?? '';\n        node.debug = props.debug ?? {};\n        this.onCreateNode(node);\n        return node;\n    }\n    // TODO: Remove?\n    destroyNode(node) {\n        node.destroy();\n    }\n    releaseTexture(textureDescId) {\n        this.threadx.sendMessage('renderer', {\n            type: 'releaseTexture',\n            textureDescId,\n        });\n    }\n    onCreateNode(node) {\n        return;\n    }\n    onBeforeDestroyNode(node) {\n        return;\n    }\n}\n//# sourceMappingURL=ThreadXCoreDriver.js.map","export default import.meta.ROLLUP_FILE_URL_4fe8267c;","export default import.meta.ROLLUP_FILE_URL_cd5e846a;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MainCoreDriver,\n  RendererMain,\n  ThreadXCoreDriver,\n  type ICoreDriver,\n  type NodeLoadedPayload,\n  type RendererMainSettings,\n} from '@lightningjs/renderer';\nimport { assertTruthy } from '@lightningjs/renderer/utils';\nimport coreWorkerUrl from './common/CoreWorker.js?importChunkUrl';\nimport coreExtensionModuleUrl from './common/AppCoreExtension.js?importChunkUrl';\nimport type { ExampleSettings } from './common/ExampleSettings.js';\n\ninterface TestModule {\n  default: (settings: ExampleSettings) => Promise<void>;\n  customSettings?: (\n    urlParams: URLSearchParams,\n  ) => Partial<RendererMainSettings>;\n  automation?: (settings: ExampleSettings) => Promise<void>;\n}\n\nconst getTestPath = (testName: string) => `./tests/${testName}.ts`;\nconst testRegex = /\\/tests\\/(.*)\\.ts$/;\nconst getTestName = (path: string) => {\n  const match = path.match(testRegex);\n  if (!match) {\n    throw new Error(`Invalid test path: ${path}`);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return match[1]!;\n};\n\nconst testModules = import.meta.glob('./tests/*.ts') as Record<\n  string,\n  () => Promise<TestModule>\n>;\n\n(async () => {\n  // URL params\n  // - driver: main | threadx (default: threadx)\n  // - test: <test name> (default: test)\n  // - showOverlay: true | false (default: true)\n  // - finalizationRegistry: true | false (default: false)\n  //   - Use FinalizationRegistryTextureUsageTracker instead of\n  //     ManualCountTextureUsageTracker\n  // - automation: true | false (default: false)\n  const urlParams = new URLSearchParams(window.location.search);\n  const automation = urlParams.get('automation') === 'true';\n  const test = urlParams.get('test') || (automation ? null : 'test');\n  const showOverlay = urlParams.get('overlay') !== 'false';\n\n  let driverName = urlParams.get('driver');\n  if (driverName !== 'main' && driverName !== 'threadx') {\n    driverName = 'main';\n  }\n\n  if (test) {\n    await runTest(test, driverName, urlParams, showOverlay);\n    return;\n  }\n  assertTruthy(automation);\n  await runAutomation(driverName);\n})().catch((err) => {\n  console.error(err);\n});\n\nasync function runTest(\n  test: string,\n  driverName: string,\n  urlParams: URLSearchParams,\n  showOverlay: boolean,\n) {\n  const testModule = testModules[getTestPath(test)];\n  if (!testModule) {\n    throw new Error(`Test \"${test}\" not found`);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\n  const module = await testModule();\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n  const customSettings: Partial<RendererMainSettings> =\n    typeof module.customSettings === 'function'\n      ? module.customSettings(urlParams)\n      : {};\n\n  const { renderer, appElement } = await initRenderer(\n    driverName,\n    customSettings,\n  );\n\n  if (showOverlay) {\n    const overlayText = renderer.createTextNode({\n      color: 0xff0000ff,\n      text: `Test: ${test} | Driver: ${driverName}`,\n      zIndex: 99999,\n      parent: renderer.root,\n      fontSize: 50,\n    });\n    overlayText.once(\n      'loaded',\n      (target: any, { dimensions }: NodeLoadedPayload) => {\n        overlayText.x = renderer.settings.appWidth - dimensions.width - 20;\n        overlayText.y = renderer.settings.appHeight - dimensions.height - 20;\n      },\n    );\n  }\n\n  const exampleSettings: ExampleSettings = {\n    testName: test,\n    renderer,\n    driverName: driverName as 'main' | 'threadx',\n    appElement,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    testRoot: renderer.root!,\n    automation: false,\n    snapshot: async () => {\n      // No-op\n    },\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n  await module.default(exampleSettings);\n}\n\nasync function initRenderer(\n  driverName: string,\n  customSettings?: Partial<RendererMainSettings>,\n) {\n  let driver: ICoreDriver | null = null;\n\n  if (driverName === 'main') {\n    driver = new MainCoreDriver();\n  } else {\n    driver = new ThreadXCoreDriver({\n      coreWorkerUrl,\n    });\n  }\n\n  const renderer = new RendererMain(\n    {\n      appWidth: 1920,\n      appHeight: 1080,\n      deviceLogicalPixelRatio: 0.6666667,\n      devicePhysicalPixelRatio: 1,\n      clearColor: 0x00000000,\n      coreExtensionModule: coreExtensionModuleUrl,\n      ...customSettings,\n    },\n    'app',\n    driver,\n  );\n\n  await renderer.init();\n\n  const appElement = document.querySelector('#app');\n\n  assertTruthy(appElement instanceof HTMLDivElement);\n\n  return { renderer, appElement };\n}\n\nasync function runAutomation(driverName: string) {\n  const { renderer, appElement } = await initRenderer(driverName);\n\n  // Iterate through all test modules\n  for (const testPath in testModules) {\n    const testModule = testModules[testPath];\n    const testName = getTestName(testPath);\n    assertTruthy(testModule);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { automation, customSettings } = await testModule();\n    console.log(`Attempting to run automation for ${testName}...`);\n    if (automation) {\n      console.log(`Running automation for ${testName}...`);\n      if (customSettings) {\n        console.error('customSettings not supported for automation');\n      } else {\n        const testRoot = renderer.createNode({\n          parent: renderer.root,\n          color: 0x00000000,\n        });\n        const exampleSettings: ExampleSettings = {\n          testName,\n          renderer,\n          testRoot,\n          driverName: driverName as 'main' | 'threadx',\n          appElement,\n          automation: true,\n          snapshot: async () => {\n            const snapshot = (window as any).snapshot as\n              | ((testName: string) => Promise<void>)\n              | undefined;\n            if (snapshot) {\n              console.error(`Calling snapshot(${testName})`);\n              await snapshot(testName);\n            } else {\n              console.error(\n                'snapshot() not defined (not running in playwright?)',\n              );\n            }\n          },\n        };\n        await automation(exampleSettings);\n        testRoot.parent = null;\n        testRoot.destroy();\n      }\n    }\n  }\n  const doneTests = (window as any).doneTests as\n    | (() => Promise<void>)\n    | undefined;\n  if (doneTests) {\n    console.error('Calling doneTests()');\n    await doneTests();\n  } else {\n    console.error('doneTests() not defined (not running in playwright?)');\n  }\n}\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"file":"assets/index-a24d8497.js"}