{"version":3,"file":"LocalStorage-f60767e1.js","sources":["../../common/LocalStorage.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Retreive state from local storage (if localStorage is available)\n// and set the state of the app accordingly.\nexport function loadStorage<T>(testName: string): Partial<T> | null {\n  if (typeof window.localStorage === 'undefined') {\n    return null;\n  }\n  try {\n    const serializedState = localStorage.getItem(`${testName}-state`);\n    if (serializedState === null) {\n      return null;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return null;\n  }\n}\n\n// Save the state of the app to local storage (if localStorage is available).\nexport function saveStorage<T>(testName: string, state: Partial<T>): void {\n  if (typeof window.localStorage === 'undefined') {\n    return;\n  }\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(`${testName}-state`, serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n// Clear the state of the app from local storage (if localStorage is available).\nexport function clearStorage(testName: string): void {\n  if (typeof window.localStorage === 'undefined') {\n    return;\n  }\n  try {\n    localStorage.removeItem(`${testName}-state`);\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n"],"names":[],"mappings":"AAqBO,SAAS,YAAe,UAAqC;AAC9D,MAAA,OAAO,OAAO,iBAAiB,aAAa;AACvC,WAAA;AAAA,EACT;AACI,MAAA;AACF,UAAM,kBAAkB,aAAa,QAAQ,GAAG,QAAQ,QAAQ;AAChE,QAAI,oBAAoB,MAAM;AACrB,aAAA;AAAA,IACT;AACO,WAAA,KAAK,MAAM,eAAe;AAAA,WAC1B,KAAK;AACL,WAAA;AAAA,EACT;AACF;AAGgB,SAAA,YAAe,UAAkB,OAAyB;AACpE,MAAA,OAAO,OAAO,iBAAiB,aAAa;AAC9C;AAAA,EACF;AACI,MAAA;AACI,UAAA,kBAAkB,KAAK,UAAU,KAAK;AAC5C,iBAAa,QAAQ,GAAG,QAAQ,UAAU,eAAe;AAAA,WAClD,KAAK;AAAA,EAEd;AACF;AAGO,SAAS,aAAa,UAAwB;AAC/C,MAAA,OAAO,OAAO,iBAAiB,aAAa;AAC9C;AAAA,EACF;AACI,MAAA;AACW,iBAAA,WAAW,GAAG,QAAQ,QAAQ;AAAA,WACpC,KAAK;AAAA,EAEd;AACF;"}