{"version":3,"file":"text-offscreen-move-eb2c6aa6.js","sources":["../../tests/text-offscreen-move.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  INode,\n  ITextNodeWritableProps,\n  RendererMain,\n} from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { PageContainer } from '../common/PageContainer.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\n/**\n * This test is to ensure that text that starts offscreen and moves onscreen\n * is rendered correctly.\n *\n * This test was designed around the following bug report:\n * https://github.com/lightning-js/renderer/issues/50\n *\n * @param param0\n */\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Offscreen Move Tests',\n  });\n\n  pageContainer.pushPage(createTestCase(renderer, 'sdf', 'none'));\n  pageContainer.pushPage(createTestCase(renderer, 'sdf', 'width'));\n  pageContainer.pushPage(createTestCase(renderer, 'sdf', 'both'));\n  pageContainer.pushPage(createTestCase(renderer, 'canvas', 'none'));\n  pageContainer.pushPage(createTestCase(renderer, 'canvas', 'width'));\n  pageContainer.pushPage(createTestCase(renderer, 'canvas', 'both'));\n\n  await delay(200);\n  pageContainer.finalizePages();\n  return pageContainer;\n}\n\nconst commonTextProps = {\n  mount: 0.5,\n  width: 400,\n  height: 400,\n  contain: 'none',\n  text: 'Test passes if this text appears only as green',\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'canvas',\n  fontSize: 50,\n} satisfies Partial<ITextNodeWritableProps>;\n\nfunction createTestCase(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n  contain: ITextNodeWritableProps['contain'],\n) {\n  return async function (page: INode) {\n    const subheader = renderer.createTextNode({\n      x: 0,\n      y: 10,\n      text: '',\n      fontFamily: 'Ubuntu',\n      textRendererOverride: 'sdf',\n      fontSize: 30,\n      parent: page,\n    });\n\n    subheader.text = `textRenderer = ${textRenderer}\\ncontain = ${contain}`;\n    renderer.createTextNode({\n      ...commonTextProps,\n      color: 0xff0000ff,\n      x: renderer.settings.appWidth / 2,\n      y: renderer.settings.appHeight / 2,\n      textRendererOverride: textRenderer,\n      contain,\n      parent: page,\n    });\n\n    const offscreenStartText = renderer.createTextNode({\n      ...commonTextProps,\n      color: 0x00ff00ff,\n      x: -1000,\n      y: -1000,\n      textRendererOverride: textRenderer,\n      contain,\n      parent: page,\n    });\n\n    // Move Offscreen Text on screen\n    offscreenStartText.x = renderer.settings.appWidth / 2;\n    offscreenStartText.y = renderer.settings.appHeight / 2;\n  };\n}\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"names":[],"mappings":";;AA2BA,eAAsB,WAAW,UAA2B;AAE1D,SAAO,MAAM,KAAK,QAAQ,GAAG,cAAc;AAC7C;AAWA,eAA8B,KAAK,UAA2B;AACtD,QAAA,EAAE,SAAa,IAAA;AACf,QAAA,gBAAgB,IAAI,cAAc,UAAU;AAAA,IAChD,OAAO,SAAS,SAAS;AAAA,IACzB,QAAQ,SAAS,SAAS;AAAA,IAC1B,OAAO;AAAA,EAAA,CACR;AAED,gBAAc,SAAS,eAAe,UAAU,OAAO,MAAM,CAAC;AAC9D,gBAAc,SAAS,eAAe,UAAU,OAAO,OAAO,CAAC;AAC/D,gBAAc,SAAS,eAAe,UAAU,OAAO,MAAM,CAAC;AAC9D,gBAAc,SAAS,eAAe,UAAU,UAAU,MAAM,CAAC;AACjE,gBAAc,SAAS,eAAe,UAAU,UAAU,OAAO,CAAC;AAClE,gBAAc,SAAS,eAAe,UAAU,UAAU,MAAM,CAAC;AAEjE,QAAM,MAAM,GAAG;AACf,gBAAc,cAAc;AACrB,SAAA;AACT;AAEA,MAAM,kBAAkB;AAAA,EACtB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,sBAAsB;AAAA,EACtB,UAAU;AACZ;AAEA,SAAS,eACP,UACA,cACA,SACA;AACA,SAAO,eAAgB,MAAa;AAC5B,UAAA,YAAY,SAAS,eAAe;AAAA,MACxC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,sBAAsB;AAAA,MACtB,UAAU;AAAA,MACV,QAAQ;AAAA,IAAA,CACT;AAES,cAAA,OAAO,kBAAkB,YAAY;AAAA,YAAe,OAAO;AACrE,aAAS,eAAe;AAAA,MACtB,GAAG;AAAA,MACH,OAAO;AAAA,MACP,GAAG,SAAS,SAAS,WAAW;AAAA,MAChC,GAAG,SAAS,SAAS,YAAY;AAAA,MACjC,sBAAsB;AAAA,MACtB;AAAA,MACA,QAAQ;AAAA,IAAA,CACT;AAEK,UAAA,qBAAqB,SAAS,eAAe;AAAA,MACjD,GAAG;AAAA,MACH,OAAO;AAAA,MACP,GAAG;AAAA,MACH,GAAG;AAAA,MACH,sBAAsB;AAAA,MACtB;AAAA,MACA,QAAQ;AAAA,IAAA,CACT;AAGkB,uBAAA,IAAI,SAAS,SAAS,WAAW;AACjC,uBAAA,IAAI,SAAS,SAAS,YAAY;AAAA,EAAA;AAEzD;AAEA,SAAS,MAAM,IAAY;AACzB,SAAO,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,EAAE,CAAC;AACzD;"}