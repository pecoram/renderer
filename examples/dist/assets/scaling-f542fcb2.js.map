{"version":3,"file":"scaling-f542fcb2.js","sources":["../../tests/scaling.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport type { INodeWritableProps } from '../../dist/exports/main-api.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\nimport robotImg from '../assets/robot/robot.png';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Scaling',\n  });\n\n  await paginateTestRows(pageContainer, [\n    {\n      title: 'Base Node (`scale`, mount = 0)',\n      content: async (rowNode) => {\n        // The three Base Node test rows should render identically despite\n        // different mount values, as the x/y coordinates are shifted appropriately\n        // to cancel out the difference in mount.\n        const nodeProps = {\n          // mount: 0, (should be default)\n          x: 50,\n          y: 50,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scale: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scale: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scale: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scale`, mount = 0.5)',\n      content: async (rowNode) => {\n        const nodeProps = {\n          mount: 0.5,\n          x: 100,\n          y: 100,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scale: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scale: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scale: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scale`, mount = 1)',\n      content: async (rowNode) => {\n        const nodeProps = {\n          mount: 1,\n          x: 150,\n          y: 150,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scale: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scale: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scale: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scaleX`, mount = 0)',\n      content: async (rowNode) => {\n        // The three Base Node test rows should render identically despite\n        // different mount values, as the x/y coordinates are shifted appropriately\n        // to cancel out the difference in mount.\n        const nodeProps = {\n          // mount: 0, (should be default)\n          x: 50,\n          y: 50,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scaleX: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scaleX: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scaleX: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scaleX`, mount = 0.5)',\n      content: async (rowNode) => {\n        const nodeProps = {\n          mount: 0.5,\n          x: 100,\n          y: 100,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scaleX: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scaleX: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scaleX: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scaleX`, mount = 1)',\n      content: async (rowNode) => {\n        const nodeProps = {\n          mount: 1,\n          x: 150,\n          y: 150,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scaleX: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scaleX: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scaleX: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scaleY`, mount = 0)',\n      content: async (rowNode) => {\n        // The three Base Node test rows should render identically despite\n        // different mount values, as the x/y coordinates are shifted appropriately\n        // to cancel out the difference in mount.\n        const nodeProps = {\n          // mount: 0, (should be default)\n          x: 50,\n          y: 50,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scaleY: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scaleY: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scaleY: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scaleY`, mount = 0.5)',\n      content: async (rowNode) => {\n        const nodeProps = {\n          mount: 0.5,\n          x: 100,\n          y: 100,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scaleY: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scaleY: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scaleY: 2,\n          }),\n        ]);\n      },\n    },\n    {\n      title: 'Base Node (`scaleY`, mount = 1)',\n      content: async (rowNode) => {\n        const nodeProps = {\n          mount: 1,\n          x: 150,\n          y: 150,\n          width: 100,\n          height: 100,\n          src: robotImg,\n        } satisfies Partial<INodeWritableProps>;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          renderer.createNode({\n            ...nodeProps,\n          }),\n          'scale 2 ->\\npivot 0.5 ->',\n          renderer.createNode({\n            ...nodeProps,\n            scaleY: 2,\n            // pivot: 0.5, (should be default)\n          }),\n          'pivot 0 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 0,\n            scaleY: 2,\n          }),\n          'pivot 1 ->',\n          renderer.createNode({\n            ...nodeProps,\n            pivot: 1,\n            scaleY: 2,\n          }),\n        ]);\n      },\n    },\n  ]);\n\n  return pageContainer;\n}\n"],"names":[],"mappings":"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"}